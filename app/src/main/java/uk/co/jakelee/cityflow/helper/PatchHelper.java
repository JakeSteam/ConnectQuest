package uk.co.jakelee.cityflow.helper;

import android.app.Activity;
import android.os.AsyncTask;
import android.view.View;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

import uk.co.jakelee.cityflow.R;
import uk.co.jakelee.cityflow.main.MainActivity;
import uk.co.jakelee.cityflow.model.Achievement;
import uk.co.jakelee.cityflow.model.Background;
import uk.co.jakelee.cityflow.model.Boost;
import uk.co.jakelee.cityflow.model.Iap;
import uk.co.jakelee.cityflow.model.Pack;
import uk.co.jakelee.cityflow.model.Puzzle;
import uk.co.jakelee.cityflow.model.Setting;
import uk.co.jakelee.cityflow.model.ShopCategory;
import uk.co.jakelee.cityflow.model.ShopItem;
import uk.co.jakelee.cityflow.model.Statistic;
import uk.co.jakelee.cityflow.model.Text;
import uk.co.jakelee.cityflow.model.Tile;
import uk.co.jakelee.cityflow.model.TileType;

import static uk.co.jakelee.cityflow.main.MainActivity.prefs;

public class PatchHelper extends AsyncTask<String, String, String> {
    public final static int NO_DATABASE = 0;
    public final static int V1_0_0 = 1;
    private Activity callingActivity;
    private TextView progressText;
    private ProgressBar progressBar;

    public PatchHelper(Activity activity) {
        this.callingActivity = activity;
        this.progressText = (TextView)activity.findViewById(R.id.progressText);
        this.progressBar = (ProgressBar)activity.findViewById(R.id.progressBar);
    }

    public PatchHelper(Activity activity, boolean runningCloudImport) {
        this.callingActivity = activity;
    }

    private void initialSetup() {
        setProgress("Achievements", 0);
        createAchievement();
        setProgress("Backgrounds", 3);
        createBackground();
        setProgress("Boosts", 5);
        createBoost();
        setProgress("Packs", 10);
        createPack();
        setProgress("Settings", 15);
        createSetting();
        setProgress("Statistics", 20);
        createStatistic();
        setProgress("Store Items", 25);
        createStoreItem();
        createIap();
        setProgress("Store Categories", 30);
        createStoreCategory();
        setProgress("Tile Types", 35);
        createTileType();

        // Add 40 - 70 checkpoints inside createText
        setProgress("Text", 40);
        createText();

        // Add 70 - 100 checkpoints inside createPuzzle
        setProgress("Puzzles", 70);
        createPuzzlesPack1();

        prefs.edit().putInt("language", Setting.get(Constants.SETTING_LANGUAGE).getIntValue()).apply();
    }

    private void setProgress(String currentTask, int percentage) {
        if (progressText != null && progressBar != null) {
            publishProgress(currentTask);
            progressBar.setProgress(percentage);
        }
    }

    @Override
    protected String doInBackground(String... params) {
        // Should inform the user that they've just updated if a patch has been installed
        String action = "";
        if (MainActivity.prefs.getInt("databaseVersion", PatchHelper.NO_DATABASE) <= PatchHelper.NO_DATABASE) {
            initialSetup();
            new Thread(new Runnable() {
                public void run() {
                    createOtherPuzzles();
                }
            }).start();
            MainActivity.prefs.edit().putInt("databaseVersion", PatchHelper.V1_0_0).apply();
        }
        return action;
    }

    private void createOtherPuzzles() {
        createPuzzlesPack2();
        createPuzzlesPack3();
        createPuzzlesPack4();
        createPuzzlesPack5();
        createPuzzlesPack6();
        createPuzzlesPack7();
        createPuzzlesPack8();
    }

    @Override
    protected void onPostExecute(String result) {
        if (result.length() > 0) {
            AlertHelper.success(callingActivity, result);
        }

        RelativeLayout mainMenuWrapper = (RelativeLayout) callingActivity.findViewById(R.id.mainMenuWrapper);
        RelativeLayout progressWrapper = (RelativeLayout) callingActivity.findViewById(R.id.progressWrapper);
        if (mainMenuWrapper != null && progressWrapper != null) {
            progressWrapper.setVisibility(View.GONE);
            mainMenuWrapper.setVisibility(View.VISIBLE);
        }
    }

    @Override
    protected void onPreExecute() {}

    @Override
    protected void onProgressUpdate(String... values) {
            progressText.setText("Installing:\n" + values[0]);
    }

    private void createAchievement() {
        List<Achievement> achievements = new ArrayList<>();
        achievements.add(new Achievement("Turn It Up 1", 100, Constants.STATISTIC_TILES_ROTATED, "CgkIgrzuo64REAIQAw", Constants.BACKGROUND_SUNRISE));
        achievements.add(new Achievement("Turn It Up 2", 1000, Constants.STATISTIC_TILES_ROTATED, "CgkIgrzuo64REAIQFw", Constants.BACKGROUND_GRASS));
        achievements.add(new Achievement("Turn It Up 3", 5000, Constants.STATISTIC_TILES_ROTATED, "CgkIgrzuo64REAIQGA", Constants.BACKGROUND_SALMON));
        achievements.add(new Achievement("Turn It Up 4", 10000, Constants.STATISTIC_TILES_ROTATED, "CgkIgrzuo64REAIQGQ", Constants.BACKGROUND_BLUISH));
        achievements.add(new Achievement("The Best Quest 1", 5, Constants.STATISTIC_QUESTS_COMPLETED, "CgkIgrzuo64REAIQGg", Constants.BACKGROUND_PINK));
        achievements.add(new Achievement("The Best Quest 2", 25, Constants.STATISTIC_QUESTS_COMPLETED, "CgkIgrzuo64REAIQGw", Constants.BACKGROUND_BARK));
        achievements.add(new Achievement("The Best Quest 3", 75, Constants.STATISTIC_QUESTS_COMPLETED, "CgkIgrzuo64REAIQHA", Constants.BACKGROUND_EARTH));
        achievements.add(new Achievement("The Best Quest 4", 200, Constants.STATISTIC_QUESTS_COMPLETED, "CgkIgrzuo64REAIQHQ", Constants.BACKGROUND_STORMY_SKY));
        achievements.add(new Achievement("Working Your Way Through 1", 20, Constants.STATISTIC_PUZZLES_COMPLETED, "CgkIgrzuo64REAIQHg", Constants.BACKGROUND_DEEP_SEA));
        achievements.add(new Achievement("Working Your Way Through 2", 100, Constants.STATISTIC_PUZZLES_COMPLETED, "CgkIgrzuo64REAIQHw", Constants.BACKGROUND_LIMESTONE));
        achievements.add(new Achievement("Working Your Way Through 3", 250, Constants.STATISTIC_PUZZLES_COMPLETED, "CgkIgrzuo64REAIQIA", Constants.BACKGROUND_SAND));
        achievements.add(new Achievement("Working Your Way Through 4", 1500, Constants.STATISTIC_PUZZLES_COMPLETED, "CgkIgrzuo64REAIQIQ", Constants.BACKGROUND_FERN));
        achievements.add(new Achievement("Completionist 1", 20, Constants.STATISTIC_PUZZLES_COMPLETED_FULLY, "CgkIgrzuo64REAIQIg", Constants.BACKGROUND_OLIVE));
        achievements.add(new Achievement("Completionist 2", 100, Constants.STATISTIC_PUZZLES_COMPLETED_FULLY, "CgkIgrzuo64REAIQIw", Constants.BACKGROUND_FAWN));
        achievements.add(new Achievement("Completionist 3", 250, Constants.STATISTIC_PUZZLES_COMPLETED_FULLY, "CgkIgrzuo64REAIQJA", Constants.BACKGROUND_SEDONA));
        achievements.add(new Achievement("Completionist 4", 1500, Constants.STATISTIC_PUZZLES_COMPLETED_FULLY, "CgkIgrzuo64REAIQJQ", Constants.BACKGROUND_EGGSHELL));
        achievements.add(new Achievement("Activate Boost 1", 15, Constants.STATISTIC_BOOSTS_USED, "CgkIgrzuo64REAIQJg", Constants.BACKGROUND_LIMEY));
        achievements.add(new Achievement("Activate Boost 2", 80, Constants.STATISTIC_BOOSTS_USED, "CgkIgrzuo64REAIQJw", Constants.BACKGROUND_RICH_LIMEY));
        achievements.add(new Achievement("Activate Boost 3", 260, Constants.STATISTIC_BOOSTS_USED, "CgkIgrzuo64REAIQKA", Constants.BACKGROUND_CAMOUFLAGE));
        achievements.add(new Achievement("Activate Boost 4", 1000, Constants.STATISTIC_BOOSTS_USED, "CgkIgrzuo64REAIQKQ", Constants.BACKGROUND_OMINOUS));
        achievements.add(new Achievement("Complete Pack 1", 1, Constants.STATISTIC_COMPLETE_PACK_1, "CgkIgrzuo64REAIQKg", Constants.BACKGROUND_CLOUDY));
        achievements.add(new Achievement("Complete Pack 2", 1, Constants.STATISTIC_COMPLETE_PACK_2, "CgkIgrzuo64REAIQKw", Constants.BACKGROUND_BLUE_SKIES));
        achievements.add(new Achievement("Complete Pack 3", 1, Constants.STATISTIC_COMPLETE_PACK_3, "CgkIgrzuo64REAIQLA", Constants.BACKGROUND_PETALS));
        achievements.add(new Achievement("Complete Pack 4", 1, Constants.STATISTIC_COMPLETE_PACK_4, "CgkIgrzuo64REAIQMA", Constants.BACKGROUND_CLAY));
        achievements.add(new Achievement("Complete Pack 5", 1, Constants.STATISTIC_COMPLETE_PACK_5, "CgkIgrzuo64REAIQMQ", Constants.BACKGROUND_CLAY_GREY));
        achievements.add(new Achievement("Complete Pack 6", 1, Constants.STATISTIC_COMPLETE_PACK_6, "CgkIgrzuo64REAIQMg", Constants.BACKGROUND_MUDDY));
        achievements.add(new Achievement("Complete Pack 7", 1, Constants.STATISTIC_COMPLETE_PACK_7, "CgkIgrzuo64REAIQMw", Constants.BACKGROUND_MUDDY_PINK));
        achievements.add(new Achievement("Complete Pack 8", 1, Constants.STATISTIC_COMPLETE_PACK_8, "CgkIgrzuo64REAIQNA", Constants.BACKGROUND_PEACH));
        achievements.add(new Achievement("Complete Pack 9", 1, Constants.STATISTIC_COMPLETE_PACK_9, "CgkIgrzuo64REAIQNQ", Constants.BACKGROUND_PASSIONFRUIT));
        Achievement.saveInTx(achievements);
    }

    private void createBackground() {
        List<Background> backgrounds = new ArrayList<>();
        // Unlocked by default
        backgrounds.add(new Background(Constants.BACKGROUND_PLAIN, "FFFFFF", true, true));

        // Open credits
        backgrounds.add(new Background(Constants.BACKGROUND_SUMMER, "fefbd0"));

        // Tile turning achievements
        backgrounds.add(new Background(Constants.BACKGROUND_SUNRISE, "FFF0C0"));
        backgrounds.add(new Background(Constants.BACKGROUND_GRASS, "e1f7d5"));
        backgrounds.add(new Background(Constants.BACKGROUND_SALMON, "ffbdbd"));
        backgrounds.add(new Background(Constants.BACKGROUND_BLUISH, "c9c9ff"));

        // Questing achievements
        backgrounds.add(new Background(Constants.BACKGROUND_PINK, "f1cbff"));
        backgrounds.add(new Background(Constants.BACKGROUND_BARK, "756454"));
        backgrounds.add(new Background(Constants.BACKGROUND_EARTH, "483e34"));
        backgrounds.add(new Background(Constants.BACKGROUND_STORMY_SKY, "606060"));

        // Puzzles completed achievement
        backgrounds.add(new Background(Constants.BACKGROUND_DEEP_SEA, "8f99a3"));
        backgrounds.add(new Background(Constants.BACKGROUND_LIMESTONE, "a0a0a0"));
        backgrounds.add(new Background(Constants.BACKGROUND_SAND, "cac9b4"));
        backgrounds.add(new Background(Constants.BACKGROUND_FERN, "9eac95"));

        // Puzzles fully completed achievement
        backgrounds.add(new Background(Constants.BACKGROUND_OLIVE, "737663"));
        backgrounds.add(new Background(Constants.BACKGROUND_FAWN, "c4b49b"));
        backgrounds.add(new Background(Constants.BACKGROUND_SEDONA, "96744e"));
        backgrounds.add(new Background(Constants.BACKGROUND_EGGSHELL, "ece9e4"));

        // Boosts used achievement
        backgrounds.add(new Background(Constants.BACKGROUND_LIMEY, "e8e9e6"));
        backgrounds.add(new Background(Constants.BACKGROUND_RICH_LIMEY, "cbd5d2"));
        backgrounds.add(new Background(Constants.BACKGROUND_CAMOUFLAGE, "919f9e"));
        backgrounds.add(new Background(Constants.BACKGROUND_OMINOUS, "424a58"));

        // Pack completion
        backgrounds.add(new Background(Constants.BACKGROUND_CLOUDY, "b9c6d2"));
        backgrounds.add(new Background(Constants.BACKGROUND_BLUE_SKIES, "e4ebf3"));
        backgrounds.add(new Background(Constants.BACKGROUND_PETALS, "8eb9a8"));
        backgrounds.add(new Background(Constants.BACKGROUND_CLAY, "e3e3e3"));
        backgrounds.add(new Background(Constants.BACKGROUND_CLAY_GREY, "c9c7ca"));
        backgrounds.add(new Background(Constants.BACKGROUND_MUDDY, "c1bab4"));
        backgrounds.add(new Background(Constants.BACKGROUND_MUDDY_PINK, "decfd2"));
        backgrounds.add(new Background(Constants.BACKGROUND_PEACH, "fdcfb7"));
        backgrounds.add(new Background(Constants.BACKGROUND_PASSIONFRUIT, "f4828c"));

        // Buying shop item
        backgrounds.add(new Background(Constants.BACKGROUND_THE_END, "775c6a"));

        // IAP
        backgrounds.add(new Background(Constants.BACKGROUND_DESERT, "f7ecd6"));

        // Unassigned
        /*backgrounds.add(new Background(Constants.BACKGROUND_DIRTY, "ddb4a0"));
        backgrounds.add(new Background(Constants.BACKGROUND_OVERCAST, "d0c6c4"));
        backgrounds.add(new Background(Constants.BACKGROUND_PRETTY_IN_PINK, "f8e4e3"));
        backgrounds.add(new Background(Constants.BACKGROUND_RAINFOREST, "7ca0a0"));
        backgrounds.add(new Background(Constants.BACKGROUND_MUSHROOM, "8e857c"));
        backgrounds.add(new Background(Constants.BACKGROUND_NIGHT, "262626"));*/
        Background.saveInTx(backgrounds);
    }

    private void createBoost() {
        List<Boost> boosts = new ArrayList<>();
        boosts.add(new Boost(Constants.BOOST_UNDO, 1, 0, 0));
        boosts.add(new Boost(Constants.BOOST_TIME, 1, 0, 0));
        boosts.add(new Boost(Constants.BOOST_MOVE, 1, 0, 0));
        boosts.add(new Boost(Constants.BOOST_SHUFFLE, 1, 0, 0));
        Boost.saveInTx(boosts);
    }

    private void createIap() {
        List<Iap> iaps = new ArrayList<>();
        iaps.add(new Iap("100_coins", 100));
        iaps.add(new Iap("1000_coins", 1000));
        Iap.saveInTx(iaps);
    }

    private void createText() {
        List<Text> texts = new ArrayList<>();
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_BACKGROUND_UNLOCK", "Unlocked '%1$s' background!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CARD_SAVED", "Card image saved to gallery!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_COINS_PURCHASED", "Successfully purchased %1$d coins!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_COINS_PURCHASED_PACK", "Successfully purchased %1$d coins, and unlocked an exclusive puzzle pack & a new background!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CLOUD_BEGINNING", "Comparing local and cloud saves..."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CLOUD_SAVING", "Saving to cloud..."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CLOUD_SAVED", "Successfully saved game to cloud!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CLOUD_LOADING", "Loading cloud save..."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_CLOUD_LOADED", "Successfully loaded game from cloud!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_COINS_EARNED", "Earned %1$d coin(s)!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_COINS_EARNED_FREE", "Earned %1$d free coin(s), enjoy!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_PUZZLE_COPIED", "Successfully created \"%1$s (Copy)\"!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_PUZZLE_IMPORTED", "Successfully imported the puzzle, enjoy!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_SHUFFLE_PUZZLE", "Randomly rotate all tiles (keeping their position)?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_DELETE_PUZZLE", "Delete puzzle \"%1$s\"?\n\nNote: This can't be undone!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_SAVE_CONFLICT", "Save conflict detected! Currently resolving, this might take a few seconds, please be patient..."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_SETTING_TOGGLE_ON", "Toggled %1$s on!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ALERT_SETTING_TOGGLE_OFF", "Toggled %1$s off!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_1_NAME", "Plain"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_1_HINT", "This is already unlocked!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_2_NAME", "Night"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_2_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_3_NAME", "Sunrise"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_3_HINT", "Unlocked by completing achievement \"Turn It Up 1\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_4_NAME", "Grass"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_4_HINT", "Unlocked by completing achievement \"Turn It Up 2\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_5_NAME", "Salmon"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_5_HINT", "Unlocked by completing achievement \"Turn It Up 3\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_6_NAME", "Bluish"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_6_HINT", "Unlocked by completing achievement \"Turn It Up 4\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_7_NAME", "Pink"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_7_HINT", "Unlocked by completing achievement \"The Best Quest 1\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_8_NAME", "Bark"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_8_HINT", "Unlocked by completing achievement \"The Best Quest 2\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_9_NAME", "Earth"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_9_HINT", "Unlocked by completing achievement \"The Best Quest 3\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_10_NAME", "Stormy Sky"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_10_HINT", "Unlocked by completing achievement \"The Best Quest 4\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_11_NAME", "Deep Sea"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_11_HINT", "Unlocked by completing achievement \"Working Your Way Through 1\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_12_NAME", "Limestone"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_12_HINT", "Unlocked by completing achievement \"Working Your Way Through 2\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_13_NAME", "Sand"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_13_HINT", "Unlocked by completing achievement \"Working Your Way Through 3\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_14_NAME", "Fern"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_14_HINT", "Unlocked by completing achievement \"Working Your Way Through 4\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_15_NAME", "Olive"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_15_HINT", "Unlocked by completing achievement \"Completionist 1\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_16_NAME", "Fawn"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_16_HINT", "Unlocked by completing achievement \"Completionist 2\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_17_NAME", "Sedona"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_17_HINT", "Unlocked by completing achievement \"Completionist 3\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_18_NAME", "Eggshell"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_18_HINT", "Unlocked by completing achievement \"Completionist 4\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_19_NAME", "Clay"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_19_HINT", "Unlocked by completing Pack 4."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_20_NAME", "Clay Grey"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_20_HINT", "Unlocked by completing Pack 5."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_21_NAME", "Muddy"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_21_HINT", "Unlocked by completing Pack 6."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_22_NAME", "Muddy Pink"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_22_HINT", "Unlocked by completing Pack 7."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_23_NAME", "Limey"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_23_HINT", "Unlocked by completing achievement \"Activate Boost 1\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_24_NAME", "Rich Limey"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_24_HINT", "Unlocked by completing achievement \"Activate Boost 2\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_25_NAME", "Camouflage"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_25_HINT", "Unlocked by completing achievement \"Activate Boost 3\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_26_NAME", "Ominous"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_26_HINT", "Unlocked by completing achievement \"Activate Boost 4\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_27_NAME", "Cloudy"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_27_HINT", "Unlocked by completing Pack 1."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_28_NAME", "Blue Skies"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_28_HINT", "Unlocked by completing Pack 2."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_29_NAME", "Petals"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_29_HINT", "Unlocked by completing Pack 3."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_30_NAME", "Summer"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_30_HINT", "Unlocked by viewing the credits."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_31_NAME", "Peach"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_31_HINT", "Unlocked by completing Pack 8."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_32_NAME", "Passionfruit"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_32_HINT", "Unlocked by completing Pack 9."));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_33_NAME", "The End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_33_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_34_NAME", "Desert"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_34_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_35_NAME", "Dirty"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_35_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_36_NAME", "Overcast"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_36_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_37_NAME", "Pretty In Pink"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_37_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_38_NAME", "Rainforest"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_38_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_39_NAME", "Mushroom"));
        texts.add(new Text(Constants.LANGUAGE_EN, "BACKGROUND_39_HINT", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "CLOUD_AUTOSAVE_DESC", "(Auto) %1$d Stars | %2$d Coins | V%3$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CLOUD_SAVE_DESC", "%1$d Stars | %2$d Coins | V%3$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREATOR_CREATED", "Created"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREATOR_IMPORTED", "Imported"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREATOR_NEW_PUZZLE", "New Puzzle"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_GRAPHICS_TITLE", "Graphics"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_GRAPHICS_TEXT", "<a href='http://www.dafont.com/claudep.d857'>Claude P</a>: Main font (Yagiuhf No 2).<br>" +
                "<a href='http://fontawesome.io/'>FontAwesome</a>: Button icons.<br>" +
                "<a href='http://kenney.nl/'>Kenney</a>: Base tilesets, majority of UI elements.<br>" +
                ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_TECHNOLOGIES_TITLE", "Technologies"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_TECHNOLOGIES_TEXT", "<a href='https://github.com/ACRA/acra'>ACRA</a>: Crash management.<br>" +
                "<a href='https://github.com/scottyab/AESCrypt-Android'>AESCrypt</a>: Database / game save encrypting.<br>" +
                "<a href='https://github.com/aitorvs/allowme'>AllowMe</a>: Permissions handling.<br>" +
                "<a href='https://github.com/hotchemi/Android-Rate'>Android-Rate</a>: Play Store rate prompting.<br>" +
                "<a href='http://www.antp.be/software/renamer'>Ant Renamer</a>: Bulk file operations.<br>" +
                "<a href='https://www.applovin.com/'>AppLovin</a>: Advertising.<br>" +
                "<a href='https://github.com/grantland/android-autofittextview'>AutofitTextView</a>: Intelligently resizing textboxes.<br>" +
                "<a href='https://github.com/keyboardsurfer/Crouton'>Crouton</a>: On-screen alerts.<br>" +
                "<a href='https://github.com/bperin/FontAwesomeAndroid'>FontAwesomeAndroid</a>: FontAwesome support.<br>" +
                "<a href='https://github.com/google/gson'>GSON</a>: Cloud saves + puzzle sharing.<br>" +
                "<a href='https://github.com/anjlab/android-inapp-billing-v3'>IAB</a>: In-app billing.<br>" +
                "<a href='https://github.com/thomashaertel/MultiSpinner'>Multispinner</a>: Multi-selectable options list.<br>" +
                "<a href='https://github.com/square/picasso'>Picasso</a>: Image caching.<br>" +
                "<a href='https://github.com/satyan/sugar'>Sugar</a>: Database ORM.<br>" +
                "<a href='https://github.com/zxing/zxing'>ZXing</a>: QR Code reading / writing.<br>" +
                ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_SOUNDS_TITLE", "Audio"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_SOUNDS_TEXT", "<a href='https://www.freesound.org/'>FreeSound</a>: Various sound effects<br>" +
                ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_OTHER_TITLE", "Other"));
        texts.add(new Text(Constants.LANGUAGE_EN, "CREDITS_OTHER_TEXT", "Of course, developing a game isn't just about technical resources. As such, there's a few people and communities who definitely need thanking.<br><br>" +
                "<b>Britt</b>: Responsible for a few of the more... interesting ideas in the game, and providing motivation throughout. If she had her way, the game would be a lot more absurd..!<br><br>" +
                "<b>Tash</b>: An absurd amount of design work. Basically, anywhere the game looks rather nice, she's the one to thank!<br><br>" +
                "<b>/r/AndroidGaming</b>: Always providing tons of feedback, beta testing, and just generally being an excellent place for gamers + developers to meet. <br><br>" +
                "<b>/r/CityFlow</b>: There's a lot of crossover between the mentioned subreddits, but I really appreciate everyone who contributes an opinion on the game.<br><br>" +
                "<b>/r/PixelBlacksmith</b>: You guys have been super-patient whilst I work on City Flow, and I hope you all enjoy it as much as Pixel Blacksmith.<br><br>" +
                "<b>You</b>: Thank you for playing the game! A game is nothing without players (especially super dedicated ones who read the credits!). If you ever have any feedback / bugs / suggestions / good jokes / bad puns, <a href='mailto:city.flow@jakelee.co.uk'>email me</a>.<br><br>" +
                "<i>- Jake</i>" +
                ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_TEXT", "Change %1$s text\n(max %2$d chars)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_SLIDER", "Change %1$s value"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CLOUD_LOAD_CONFIRM", "Are you sure sure you want to load this cloud save?\n\nLocal: %1$s stars, %2$s coins\nCloud: %3$s stars, %4$s coins"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CLOUD_SAVE_CONFIRM", "Are you sure you wish to overwrite your cloud save:\n%1$s\n\n(Created on %2$s on your %3$s) with your local save:\n\n%4$d Stars | %5$d Coins | V%6$s?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_CHANGE", "Change"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_CONFIRM", "Confirm"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_SHUFFLE", "Shuffle"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_CLOSE", "Close"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_SAVE", "Save"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_SHARE", "Share"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_CREATE", "Create"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_LOAD", "Load"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_CANCEL", "Cancel"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_DELETE", "Delete"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_RESIZE", "Resize"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_TEXT", "Text"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_LEFT", "Left"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_BUTTON_RIGHT", "Right"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_RESIZE_CONFIRM", "Are you sure you want to resize the puzzle from %1$dx%2$d to %3$dx%4$d?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_STATISTICS", "Statistics"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_SUPPORT_CODE", "Support Code"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CREDITS", "Credits"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_PLAY", "Play Puzzle"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_SHUFFLE_TILES", "Rotate All Tiles"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_ROTATE_PUZZLE", "Rotate Puzzle"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_ROTATE_CONFIRM", "Which way would you like to rotate the puzzle?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_NAME", "Change Name"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_DESC", "Change Desc"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_WIDTH", "Change Width"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_CHANGE_HEIGHT", "Change Height"));
        texts.add(new Text(Constants.LANGUAGE_EN, "DIALOG_SAVE_EXIT", "Save & Exit"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_0_NAME", "None"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_1_NAME", "Grass"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_2_NAME", "City"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_3_NAME", "Forest"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_4_NAME", "Mountain"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_5_NAME", "Desert"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ENVIRONMENT_6_NAME", "Golf"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_ADVERT_NOT_LOADED", "Failed to load ad! This might be due to a poor connection, or there might not be any ads available."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_ADVERT_NOT_VERIFIED", "Something went wrong, and the ad view couldn't be verified!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_FAILED_TO_CONNECT", "Couldn't log in. Please try again later."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_MAX_PURCHASES", "You've purchased the maximum of this item!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_NO_ERROR", ""));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_NOT_ENOUGH_CURRENCY", "You can't afford this item!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_SUPPORT_CODE_INVALID", "Failed to apply support code! Please contact support."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_SUPPORT_CODE_USED", "Support code already used!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_TECHNICAL", "An unknown technical error occurred! Try again?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_CLOUD_ERROR", "An error occurred whilst handling the cloud save: %1$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_PUZZLE_NOT_TESTED", "The puzzle must be successfully completed before it can be exported!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_PUZZLE_TOO_SMALL", "The puzzle needs more than just one tile!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_CARD_NOT_SAVED", "The card could not be saved, check storage permissions."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_CAMERA_IMPORT_FAIL", "The puzzle card could not be read, please try retaking the image, or improving lighting conditions."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_FILE_IMPORT_FAIL", "No puzzle could be imported from the image, please check that a puzzle card image has been selected."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_TEXT_IMPORT_FAIL", "No puzzle could be imported from the text, please check that it was copied correctly."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_BACKGROUND_LOCKED", "You need to unlock this background first!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_NO_IAB", "In app billing is not available on this device!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_IAB_FAILED", "Purchase failed! Please ensure you're logged in, and have a payment method configured."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ERROR_PUZZLE_SOLVED", "Puzzle already solved! Try shuffling the tiles first!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_0_NAME", "None"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_1_NAME", "Water"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_2_NAME", "Road"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_3_NAME", "Path"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_4_NAME", "Grass"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_5_NAME", "Canal"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_6_NAME", "River"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_7_NAME", "Dirt"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_8_NAME", "Rail"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_9_NAME", "Golf"));
        texts.add(new Text(Constants.LANGUAGE_EN, "FLOW_9_NAME", "Toxic"));
        texts.add(new Text(Constants.LANGUAGE_EN, "GOOGLE_SIGN_IN", "Sign In"));
        texts.add(new Text(Constants.LANGUAGE_EN, "GOOGLE_SIGN_OUT", "Sign Out"));
        texts.add(new Text(Constants.LANGUAGE_EN, "HEIGHT_0_NAME", "None"));
        texts.add(new Text(Constants.LANGUAGE_EN, "HEIGHT_1_NAME", "Ultra Low"));
        texts.add(new Text(Constants.LANGUAGE_EN, "HEIGHT_2_NAME", "Low"));
        texts.add(new Text(Constants.LANGUAGE_EN, "HEIGHT_3_NAME", "Normal"));
        texts.add(new Text(Constants.LANGUAGE_EN, "HEIGHT_4_NAME", "High"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_1_NAME", "Undo"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_1_DESC", "Undo your 1 most recent move, also decreasing the move count."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_2_NAME", "Time Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_2_DESC", "Reduce the recorded time for the level by 10%."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_3_NAME", "Move Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_3_DESC", "Reduce the recorded moves per level by 1."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_4_NAME", "Shuffle Board"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_4_DESC", "Randomly all rotate all tiles on the board 1 time."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_5_NAME", "Upgrade Time Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_5_DESC", "Each upgrade reduces the puzzle time taken by 10% per level."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_6_NAME", "Upgrade Move Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_6_DESC", "Each upgrade reduces the puzzle moves taken by 1 per level."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_7_NAME", "Upgrade Shuffle Board"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_7_DESC", "Each upgrade increases the number of times the board can be shuffled by 1."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_8_NAME", "Unlock Tile 1"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_8_DESC", "Unlock a presumably special tile?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_9_NAME", "Unlock Tile 2"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_9_DESC", "Unlock a presumably super special tile?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_10_NAME", "Unlock Tile 3"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_10_DESC", "Unlock a presumably super super special tile?"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_12_NAME", "10x Undo"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_12_DESC", "Purchase undo boosts in bulk, saving 10%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_13_NAME", "10x Time Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_13_DESC", "Purchase time reduction boosts in bulk, saving 10%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_14_NAME", "10x Move Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_14_DESC", "Purchase move reduction boosts in bulk, saving 10%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_15_NAME", "10x Shuffle Board"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_15_DESC", "Purchase shuffle board boosts in bulk, saving 10%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_16_NAME", "100x Undo"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_16_DESC", "Purchase undo boosts in massive bulk, saving 20%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_17_NAME", "100x Time Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_17_DESC", "Purchase time reduction boosts in massive bulk, saving 20%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_18_NAME", "100x Move Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_18_DESC", "Purchase move reduction boosts in massive bulk, saving 20%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_19_NAME", "100x Shuffle Reduction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_19_DESC", "Purchase shuffle board boosts in massive bulk, saving 20%!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_20_NAME", "Main Menu Cars"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_20_DESC", "Choose how many cars appear on the main menu, between 0 and 75!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_21_NAME", "Unlock Pack 2"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_21_DESC", "Instantly unlock pack 2, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_22_NAME", "Unlock Pack 3"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_22_DESC", "Instantly unlock pack 3, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_23_NAME", "Unlock Pack 4"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_23_DESC", "Instantly unlock pack 4, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_24_NAME", "Unlock Pack 5"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_24_DESC", "Instantly unlock pack 5, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_25_NAME", "Unlock Pack 6"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_25_DESC", "Instantly unlock pack 6, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_26_NAME", "Unlock Pack 7"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_26_DESC", "Instantly unlock pack 7, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_27_NAME", "Unlock Pack 8"));
        texts.add(new Text(Constants.LANGUAGE_EN, "ITEM_27_DESC", "Instantly unlock pack 8, without collecting all stars."));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_0_NAME", "English"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_1_NAME", "Zhōngwén (Pīnyīn)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_2_NAME", "Deutsch"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_3_NAME", "Français"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_4_NAME", "Polski"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_5_NAME", "Pусский"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_6_NAME", "Español"));
        texts.add(new Text(Constants.LANGUAGE_EN, "LANGUAGE_7_NAME", "Nederlands"));
        texts.add(new Text(Constants.LANGUAGE_EN, "METRIC_TILES_EARNED", "Tiles Earned"));
        texts.add(new Text(Constants.LANGUAGE_EN, "METRIC_BEST_TIME", "Best Time"));
        texts.add(new Text(Constants.LANGUAGE_EN, "METRIC_BEST_MOVES", "Best Moves"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_1_NAME", "Tutorial"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_2_NAME", "The Big City"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_3_NAME", "Escape To The Country"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_4_NAME", "Forest Fun"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_5_NAME", "Mountain Climbing"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_6_NAME", "Desert Oasis"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_7_NAME", "Flowing Frenzy"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_8_NAME", "Heady Heights"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_9_NAME", "Contributor's Challenge"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PACK_9_CHALLENGE", "Purchase any number of coins to unlock this pack."));
        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_DEFAULT_NAME", "New Puzzle (%1$dx%2$d, %3$s)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_DEFAULT_DESC", "No description."));
        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_EXPORT_START", "Beginning puzzle export process..."));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_CURRENT", "In Progress"));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_AVAILABLE", "Available"));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_UPCOMING", "Upcoming"));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_COMPLETED", "Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_FAILED", "Failed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "QUEST_COMPLETED_TEXT", "Completed the %1$s quest \"%1$s\" and earned %3$d coins!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_SECTION_AUDIO", "Audio Settings"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_SECTION_GAMEPLAY", "Game Settings"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_SECTION_GOOGLE", "Google Settings"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_SECTION_OTHER", "Other"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_1_NAME", "Music"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_2_NAME", "Sounds"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_3_NAME", "Minimum Zoom"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_4_NAME", "Maximum Zoom"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_5_NAME", "Zen Mode"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_6_NAME", "Hide Unstocked Boosts"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_7_NAME", "Player Name"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_8_NAME", "Google Play Sign In"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_9_NAME", "Main Menu Cars"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_10_NAME", "Puzzle Background"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_11_NAME", "Autosave Freq (Mins)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_12_NAME", "Language"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_13_NAME", "Vibration"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_14_NAME", "Purchase Sound"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_15_NAME", "Tile Rotate Sound"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_16_NAME", "Setting Change Sound"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_17_NAME", "Main Music"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SETTING_18_NAME", "Puzzle Music"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_CATEGORY_1_NAME", "Boosts"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_CATEGORY_2_NAME", "Upgrades"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_CATEGORY_3_NAME", "Tiles"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_CATEGORY_4_NAME", "Misc"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_ADVERT", "Advert"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_OFFERS", "Offers"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_PURCHASE_TEXT", "Buy for %1$s coins"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_NUMBER_PURCHASES", "%1$s%2$s purchases"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_NUMBER_OWNED", "%1$s owned"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_ITEM_PURCHASED", "Successfully purchased %1$s for %2$d coins!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_ITEM_PURCHASED_BACKGROUND", "Successfully purchased %1$s for %2$d coins, and unlocked '%3$s'!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SHOP_MAX_PURCHASED", "Maximum Purchased"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_1_NAME", "Puzzles Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_2_NAME", "Tiles Rotated"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_3_NAME", "Quests Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_4_NAME", "Puzzles Fully Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_5_NAME", "Boosts Used"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_6_NAME", "Coins"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_7_NAME", "TapJoy Coins"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_8_NAME", "Last Autosave"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_9_NAME", "Pack 1 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_10_NAME", "Pack 2 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_11_NAME", "Pack 3 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_12_NAME", "Pack 4 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_13_NAME", "Pack 5 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_14_NAME", "Pack 6 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_15_NAME", "Pack 7 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_16_NAME", "Pack 8 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "STATISTIC_17_NAME", "Pack 9 Completed"));
        texts.add(new Text(Constants.LANGUAGE_EN, "SUCCESS_SUPPORT_CODE", "Successfully applied support code!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_0_NAME", "Invisible Tile"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_1_NAME", "Grass Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_2_NAME", "Grass Road Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_3_NAME", "Grass Road End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_4_NAME", "Grass Road Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_5_NAME", "Grass Road T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_6_NAME", "Grass"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_7_NAME", "Grass Road Bridge"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_8_NAME", "Grass Water Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_9_NAME", "Grass Water Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_10_NAME", "Grass Road Straight (Median)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_11_NAME", "Grass Road Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_12_NAME", "Grass Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_13_NAME", "City (Red Shop)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_14_NAME", "City Road Straight (Bus Stop)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_15_NAME", "City Road Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_16_NAME", "City Road Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_17_NAME", "City Road T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_18_NAME", "City Road End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_19_NAME", "City Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_20_NAME", "City Road Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_21_NAME", "City"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_22_NAME", "City Path Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_23_NAME", "City Path Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_24_NAME", "City Path End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_25_NAME", "City Road/Path T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_26_NAME", "City Grass End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_27_NAME", "City Grass Straight (Tree)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_28_NAME", "City Grass Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_29_NAME", "City Road Straight (Crossing)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_30_NAME", "City (Green Shop)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_31_NAME", "City (Fountain)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_32_NAME", "City (Grass)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_33_NAME", "Grass Road/Water Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_34_NAME", "Grass High"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_35_NAME", "Grass Water End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_36_NAME", "Grass High Road End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_37_NAME", "Grass High Road Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_38_NAME", "City Road End (Underground)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_39_NAME", "Grass High Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_40_NAME", "City Canal Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_41_NAME", "City Canal End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_42_NAME", "Grass Road Corner (Sharp)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_43_NAME", "Grass (Tree 1)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_44_NAME", "Grass (Tree 2)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_45_NAME", "Grass (Tree 3)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_46_NAME", "City Road/Path Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_47_NAME", "City High Road Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_48_NAME", "City High Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_49_NAME", "City Grass Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_50_NAME", "City Canal Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_51_NAME", "City Road/Path Corner (Inverse)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_52_NAME", "City Water Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_53_NAME", "City Water T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_54_NAME", "City Grass Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_55_NAME", "City Grass T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_56_NAME", "City Road Corner (Sharp)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_57_NAME", "City Road Corner (Lights)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_58_NAME", "City Road Corner (Tree)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_59_NAME", "City Road/Path Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_60_NAME", "Forest River Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_61_NAME", "Forest River Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_62_NAME", "Forest Dirt Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_63_NAME", "Forest High Dirt Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_64_NAME", "Forest Dirt Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_65_NAME", "Forest Dirt Straight (Humped)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_66_NAME", "Forest Dirt T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_67_NAME", "Forest Dirt Corner (Sharp)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_68_NAME", "Forest Dirt Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_69_NAME", "Forest"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_70_NAME", "Forest Dirt Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_71_NAME", "Forest Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_72_NAME", "Forest High"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_73_NAME", "Forest (Rocks)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_74_NAME", "Forest (Trees)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_75_NAME", "Forest Dirt End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_76_NAME", "Forest River End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_77_NAME", "City Road Straight (Median)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_78_NAME", "City Road Straight (Trees)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_79_NAME", "Grass Road Slope (Narrow)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_80_NAME", "City Road End (Barrier)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_81_NAME", "Forest River T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_82_NAME", "Forest River Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_83_NAME", "Forest High Path End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_84_NAME", "Forest High Path Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_85_NAME", "City High Path End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_86_NAME", "Mountain Hill"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_87_NAME", "Mountain"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_88_NAME", "Mountain River End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_89_NAME", "Mountain River Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_90_NAME", "Mountain River Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_91_NAME", "Mountain River T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_92_NAME", "Mountain River Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_93_NAME", "Desert"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_94_NAME", "Desert Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_95_NAME", "Desert High"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_96_NAME", "Desert Road End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_97_NAME", "Desert Path End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_98_NAME", "Desert Road (Crossing)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_99_NAME", "Desert Road End (Round)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_100_NAME", "Desert Road/Path T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_101_NAME", "Desert Path Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_102_NAME", "Desert Rail Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_103_NAME", "Desert Rail Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_104_NAME", "Desert Rail Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_105_NAME", "Desert Rail Double Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_106_NAME", "Desert Rail 3 Split"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_107_NAME", "Desert Rail Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_108_NAME", "Desert Rail End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_109_NAME", "Desert Rail T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_110_NAME", "Desert Rail V Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_111_NAME", "Desert Rail Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_112_NAME", "Desert Rail/Road Crossover"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_113_NAME", "Desert High Road"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_114_NAME", "Desert High Road (Rounded Bridge)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_115_NAME", "Desert High Road (Squared Bridge)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_116_NAME", "Desert Road Bridge"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_117_NAME", "Desert Road Slope (No Bottom)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_118_NAME", "Desert Road Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_119_NAME", "Desert Road Slope (No Top)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_120_NAME", "Desert Road Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_121_NAME", "Desert Path Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_122_NAME", "Desert Road Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_123_NAME", "Desert Path End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_124_NAME", "Desert Path V Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_125_NAME", "Desert Path Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_126_NAME", "Desert Road Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_127_NAME", "Desert Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_128_NAME", "Desert Road T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_129_NAME", "Mountain (Stones)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_130_NAME", "City Path T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_131_NAME", "City High"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_132_NAME", "City Path/Road T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_133_NAME", "City Road Straight (Lights 1)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_134_NAME", "Grass Road Corner (Tree)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_135_NAME", "City Road Straight (Lights 2)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_136_NAME", "City (Grass Tree)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_137_NAME", "City Slope"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_138_NAME", "Golf"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_139_NAME", "Golf Straight (Dip)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_140_NAME", "Golf Straight (Bump)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_141_NAME", "Golf Straight (Castle)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_142_NAME", "Golf Straight (Ditch)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_143_NAME", "Golf End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_144_NAME", "Golf Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_145_NAME", "Golf Straight (Hill)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_146_NAME", "Golf End (Hole)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_147_NAME", "Golf Straight (Squared Blocks)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_148_NAME", "Golf Straight (Curved Blocks)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_149_NAME", "Golf Straight (Blocks)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_150_NAME", "Golf Straight (Strip)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_151_NAME", "Golf Corner (Curved)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_152_NAME", "Golf Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_153_NAME", "Golf Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_154_NAME", "Golf T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_155_NAME", "Golf Straight (Tunnel)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_156_NAME", "Golf Straight (Shed)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_157_NAME", "Desert Rail/Road T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_158_NAME", "Desert Road/Rail T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_159_NAME", "Desert Road/Rail Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_160_NAME", "Desert Rail/Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_161_NAME", "Desert Path/Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_162_NAME", "Desert Rail/Path Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_163_NAME", "Desert High Road End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_164_NAME", "Desert High Road Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_165_NAME", "Desert High Rail Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_166_NAME", "Desert High Rail End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_167_NAME", "City (Red Shop 2)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_168_NAME", "City (Red Glass Shop)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_169_NAME", "City (Brown House)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_170_NAME", "City (Cream House)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_171_NAME", "City (Red House)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_172_NAME", "Grass Straight (Trees)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_173_NAME", "Mountain Toxic End"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_174_NAME", "Mountain Toxic Corner"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_175_NAME", "Mountain Toxic Straight"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_176_NAME", "Mountain Toxic T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_177_NAME", "Mountain Toxic Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_178_NAME", "Mountain (Lilypad)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_179_NAME", "Mountain (Cacti)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_180_NAME", "Mountain (Rock)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_181_NAME", "Mountain (Mushroom)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_182_NAME", "Grass Water T Junction"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_183_NAME", "Grass Water Interchange"));
        texts.add(new Text(Constants.LANGUAGE_EN, "TILE_184_NAME", "Grass Water Corner (Tree)"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_BACKGROUND_SELECT_TITLE", "%1$d/%2$d Unlocked"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_IAP_TITLE", "Purchase Coins"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_IAP_TEASER", "First purchase of any pack unlocks a bonus puzzle pack!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_IAP_TIP", "Larger packs are better value, and keep an eye out for seasonal price reductions!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_COMPLETE_TITLE", "Complete\n100%"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_COMPLETE_TEXT", "Completed!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_TIME_TITLE", "Time\n%1$d%%"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_TIME_TEXT", "%1$s/%2$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_MOVES_TITLE", "Moves\n%1$d%%"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_SKYSCRAPER_MOVES_TEXT", "%1$d/%2$d\nmoves"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_OPEN", "Open Pack"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_PURCHASE", "Purchase Pack"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_UNLOCKABLE_HEADER", "Pack locked!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_UNLOCKABLE_INSTRUCTION", "Fully complete pack \"%1$s\" (currently %2$d / %3$d stars) to unlock, or purchase for coins in the shop."));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_UNLOCKED_STARS", "%1$d / %2$d Stars"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_UNLOCKED_TIME", "Best Time: %1$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PACK_UNLOCKED_MOVES", "Best Moves: %1$s"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_BY", "By:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_NAME", "Name:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_DESC", "Desc:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_DATE_ADDED", "Added:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_BEST_MOVES", "Moves:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_BEST_TIME", "Time:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_STARS", "Stars:"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_WIDTH", "Width: %1$d"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_HEIGHT", "Height: %1$d"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_OPTIONS", "Puzzle Options"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_AUTOGENERATE", "Blank Puzzle"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_SHUFFLE_PLAY", "Shuffle & Play"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_RESIZE", "Resize \"%1$s\""));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_PUZZLE_RESIZE_HINT", "Width = top left -> bottom right\nHeight = bottom left -> top right."));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_TILE_UNLOCK_PUZZLE", "To unlock \"%1$s\", complete puzzle \"%2$s\" in pack \"%3$s\"."));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_TILE_UNLOCK_SHOP", "Unlock \"%1$s\" by purchasing it in the shop."));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_TILE_UNLOCK", "Unlocked %1$s tile(s)!"));
        texts.add(new Text(Constants.LANGUAGE_EN, "UI_TILE_NO_UNLOCK", "No tiles unlocked."));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_ALL", "All"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_AREA", "Area"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_DESCRIPTION", "Description"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_FLOW", "Flow"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_HEIGHT", "Height"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_IMPORT", "Import"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_NEVER", "Never"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_NA", "N/A"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_NAME", "Name"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_OPEN", "Open"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_PAUSED", "Paused"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_START", "Start"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_UNLOCK", "Unlock"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_LOCKED", "Locked"));
        texts.add(new Text(Constants.LANGUAGE_EN, "WORD_LOADING", "Loading"));
        Text.saveInTx(texts);
    }

    private void createPack() {
        List<Pack> packs = new ArrayList<>();
        packs.add(new Pack(1, "CgkIgrzuo64REAIQEA", "CgkIgrzuo64REAIQEQ", 30, true));
        packs.add(new Pack(2, "CgkIgrzuo64REAIQEw", "CgkIgrzuo64REAIQFA", 90, true));
        packs.add(new Pack(3, "CgkIgrzuo64REAIQFQ", "CgkIgrzuo64REAIQFg", 90, true));
        packs.add(new Pack(4, "CgkIgrzuo64REAIQNg", "CgkIgrzuo64REAIQNw", 90, true));
        packs.add(new Pack(5, "CgkIgrzuo64REAIQOA", "CgkIgrzuo64REAIQOQ", 45, true));
        packs.add(new Pack(6, "CgkIgrzuo64REAIQOg", "CgkIgrzuo64REAIQOw", 96, true));
        packs.add(new Pack(7, "CgkIgrzuo64REAIQPA", "CgkIgrzuo64REAIQPQ", 90, true));
        packs.add(new Pack(8, "CgkIgrzuo64REAIQPg", "CgkIgrzuo64REAIQPw", 90, true));
        packs.add(new Pack(9, "CgkIgrzuo64REAIQQA", "CgkIgrzuo64REAIQQQ", 45, false));
        Pack.saveInTx(packs);
    }

    private void createPuzzlesPack1() {
        // Tutorial
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_1_NAME", "Make The Loop"));
        puzzles.add(new Puzzle(1, 1, 3399L, 1, 0L, 0));
        tiles.add(new Tile(1, 45, 0, 2, 4));
        tiles.add(new Tile(1, 3, 1, 2, 2));
        tiles.add(new Tile(1, 1, 0, 1, 2));
        tiles.add(new Tile(1, 5, 1, 1, 3));
        tiles.add(new Tile(1, 1, 0, 0, 4));
        tiles.add(new Tile(1, 1, 1, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_2_NAME", "Multiple Flows"));
        puzzles.add(new Puzzle(2, 1, 2299L, 6, 0L, 0));
        tiles.add(new Tile(2, 3, 0, 2, 3));
        tiles.add(new Tile(2, 8, 1, 2, 2));
        tiles.add(new Tile(2, 8, 2, 2, 3));
        tiles.add(new Tile(2, 2, 0, 1, 1));
        tiles.add(new Tile(2, 8, 1, 1, 1));
        tiles.add(new Tile(2, 8, 2, 1, 1));
        tiles.add(new Tile(2, 1, 0, 0, 1));
        tiles.add(new Tile(2, 3, 1, 0, 3));
        tiles.add(new Tile(2, 43, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_3_NAME", "Divide And Rejoin"));
        puzzles.add(new Puzzle(3, 1, 3699L, 5, 0L, 0));
        tiles.add(new Tile(3, 1, 0, 2, 4));
        tiles.add(new Tile(3, 5, 1, 2, 2));
        tiles.add(new Tile(3, 42, 2, 2, 3));
        tiles.add(new Tile(3, 5, 0, 1, 1));
        tiles.add(new Tile(3, 1, 1, 1, 1));
        tiles.add(new Tile(3, 10, 2, 1, 3));
        tiles.add(new Tile(3, 3, 0, 0, 4));
        tiles.add(new Tile(3, 45, 1, 0, 2));
        tiles.add(new Tile(3, 3, 2, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_4_NAME", "Convert And Cross"));
        puzzles.add(new Puzzle(4, 1, 6699L, 8, 0L, 0));
        tiles.add(new Tile(4, 3, 0, 2, 4));
        tiles.add(new Tile(4, 1, 1, 2, 3));
        tiles.add(new Tile(4, 45, 2, 2, 1));
        tiles.add(new Tile(4, 45, 3, 2, 4));
        tiles.add(new Tile(4, 35, 0, 1, 1));
        tiles.add(new Tile(4, 7, 1, 1, 1));
        tiles.add(new Tile(4, 9, 2, 1, 4));
        tiles.add(new Tile(4, 8, 3, 1, 3));
        tiles.add(new Tile(4, 3, 0, 0, 4));
        tiles.add(new Tile(4, 5, 1, 0, 4));
        tiles.add(new Tile(4, 33, 2, 0, 3));
        tiles.add(new Tile(4, 8, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_5_NAME", "Shop Alcove"));
        puzzles.add(new Puzzle(5, 1, 7099L, 12, 0L, 0));
        tiles.add(new Tile(5, 48, 0, 3, 3));
        tiles.add(new Tile(5, 47, 1, 3, 3));
        tiles.add(new Tile(5, 48, 2, 3, 2));
        tiles.add(new Tile(5, 47, 0, 2, 3));
        tiles.add(new Tile(5, 31, 1, 2, 1));
        tiles.add(new Tile(5, 20, 2, 2, 4));
        tiles.add(new Tile(5, 20, 0, 1, 3));
        tiles.add(new Tile(5, 13, 1, 1, 1));
        tiles.add(new Tile(5, 14, 2, 1, 1));
        tiles.add(new Tile(5, 57, 0, 0, 2));
        tiles.add(new Tile(5, 29, 1, 0, 2));
        tiles.add(new Tile(5, 19, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_6_NAME", "The Path To Roads"));
        puzzles.add(new Puzzle(6, 1, 6099L, 3, 0L, 0));
        tiles.add(new Tile(6, 19, 0, 2, 2));
        tiles.add(new Tile(6, 59, 1, 2, 1));
        tiles.add(new Tile(6, 23, 2, 2, 3));
        tiles.add(new Tile(6, 25, 0, 1, 3));
        tiles.add(new Tile(6, 59, 1, 1, 3));
        tiles.add(new Tile(6, 51, 2, 1, 4));
        tiles.add(new Tile(6, 19, 0, 0, 1));
        tiles.add(new Tile(6, 18, 1, 0, 4));
        tiles.add(new Tile(6, 32, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_7_NAME", "Riverside Stones"));
        puzzles.add(new Puzzle(7, 1, 7699L, 13, 0L, 0));
        tiles.add(new Tile(7, 88, 0, 2, 3));
        tiles.add(new Tile(7, 88, 1, 2, 3));
        tiles.add(new Tile(7, 86, 2, 2, 1));
        tiles.add(new Tile(7, 89, 0, 1, 1));
        tiles.add(new Tile(7, 91, 1, 1, 1));
        tiles.add(new Tile(7, 89, 2, 1, 2));
        tiles.add(new Tile(7, 129, 0, 0, 1));
        tiles.add(new Tile(7, 88, 1, 0, 4));
        tiles.add(new Tile(7, 89, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_8_NAME", "Crossover Chaos"));
        puzzles.add(new Puzzle(8, 1, 17299L, 31, 0L, 0));
        tiles.add(new Tile(8, 108, 0, 3, 3));
        tiles.add(new Tile(8, 103, 1, 3, 4));
        tiles.add(new Tile(8, 96, 2, 3, 3));
        tiles.add(new Tile(8, 103, 3, 3, 3));
        tiles.add(new Tile(8, 103, 4, 3, 3));
        tiles.add(new Tile(8, 99, 0, 2, 4));
        tiles.add(new Tile(8, 103, 1, 2, 2));
        tiles.add(new Tile(8, 112, 2, 2, 3));
        tiles.add(new Tile(8, 110, 3, 2, 2));
        tiles.add(new Tile(8, 103, 4, 2, 4));
        tiles.add(new Tile(8, 128, 0, 1, 2));
        tiles.add(new Tile(8, 117, 1, 1, 2));
        tiles.add(new Tile(8, 116, 2, 1, 2));
        tiles.add(new Tile(8, 117, 3, 1, 4));
        tiles.add(new Tile(8, 127, 4, 1, 4));
        tiles.add(new Tile(8, 127, 0, 0, 2));
        tiles.add(new Tile(8, 98, 1, 0, 4));
        tiles.add(new Tile(8, 128, 2, 0, 4));
        tiles.add(new Tile(8, 120, 3, 0, 3));
        tiles.add(new Tile(8, 127, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_9_NAME", "Forest Adventure"));
        puzzles.add(new Puzzle(9, 1, 13399L, 18, 0L, 0));
        tiles.add(new Tile(9, 71, 0, 3, 1));
        tiles.add(new Tile(9, 74, 1, 3, 1));
        tiles.add(new Tile(9, 76, 2, 3, 4));
        tiles.add(new Tile(9, 60, 3, 3, 4));
        tiles.add(new Tile(9, 67, 0, 2, 2));
        tiles.add(new Tile(9, 66, 1, 2, 4));
        tiles.add(new Tile(9, 62, 2, 2, 4));
        tiles.add(new Tile(9, 76, 3, 2, 4));
        tiles.add(new Tile(9, 65, 0, 1, 1));
        tiles.add(new Tile(9, 70, 1, 1, 4));
        tiles.add(new Tile(9, 75, 2, 1, 2));
        tiles.add(new Tile(9, 73, 3, 1, 3));
        tiles.add(new Tile(9, 75, 0, 0, 3));
        tiles.add(new Tile(9, 84, 1, 0, 1));
        tiles.add(new Tile(9, 70, 2, 0, 2));
        tiles.add(new Tile(9, 75, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_10_NAME", "A Scenic City"));
        puzzles.add(new Puzzle(10, 1, 38499L, 26, 0L, 0));
        tiles.add(new Tile(10, 50, 0, 4, 2));
        tiles.add(new Tile(10, 40, 1, 4, 3));
        tiles.add(new Tile(10, 50, 2, 4, 4));
        tiles.add(new Tile(10, 0, 3, 4, 2));
        tiles.add(new Tile(10, 53, 0, 3, 2));
        tiles.add(new Tile(10, 53, 1, 3, 2));
        tiles.add(new Tile(10, 50, 2, 3, 3));
        tiles.add(new Tile(10, 0, 3, 3, 4));
        tiles.add(new Tile(10, 50, 0, 2, 3));
        tiles.add(new Tile(10, 50, 1, 2, 2));
        tiles.add(new Tile(10, 49, 2, 2, 3));
        tiles.add(new Tile(10, 26, 3, 2, 4));
        tiles.add(new Tile(10, 49, 0, 1, 1));
        tiles.add(new Tile(10, 27, 1, 1, 4));
        tiles.add(new Tile(10, 54, 2, 1, 1));
        tiles.add(new Tile(10, 26, 3, 1, 2));
        tiles.add(new Tile(10, 49, 0, 0, 3));
        tiles.add(new Tile(10, 26, 1, 0, 1));
        tiles.add(new Tile(10, 49, 2, 0, 4));
        tiles.add(new Tile(10, 26, 3, 0, 2));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack2() {
        // The Big City
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_11_NAME", "One Shop Town"));
        puzzles.add(new Puzzle(11, 2, 3799L, 7, 0L, 0));
        tiles.add(new Tile(11, 19, 0, 0, 1));
        tiles.add(new Tile(11, 19, 0, 1, 3));
        tiles.add(new Tile(11, 21, 0, 2, 2));
        tiles.add(new Tile(11, 14, 1, 0, 4));
        tiles.add(new Tile(11, 29, 1, 1, 2));
        tiles.add(new Tile(11, 13, 1, 2, 1));
        tiles.add(new Tile(11, 19, 2, 0, 2));
        tiles.add(new Tile(11, 19, 2, 1, 1));
        tiles.add(new Tile(11, 21, 2, 2, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_12_NAME", "Beware The Moat"));
        puzzles.add(new Puzzle(12, 2, 3999L, 10, 0L, 0));
        tiles.add(new Tile(12, 50, 0, 0, 2));
        tiles.add(new Tile(12, 40, 0, 1, 4));
        tiles.add(new Tile(12, 50, 0, 2, 3));
        tiles.add(new Tile(12, 40, 1, 0, 4));
        tiles.add(new Tile(12, 31, 1, 1, 1));
        tiles.add(new Tile(12, 40, 1, 2, 2));
        tiles.add(new Tile(12, 50, 2, 0, 3));
        tiles.add(new Tile(12, 40, 2, 1, 3));
        tiles.add(new Tile(12, 50, 2, 2, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_13_NAME", "Pop To The Shops"));
        puzzles.add(new Puzzle(13, 2, 4899L, 9, 0L, 0));
        tiles.add(new Tile(13, 19, 0, 0, 3));
        tiles.add(new Tile(13, 29, 0, 1, 1));
        tiles.add(new Tile(13, 19, 0, 2, 4));
        tiles.add(new Tile(13, 15, 1, 0, 2));
        tiles.add(new Tile(13, 30, 1, 1, 1));
        tiles.add(new Tile(13, 15, 1, 2, 2));
        tiles.add(new Tile(13, 38, 2, 0, 4));
        tiles.add(new Tile(13, 13, 2, 1, 1));
        tiles.add(new Tile(13, 38, 2, 2, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_14_NAME", "Transition The Flows"));
        puzzles.add(new Puzzle(14, 2, 9099L, 14, 0L, 0));
        tiles.add(new Tile(14, 19, 0, 0, 2));
        tiles.add(new Tile(14, 14, 0, 1, 3));
        tiles.add(new Tile(14, 19, 0, 2, 4));
        tiles.add(new Tile(14, 29, 1, 0, 1));
        tiles.add(new Tile(14, 46, 1, 1, 3));
        tiles.add(new Tile(14, 46, 1, 2, 1));
        tiles.add(new Tile(14, 18, 2, 0, 1));
        tiles.add(new Tile(14, 18, 2, 1, 1));
        tiles.add(new Tile(14, 30, 2, 2, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_15_NAME", "Height Matters!"));
        puzzles.add(new Puzzle(15, 2, 5299L, 13, 0L, 0));
        tiles.add(new Tile(15, 19, 0, 0, 3));
        tiles.add(new Tile(15, 20, 0, 1, 3));
        tiles.add(new Tile(15, 48, 0, 2, 1));
        tiles.add(new Tile(15, 20, 1, 0, 2));
        tiles.add(new Tile(15, 48, 1, 1, 2));
        tiles.add(new Tile(15, 48, 1, 2, 1));
        tiles.add(new Tile(15, 48, 2, 0, 4));
        tiles.add(new Tile(15, 48, 2, 1, 4));
        tiles.add(new Tile(15, 21, 2, 2, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_16_NAME", "Make Your Own Solution"));
        puzzles.add(new Puzzle(16, 2, 6199L, 12, 0L, 0));
        tiles.add(new Tile(16, 41, 0, 0, 4));
        tiles.add(new Tile(16, 41, 0, 1, 2));
        tiles.add(new Tile(16, 41, 0, 2, 1));
        tiles.add(new Tile(16, 41, 1, 0, 3));
        tiles.add(new Tile(16, 31, 1, 1, 4));
        tiles.add(new Tile(16, 41, 1, 2, 2));
        tiles.add(new Tile(16, 41, 2, 0, 3));
        tiles.add(new Tile(16, 41, 2, 1, 4));
        tiles.add(new Tile(16, 41, 2, 2, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_17_NAME", "Gridlock"));
        puzzles.add(new Puzzle(17, 2, 4399L, 12, 0L, 0));
        tiles.add(new Tile(17, 19, 0, 0, 4));
        tiles.add(new Tile(17, 17, 0, 1, 3));
        tiles.add(new Tile(17, 19, 0, 2, 2));
        tiles.add(new Tile(17, 17, 1, 0, 1));
        tiles.add(new Tile(17, 16, 1, 1, 3));
        tiles.add(new Tile(17, 17, 1, 2, 2));
        tiles.add(new Tile(17, 19, 2, 0, 1));
        tiles.add(new Tile(17, 17, 2, 1, 4));
        tiles.add(new Tile(17, 19, 2, 2, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_18_NAME", "Tree Lined Swimway"));
        puzzles.add(new Puzzle(18, 2, 5099L, 12, 0L, 0));
        tiles.add(new Tile(18, 26, 0, 0, 2));
        tiles.add(new Tile(18, 41, 0, 1, 1));
        tiles.add(new Tile(18, 26, 0, 2, 4));
        tiles.add(new Tile(18, 27, 1, 0, 2));
        tiles.add(new Tile(18, 40, 1, 1, 3));
        tiles.add(new Tile(18, 27, 1, 2, 1));
        tiles.add(new Tile(18, 26, 2, 0, 4));
        tiles.add(new Tile(18, 41, 2, 1, 1));
        tiles.add(new Tile(18, 26, 2, 2, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_19_NAME", "Competitive Business"));
        puzzles.add(new Puzzle(19, 2, 3899L, 7, 0L, 0));
        tiles.add(new Tile(19, 19, 0, 0, 4));
        tiles.add(new Tile(19, 18, 0, 1, 2));
        tiles.add(new Tile(19, 13, 0, 2, 4));
        tiles.add(new Tile(19, 17, 1, 0, 1));
        tiles.add(new Tile(19, 14, 1, 1, 4));
        tiles.add(new Tile(19, 18, 1, 2, 2));
        tiles.add(new Tile(19, 19, 2, 0, 3));
        tiles.add(new Tile(19, 18, 2, 1, 1));
        tiles.add(new Tile(19, 13, 2, 2, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_20_NAME", "The Long Way Round"));
        puzzles.add(new Puzzle(20, 2, 7699L, 17, 0L, 0));
        tiles.add(new Tile(20, 19, 0, 0, 2));
        tiles.add(new Tile(20, 20, 0, 1, 2));
        tiles.add(new Tile(20, 48, 0, 2, 4));
        tiles.add(new Tile(20, 25, 1, 0, 2));
        tiles.add(new Tile(20, 24, 1, 1, 1));
        tiles.add(new Tile(20, 47, 1, 2, 3));
        tiles.add(new Tile(20, 19, 2, 0, 2));
        tiles.add(new Tile(20, 20, 2, 1, 4));
        tiles.add(new Tile(20, 48, 2, 2, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_21_NAME", "It Never Ends"));
        puzzles.add(new Puzzle(21, 2, 9699L, 19, 0L, 0));
        tiles.add(new Tile(21, 19, 0, 0, 4));
        tiles.add(new Tile(21, 19, 0, 1, 2));
        tiles.add(new Tile(21, 24, 0, 2, 1));
        tiles.add(new Tile(21, 23, 0, 3, 4));
        tiles.add(new Tile(21, 19, 1, 0, 3));
        tiles.add(new Tile(21, 16, 1, 1, 2));
        tiles.add(new Tile(21, 19, 1, 2, 1));
        tiles.add(new Tile(21, 24, 1, 3, 4));
        tiles.add(new Tile(21, 38, 2, 0, 4));
        tiles.add(new Tile(21, 19, 2, 1, 3));
        tiles.add(new Tile(21, 16, 2, 2, 2));
        tiles.add(new Tile(21, 19, 2, 3, 3));
        tiles.add(new Tile(21, 19, 3, 0, 3));
        tiles.add(new Tile(21, 38, 3, 1, 1));
        tiles.add(new Tile(21, 19, 3, 2, 4));
        tiles.add(new Tile(21, 19, 3, 3, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_22_NAME", "Round And Round"));
        puzzles.add(new Puzzle(22, 2, 8299L, 15, 0L, 0));
        tiles.add(new Tile(22, 19, 0, 0, 4));
        tiles.add(new Tile(22, 19, 0, 1, 2));
        tiles.add(new Tile(22, 19, 0, 2, 3));
        tiles.add(new Tile(22, 19, 0, 3, 4));
        tiles.add(new Tile(22, 15, 1, 0, 1));
        tiles.add(new Tile(22, 25, 1, 1, 3));
        tiles.add(new Tile(22, 25, 1, 2, 3));
        tiles.add(new Tile(22, 15, 1, 3, 2));
        tiles.add(new Tile(22, 29, 2, 0, 2));
        tiles.add(new Tile(22, 25, 2, 1, 4));
        tiles.add(new Tile(22, 25, 2, 2, 1));
        tiles.add(new Tile(22, 29, 2, 3, 4));
        tiles.add(new Tile(22, 19, 3, 0, 2));
        tiles.add(new Tile(22, 17, 3, 1, 1));
        tiles.add(new Tile(22, 17, 3, 2, 3));
        tiles.add(new Tile(22, 19, 3, 3, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_23_NAME", "The High Road"));
        puzzles.add(new Puzzle(23, 2, 5499L, 11, 0L, 0));
        tiles.add(new Tile(23, 48, 0, 0, 2));
        tiles.add(new Tile(23, 47, 0, 1, 3));
        tiles.add(new Tile(23, 47, 0, 2, 1));
        tiles.add(new Tile(23, 48, 0, 3, 4));
        tiles.add(new Tile(23, 47, 1, 0, 1));
        tiles.add(new Tile(23, 31, 1, 1, 1));
        tiles.add(new Tile(23, 31, 1, 2, 2));
        tiles.add(new Tile(23, 47, 1, 3, 3));
        tiles.add(new Tile(23, 47, 2, 0, 4));
        tiles.add(new Tile(23, 31, 2, 1, 1));
        tiles.add(new Tile(23, 31, 2, 2, 3));
        tiles.add(new Tile(23, 47, 2, 3, 1));
        tiles.add(new Tile(23, 48, 3, 0, 4));
        tiles.add(new Tile(23, 47, 3, 1, 4));
        tiles.add(new Tile(23, 47, 3, 2, 2));
        tiles.add(new Tile(23, 48, 3, 3, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_24_NAME", "Better Go Slow!"));
        puzzles.add(new Puzzle(24, 2, 13499L, 21, 0L, 0));
        tiles.add(new Tile(24, 26, 0, 0, 3));
        tiles.add(new Tile(24, 27, 0, 1, 2));
        tiles.add(new Tile(24, 28, 0, 2, 1));
        tiles.add(new Tile(24, 26, 0, 3, 4));
        tiles.add(new Tile(24, 18, 1, 0, 1));
        tiles.add(new Tile(24, 25, 1, 1, 4));
        tiles.add(new Tile(24, 20, 1, 2, 1));
        tiles.add(new Tile(24, 48, 1, 3, 4));
        tiles.add(new Tile(24, 18, 2, 0, 4));
        tiles.add(new Tile(24, 25, 2, 1, 3));
        tiles.add(new Tile(24, 20, 2, 2, 2));
        tiles.add(new Tile(24, 48, 2, 3, 2));
        tiles.add(new Tile(24, 24, 3, 0, 1));
        tiles.add(new Tile(24, 22, 3, 1, 4));
        tiles.add(new Tile(24, 24, 3, 2, 3));
        tiles.add(new Tile(24, 30, 3, 3, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_25_NAME", "Coming Up For Air"));
        puzzles.add(new Puzzle(25, 2, 9699L, 16, 0L, 0));
        tiles.add(new Tile(25, 38, 0, 0, 2));
        tiles.add(new Tile(25, 38, 0, 1, 4));
        tiles.add(new Tile(25, 38, 0, 2, 1));
        tiles.add(new Tile(25, 38, 0, 3, 3));
        tiles.add(new Tile(25, 29, 1, 0, 1));
        tiles.add(new Tile(25, 15, 1, 1, 4));
        tiles.add(new Tile(25, 15, 1, 2, 3));
        tiles.add(new Tile(25, 15, 1, 3, 2));
        tiles.add(new Tile(25, 15, 2, 0, 2));
        tiles.add(new Tile(25, 17, 2, 1, 1));
        tiles.add(new Tile(25, 16, 2, 2, 3));
        tiles.add(new Tile(25, 17, 2, 3, 4));
        tiles.add(new Tile(25, 38, 3, 0, 2));
        tiles.add(new Tile(25, 38, 3, 1, 2));
        tiles.add(new Tile(25, 38, 3, 2, 1));
        tiles.add(new Tile(25, 38, 3, 3, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_26_NAME", "Gone Fishing"));
        puzzles.add(new Puzzle(26, 2, 14599L, 28, 0L, 0));
        tiles.add(new Tile(26, 18, 0, 0, 4));
        tiles.add(new Tile(26, 25, 0, 1, 2));
        tiles.add(new Tile(26, 25, 0, 2, 3));
        tiles.add(new Tile(26, 18, 0, 3, 1));
        tiles.add(new Tile(26, 23, 1, 0, 2));
        tiles.add(new Tile(26, 23, 1, 1, 4));
        tiles.add(new Tile(26, 22, 1, 2, 2));
        tiles.add(new Tile(26, 24, 1, 3, 4));
        tiles.add(new Tile(26, 23, 2, 0, 1));
        tiles.add(new Tile(26, 24, 2, 1, 3));
        tiles.add(new Tile(26, 22, 2, 2, 3));
        tiles.add(new Tile(26, 22, 2, 3, 2));
        tiles.add(new Tile(26, 41, 3, 0, 1));
        tiles.add(new Tile(26, 41, 3, 1, 4));
        tiles.add(new Tile(26, 23, 3, 2, 2));
        tiles.add(new Tile(26, 23, 3, 3, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_27_NAME", "Keep Going Left"));
        puzzles.add(new Puzzle(27, 2, 8199L, 14, 0L, 0));
        tiles.add(new Tile(27, 49, 0, 0, 1));
        tiles.add(new Tile(27, 27, 0, 1, 2));
        tiles.add(new Tile(27, 27, 0, 2, 4));
        tiles.add(new Tile(27, 49, 0, 3, 3));
        tiles.add(new Tile(27, 28, 1, 0, 1));
        tiles.add(new Tile(27, 49, 1, 1, 4));
        tiles.add(new Tile(27, 49, 1, 2, 3));
        tiles.add(new Tile(27, 28, 1, 3, 2));
        tiles.add(new Tile(27, 28, 2, 0, 2));
        tiles.add(new Tile(27, 26, 2, 1, 2));
        tiles.add(new Tile(27, 28, 2, 2, 1));
        tiles.add(new Tile(27, 27, 2, 3, 3));
        tiles.add(new Tile(27, 49, 3, 0, 4));
        tiles.add(new Tile(27, 27, 3, 1, 1));
        tiles.add(new Tile(27, 49, 3, 2, 3));
        tiles.add(new Tile(27, 26, 3, 3, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_28_NAME", "Don't Miss The Turning"));
        puzzles.add(new Puzzle(28, 2, 9199L, 19, 0L, 0));
        tiles.add(new Tile(28, 32, 0, 0, 4));
        tiles.add(new Tile(28, 38, 0, 1, 2));
        tiles.add(new Tile(28, 20, 0, 2, 1));
        tiles.add(new Tile(28, 48, 0, 3, 3));
        tiles.add(new Tile(28, 41, 1, 0, 2));
        tiles.add(new Tile(28, 40, 1, 1, 1));
        tiles.add(new Tile(28, 41, 1, 2, 3));
        tiles.add(new Tile(28, 47, 1, 3, 2));
        tiles.add(new Tile(28, 38, 2, 0, 2));
        tiles.add(new Tile(28, 20, 2, 1, 2));
        tiles.add(new Tile(28, 47, 2, 2, 4));
        tiles.add(new Tile(28, 48, 2, 3, 1));
        tiles.add(new Tile(28, 26, 3, 0, 3));
        tiles.add(new Tile(28, 27, 3, 1, 2));
        tiles.add(new Tile(28, 26, 3, 2, 1));
        tiles.add(new Tile(28, 31, 3, 3, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_29_NAME", "End Of The Line"));
        puzzles.add(new Puzzle(29, 2, 7999L, 15, 0L, 0));
        tiles.add(new Tile(29, 18, 0, 0, 2));
        tiles.add(new Tile(29, 14, 0, 1, 4));
        tiles.add(new Tile(29, 17, 0, 2, 1));
        tiles.add(new Tile(29, 29, 0, 3, 4));
        tiles.add(new Tile(29, 19, 0, 4, 2));
        tiles.add(new Tile(29, 13, 0, 5, 4));
        tiles.add(new Tile(29, 23, 0, 6, 3));
        tiles.add(new Tile(29, 23, 0, 7, 1));
        tiles.add(new Tile(29, 30, 1, 0, 2));
        tiles.add(new Tile(29, 18, 1, 1, 3));
        tiles.add(new Tile(29, 19, 1, 2, 2));
        tiles.add(new Tile(29, 31, 1, 3, 4));
        tiles.add(new Tile(29, 19, 1, 4, 1));
        tiles.add(new Tile(29, 29, 1, 5, 3));
        tiles.add(new Tile(29, 25, 1, 6, 2));
        tiles.add(new Tile(29, 25, 1, 7, 2));
        tiles.add(new Tile(29, 38, 1, 8, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_30_NAME", "A Summer Walk"));
        puzzles.add(new Puzzle(30, 2, 12199L, 25, 0L, 0));
        tiles.add(new Tile(30, 18, 0, 0, 2));
        tiles.add(new Tile(30, 25, 0, 1, 1));
        tiles.add(new Tile(30, 29, 0, 2, 4));
        tiles.add(new Tile(30, 46, 0, 3, 3));
        tiles.add(new Tile(30, 23, 1, 0, 2));
        tiles.add(new Tile(30, 23, 1, 1, 4));
        tiles.add(new Tile(30, 46, 1, 2, 1));
        tiles.add(new Tile(30, 23, 1, 3, 3));
        tiles.add(new Tile(30, 22, 2, 0, 2));
        tiles.add(new Tile(30, 30, 2, 1, 4));
        tiles.add(new Tile(30, 25, 2, 2, 4));
        tiles.add(new Tile(30, 23, 2, 3, 4));
        tiles.add(new Tile(30, 23, 3, 0, 1));
        tiles.add(new Tile(30, 23, 3, 1, 3));
        tiles.add(new Tile(30, 38, 3, 2, 2));
        tiles.add(new Tile(30, 22, 3, 3, 3));
        tiles.add(new Tile(30, 21, 4, 0, 2));
        tiles.add(new Tile(30, 23, 4, 1, 1));
        tiles.add(new Tile(30, 22, 4, 2, 4));
        tiles.add(new Tile(30, 23, 4, 3, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_31_NAME", "Highs And Lows"));
        puzzles.add(new Puzzle(31, 2, 7199L, 15, 0L, 0));
        tiles.add(new Tile(31, 19, 0, 0, 4));
        tiles.add(new Tile(31, 25, 0, 1, 2));
        tiles.add(new Tile(31, 20, 0, 2, 3));
        tiles.add(new Tile(31, 48, 0, 3, 4));
        tiles.add(new Tile(31, 38, 1, 0, 2));
        tiles.add(new Tile(31, 22, 1, 1, 4));
        tiles.add(new Tile(31, 13, 1, 2, 1));
        tiles.add(new Tile(31, 47, 1, 3, 1));
        tiles.add(new Tile(31, 38, 2, 0, 3));
        tiles.add(new Tile(31, 22, 2, 1, 2));
        tiles.add(new Tile(31, 30, 2, 2, 1));
        tiles.add(new Tile(31, 20, 2, 3, 4));
        tiles.add(new Tile(31, 19, 3, 0, 1));
        tiles.add(new Tile(31, 25, 3, 1, 3));
        tiles.add(new Tile(31, 29, 3, 2, 2));
        tiles.add(new Tile(31, 19, 3, 3, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_32_NAME", "Path Shortcut"));
        puzzles.add(new Puzzle(32, 2, 28899L, 38, 0L, 0));
        tiles.add(new Tile(32, 48, 0, 4, 3));
        tiles.add(new Tile(32, 48, 1, 4, 3));
        tiles.add(new Tile(32, 21, 2, 4, 2));
        tiles.add(new Tile(32, 26, 3, 4, 3));
        tiles.add(new Tile(32, 27, 4, 4, 4));
        tiles.add(new Tile(32, 49, 5, 4, 3));
        tiles.add(new Tile(32, 47, 0, 3, 1));
        tiles.add(new Tile(32, 48, 1, 3, 4));
        tiles.add(new Tile(32, 20, 2, 3, 2));
        tiles.add(new Tile(32, 19, 3, 3, 4));
        tiles.add(new Tile(32, 26, 4, 3, 2));
        tiles.add(new Tile(32, 55, 5, 3, 4));
        tiles.add(new Tile(32, 20, 0, 2, 3));
        tiles.add(new Tile(32, 21, 1, 2, 3));
        tiles.add(new Tile(32, 19, 2, 2, 1));
        tiles.add(new Tile(32, 17, 3, 2, 2));
        tiles.add(new Tile(32, 19, 4, 2, 1));
        tiles.add(new Tile(32, 26, 5, 2, 2));
        tiles.add(new Tile(32, 25, 0, 1, 1));
        tiles.add(new Tile(32, 23, 1, 1, 2));
        tiles.add(new Tile(32, 19, 2, 1, 2));
        tiles.add(new Tile(32, 25, 3, 1, 3));
        tiles.add(new Tile(32, 19, 4, 1, 3));
        tiles.add(new Tile(32, 21, 5, 1, 4));
        tiles.add(new Tile(32, 38, 0, 0, 2));
        tiles.add(new Tile(32, 23, 1, 0, 4));
        tiles.add(new Tile(32, 22, 2, 0, 4));
        tiles.add(new Tile(32, 23, 3, 0, 3));
        tiles.add(new Tile(32, 21, 4, 0, 4));
        tiles.add(new Tile(32, 31, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_33_NAME", "Curled"));
        puzzles.add(new Puzzle(33, 2, 3099L, 8, 0L, 0));
        tiles.add(new Tile(33, 41, 0, 2, 4));
        tiles.add(new Tile(33, 26, 1, 2, 3));
        tiles.add(new Tile(33, 49, 2, 2, 2));
        tiles.add(new Tile(33, 50, 0, 1, 1));
        tiles.add(new Tile(33, 41, 1, 1, 1));
        tiles.add(new Tile(33, 27, 2, 1, 1));
        tiles.add(new Tile(33, 26, 0, 0, 1));
        tiles.add(new Tile(33, 28, 1, 0, 3));
        tiles.add(new Tile(33, 49, 2, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_34_NAME", "Captive Audience"));
        puzzles.add(new Puzzle(34, 2, 7899L, 8, 0L, 0));
        tiles.add(new Tile(34, 80, 0, 3, 3));
        tiles.add(new Tile(34, 21, 1, 3, 1));
        tiles.add(new Tile(34, 19, 2, 3, 1));
        tiles.add(new Tile(34, 38, 3, 3, 1));
        tiles.add(new Tile(34, 15, 0, 2, 1));
        tiles.add(new Tile(34, 30, 1, 2, 4));
        tiles.add(new Tile(34, 29, 2, 2, 1));
        tiles.add(new Tile(34, 21, 3, 2, 3));
        tiles.add(new Tile(34, 15, 0, 1, 3));
        tiles.add(new Tile(34, 13, 1, 1, 1));
        tiles.add(new Tile(34, 15, 2, 1, 2));
        tiles.add(new Tile(34, 21, 3, 1, 2));
        tiles.add(new Tile(34, 58, 0, 0, 4));
        tiles.add(new Tile(34, 15, 1, 0, 3));
        tiles.add(new Tile(34, 57, 2, 0, 4));
        tiles.add(new Tile(34, 21, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_35_NAME", "Growth"));
        puzzles.add(new Puzzle(35, 2, 5699L, 10, 0L, 0));
        tiles.add(new Tile(35, 26, 0, 2, 1));
        tiles.add(new Tile(35, 27, 1, 2, 3));
        tiles.add(new Tile(35, 49, 2, 2, 2));
        tiles.add(new Tile(35, 26, 0, 1, 3));
        tiles.add(new Tile(35, 55, 1, 1, 4));
        tiles.add(new Tile(35, 55, 2, 1, 3));
        tiles.add(new Tile(35, 32, 0, 0, 2));
        tiles.add(new Tile(35, 26, 1, 0, 1));
        tiles.add(new Tile(35, 26, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_36_NAME", "Water Wheels"));
        puzzles.add(new Puzzle(36, 2, 13599L, 19, 0L, 0));
        tiles.add(new Tile(36, 21, 0, 4, 3));
        tiles.add(new Tile(36, 31, 1, 4, 1));
        tiles.add(new Tile(36, 50, 2, 4, 3));
        tiles.add(new Tile(36, 53, 3, 4, 2));
        tiles.add(new Tile(36, 50, 4, 4, 4));
        tiles.add(new Tile(36, 21, 0, 3, 4));
        tiles.add(new Tile(36, 41, 1, 3, 1));
        tiles.add(new Tile(36, 40, 2, 3, 2));
        tiles.add(new Tile(36, 50, 3, 3, 3));
        tiles.add(new Tile(36, 50, 4, 3, 2));
        tiles.add(new Tile(36, 21, 0, 2, 2));
        tiles.add(new Tile(36, 50, 1, 2, 2));
        tiles.add(new Tile(36, 53, 2, 2, 2));
        tiles.add(new Tile(36, 21, 3, 2, 4));
        tiles.add(new Tile(36, 21, 4, 2, 1));
        tiles.add(new Tile(36, 31, 0, 1, 2));
        tiles.add(new Tile(36, 21, 1, 1, 4));
        tiles.add(new Tile(36, 50, 2, 1, 1));
        tiles.add(new Tile(36, 53, 3, 1, 2));
        tiles.add(new Tile(36, 50, 4, 1, 1));
        tiles.add(new Tile(36, 21, 0, 0, 3));
        tiles.add(new Tile(36, 31, 1, 0, 4));
        tiles.add(new Tile(36, 21, 2, 0, 4));
        tiles.add(new Tile(36, 50, 3, 0, 4));
        tiles.add(new Tile(36, 50, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_37_NAME", "Nestled Away"));
        puzzles.add(new Puzzle(37, 2, 10199L, 17, 0L, 0));
        tiles.add(new Tile(37, 48, 0, 2, 3));
        tiles.add(new Tile(37, 47, 1, 2, 1));
        tiles.add(new Tile(37, 20, 2, 2, 3));
        tiles.add(new Tile(37, 17, 3, 2, 2));
        tiles.add(new Tile(37, 77, 4, 2, 2));
        tiles.add(new Tile(37, 19, 5, 2, 1));
        tiles.add(new Tile(37, 20, 0, 1, 1));
        tiles.add(new Tile(37, 13, 1, 1, 4));
        tiles.add(new Tile(37, 24, 2, 1, 3));
        tiles.add(new Tile(37, 25, 3, 1, 1));
        tiles.add(new Tile(37, 32, 4, 1, 1));
        tiles.add(new Tile(37, 29, 5, 1, 1));
        tiles.add(new Tile(37, 19, 0, 0, 4));
        tiles.add(new Tile(37, 20, 1, 0, 2));
        tiles.add(new Tile(37, 85, 2, 0, 1));
        tiles.add(new Tile(37, 19, 3, 0, 3));
        tiles.add(new Tile(37, 14, 4, 0, 1));
        tiles.add(new Tile(37, 19, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_38_NAME", "Figure Of 6"));
        puzzles.add(new Puzzle(38, 2, 3099L, 7, 0L, 0));
        tiles.add(new Tile(38, 19, 0, 2, 3));
        tiles.add(new Tile(38, 38, 1, 2, 2));
        tiles.add(new Tile(38, 17, 0, 1, 4));
        tiles.add(new Tile(38, 46, 1, 1, 2));
        tiles.add(new Tile(38, 51, 0, 0, 4));
        tiles.add(new Tile(38, 23, 1, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_39_NAME", "Trees Ahoy"));
        puzzles.add(new Puzzle(39, 2, 8599L, 14, 0L, 0));
        tiles.add(new Tile(39, 18, 0, 3, 4));
        tiles.add(new Tile(39, 21, 1, 3, 2));
        tiles.add(new Tile(39, 18, 2, 3, 3));
        tiles.add(new Tile(39, 21, 3, 3, 4));
        tiles.add(new Tile(39, 29, 0, 2, 2));
        tiles.add(new Tile(39, 58, 1, 2, 1));
        tiles.add(new Tile(39, 58, 2, 2, 2));
        tiles.add(new Tile(39, 26, 3, 2, 2));
        tiles.add(new Tile(39, 78, 0, 1, 3));
        tiles.add(new Tile(39, 78, 1, 1, 4));
        tiles.add(new Tile(39, 32, 2, 1, 2));
        tiles.add(new Tile(39, 27, 3, 1, 2));
        tiles.add(new Tile(39, 19, 0, 0, 1));
        tiles.add(new Tile(39, 58, 1, 0, 3));
        tiles.add(new Tile(39, 26, 2, 0, 4));
        tiles.add(new Tile(39, 49, 3, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_40_NAME", "Road To Nowhere"));
        puzzles.add(new Puzzle(40, 2, 3999L, 11, 0L, 0));
        tiles.add(new Tile(40, 80, 0, 2, 3));
        tiles.add(new Tile(40, 17, 1, 2, 1));
        tiles.add(new Tile(40, 19, 2, 2, 1));
        tiles.add(new Tile(40, 85, 0, 1, 2));
        tiles.add(new Tile(40, 80, 1, 1, 3));
        tiles.add(new Tile(40, 29, 2, 1, 1));
        tiles.add(new Tile(40, 48, 0, 0, 1));
        tiles.add(new Tile(40, 20, 1, 0, 2));
        tiles.add(new Tile(40, 56, 2, 0, 1));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack3() {
        // Escape To The Country
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_41_NAME", "Hi"));
        puzzles.add(new Puzzle(41, 3, 3899L, 7, 0L, 0));
        tiles.add(new Tile(41, 3, 0, 2, 1));
        tiles.add(new Tile(41, 5, 1, 2, 4));
        tiles.add(new Tile(41, 3, 2, 2, 2));
        tiles.add(new Tile(41, 35, 0, 1, 1));
        tiles.add(new Tile(41, 7, 1, 1, 4));
        tiles.add(new Tile(41, 35, 2, 1, 4));
        tiles.add(new Tile(41, 3, 0, 0, 1));
        tiles.add(new Tile(41, 5, 1, 0, 4));
        tiles.add(new Tile(41, 3, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_42_NAME", "Prongs"));
        puzzles.add(new Puzzle(42, 3, 6499L, 12, 0L, 0));
        tiles.add(new Tile(42, 43, 0, 3, 3));
        tiles.add(new Tile(42, 3, 1, 3, 4));
        tiles.add(new Tile(42, 6, 2, 3, 4));
        tiles.add(new Tile(42, 1, 0, 2, 1));
        tiles.add(new Tile(42, 4, 1, 2, 2));
        tiles.add(new Tile(42, 1, 2, 2, 3));
        tiles.add(new Tile(42, 11, 0, 1, 1));
        tiles.add(new Tile(42, 10, 1, 1, 2));
        tiles.add(new Tile(42, 33, 2, 1, 2));
        tiles.add(new Tile(42, 36, 0, 0, 1));
        tiles.add(new Tile(42, 3, 1, 0, 2));
        tiles.add(new Tile(42, 35, 2, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_43_NAME", "Circling"));
        puzzles.add(new Puzzle(43, 3, 4899L, 10, 0L, 0));
        tiles.add(new Tile(43, 1, 0, 2, 1));
        tiles.add(new Tile(43, 11, 1, 2, 3));
        tiles.add(new Tile(43, 39, 2, 2, 3));
        tiles.add(new Tile(43, 11, 0, 1, 1));
        tiles.add(new Tile(43, 44, 1, 1, 2));
        tiles.add(new Tile(43, 37, 2, 1, 1));
        tiles.add(new Tile(43, 39, 0, 0, 2));
        tiles.add(new Tile(43, 37, 1, 0, 4));
        tiles.add(new Tile(43, 39, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_44_NAME", "Long Island"));
        puzzles.add(new Puzzle(44, 3, 14399L, 26, 0L, 0));
        tiles.add(new Tile(44, 6, 0, 1, 2));
        tiles.add(new Tile(44, 1, 1, 1, 4));
        tiles.add(new Tile(44, 79, 2, 1, 4));
        tiles.add(new Tile(44, 37, 3, 1, 2));
        tiles.add(new Tile(44, 36, 4, 1, 4));
        tiles.add(new Tile(44, 8, 5, 1, 2));
        tiles.add(new Tile(44, 35, 6, 1, 4));
        tiles.add(new Tile(44, 42, 7, 1, 4));
        tiles.add(new Tile(44, 1, 8, 1, 3));
        tiles.add(new Tile(44, 3, 0, 0, 3));
        tiles.add(new Tile(44, 5, 1, 0, 3));
        tiles.add(new Tile(44, 2, 2, 0, 3));
        tiles.add(new Tile(44, 3, 3, 0, 3));
        tiles.add(new Tile(44, 35, 4, 0, 4));
        tiles.add(new Tile(44, 8, 5, 0, 3));
        tiles.add(new Tile(44, 6, 6, 0, 2));
        tiles.add(new Tile(44, 1, 7, 0, 3));
        tiles.add(new Tile(44, 42, 8, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_45_NAME", "Stand Up"));
        puzzles.add(new Puzzle(45, 3, 6899L, 12, 0L, 0));
        tiles.add(new Tile(45, 0, 0, 2, 1));
        tiles.add(new Tile(45, 0, 1, 2, 3));
        tiles.add(new Tile(45, 3, 2, 2, 4));
        tiles.add(new Tile(45, 1, 3, 2, 2));
        tiles.add(new Tile(45, 3, 4, 2, 1));
        tiles.add(new Tile(45, 36, 0, 1, 3));
        tiles.add(new Tile(45, 11, 1, 1, 3));
        tiles.add(new Tile(45, 4, 2, 1, 2));
        tiles.add(new Tile(45, 5, 3, 1, 2));
        tiles.add(new Tile(45, 0, 4, 1, 2));
        tiles.add(new Tile(45, 0, 0, 0, 3));
        tiles.add(new Tile(45, 0, 1, 0, 3));
        tiles.add(new Tile(45, 3, 2, 0, 4));
        tiles.add(new Tile(45, 1, 3, 0, 4));
        tiles.add(new Tile(45, 3, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_46_NAME", "Country: Bullseye"));
        puzzles.add(new Puzzle(46, 3, 8199L, 12, 0L, 0));
        tiles.add(new Tile(46, 34, 0, 4, 3));
        tiles.add(new Tile(46, 12, 1, 4, 4));
        tiles.add(new Tile(46, 3, 2, 4, 2));
        tiles.add(new Tile(46, 0, 3, 4, 1));
        tiles.add(new Tile(46, 0, 4, 4, 3));
        tiles.add(new Tile(46, 12, 0, 3, 1));
        tiles.add(new Tile(46, 8, 1, 3, 1));
        tiles.add(new Tile(46, 7, 2, 3, 2));
        tiles.add(new Tile(46, 8, 3, 3, 1));
        tiles.add(new Tile(46, 0, 4, 3, 3));
        tiles.add(new Tile(46, 3, 0, 2, 3));
        tiles.add(new Tile(46, 7, 1, 2, 3));
        tiles.add(new Tile(46, 4, 2, 2, 3));
        tiles.add(new Tile(46, 7, 3, 2, 1));
        tiles.add(new Tile(46, 3, 4, 2, 2));
        tiles.add(new Tile(46, 0, 0, 1, 4));
        tiles.add(new Tile(46, 8, 1, 1, 1));
        tiles.add(new Tile(46, 7, 2, 1, 4));
        tiles.add(new Tile(46, 8, 3, 1, 4));
        tiles.add(new Tile(46, 6, 4, 1, 2));
        tiles.add(new Tile(46, 0, 0, 0, 3));
        tiles.add(new Tile(46, 0, 1, 0, 4));
        tiles.add(new Tile(46, 3, 2, 0, 2));
        tiles.add(new Tile(46, 43, 3, 0, 2));
        tiles.add(new Tile(46, 45, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_47_NAME", "Waterworks"));
        puzzles.add(new Puzzle(47, 3, 8899L, 19, 0L, 0));
        tiles.add(new Tile(47, 8, 0, 3, 4));
        tiles.add(new Tile(47, 9, 1, 3, 1));
        tiles.add(new Tile(47, 8, 2, 3, 1));
        tiles.add(new Tile(47, 45, 3, 3, 3));
        tiles.add(new Tile(47, 8, 0, 2, 1));
        tiles.add(new Tile(47, 8, 1, 2, 4));
        tiles.add(new Tile(47, 8, 2, 2, 2));
        tiles.add(new Tile(47, 8, 3, 2, 1));
        tiles.add(new Tile(47, 0, 0, 1, 2));
        tiles.add(new Tile(47, 8, 1, 1, 4));
        tiles.add(new Tile(47, 8, 2, 1, 1));
        tiles.add(new Tile(47, 9, 3, 1, 2));
        tiles.add(new Tile(47, 0, 0, 0, 4));
        tiles.add(new Tile(47, 0, 1, 0, 1));
        tiles.add(new Tile(47, 8, 2, 0, 3));
        tiles.add(new Tile(47, 8, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_48_NAME", "The Moat"));
        puzzles.add(new Puzzle(48, 3, 22199L, 39, 0L, 0));
        tiles.add(new Tile(48, 1, 0, 4, 2));
        tiles.add(new Tile(48, 1, 1, 4, 4));
        tiles.add(new Tile(48, 45, 2, 4, 4));
        tiles.add(new Tile(48, 43, 3, 4, 1));
        tiles.add(new Tile(48, 12, 4, 4, 2));
        tiles.add(new Tile(48, 36, 5, 4, 3));
        tiles.add(new Tile(48, 11, 0, 3, 2));
        tiles.add(new Tile(48, 2, 1, 3, 1));
        tiles.add(new Tile(48, 8, 2, 3, 3));
        tiles.add(new Tile(48, 9, 3, 3, 4));
        tiles.add(new Tile(48, 8, 4, 3, 1));
        tiles.add(new Tile(48, 11, 5, 3, 3));
        tiles.add(new Tile(48, 37, 0, 2, 4));
        tiles.add(new Tile(48, 1, 1, 2, 3));
        tiles.add(new Tile(48, 7, 2, 2, 4));
        tiles.add(new Tile(48, 2, 3, 2, 3));
        tiles.add(new Tile(48, 7, 4, 2, 3));
        tiles.add(new Tile(48, 5, 5, 2, 4));
        tiles.add(new Tile(48, 39, 0, 1, 3));
        tiles.add(new Tile(48, 11, 1, 1, 4));
        tiles.add(new Tile(48, 7, 2, 1, 4));
        tiles.add(new Tile(48, 10, 3, 1, 1));
        tiles.add(new Tile(48, 7, 4, 1, 4));
        tiles.add(new Tile(48, 5, 5, 1, 4));
        tiles.add(new Tile(48, 12, 0, 0, 1));
        tiles.add(new Tile(48, 12, 1, 0, 1));
        tiles.add(new Tile(48, 8, 2, 0, 3));
        tiles.add(new Tile(48, 9, 3, 0, 4));
        tiles.add(new Tile(48, 8, 4, 0, 1));
        tiles.add(new Tile(48, 3, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_49_NAME", "U Bends"));
        puzzles.add(new Puzzle(49, 3, 7625L, 11, 0L, 0));
        tiles.add(new Tile(49, 35, 0, 2, 3));
        tiles.add(new Tile(49, 8, 1, 2, 2));
        tiles.add(new Tile(49, 9, 2, 2, 1));
        tiles.add(new Tile(49, 8, 3, 2, 3));
        tiles.add(new Tile(49, 9, 0, 1, 4));
        tiles.add(new Tile(49, 35, 1, 1, 3));
        tiles.add(new Tile(49, 35, 2, 1, 2));
        tiles.add(new Tile(49, 9, 3, 1, 2));
        tiles.add(new Tile(49, 8, 0, 0, 4));
        tiles.add(new Tile(49, 9, 1, 0, 3));
        tiles.add(new Tile(49, 8, 2, 0, 4));
        tiles.add(new Tile(49, 35, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_50_NAME", "Merging"));
        puzzles.add(new Puzzle(50, 3, 9909L, 21, 0L, 0));
        tiles.add(new Tile(50, 43, 0, 3, 2));
        tiles.add(new Tile(50, 39, 1, 3, 1));
        tiles.add(new Tile(50, 39, 2, 3, 4));
        tiles.add(new Tile(50, 43, 3, 3, 2));
        tiles.add(new Tile(50, 6, 0, 2, 3));
        tiles.add(new Tile(50, 37, 1, 2, 2));
        tiles.add(new Tile(50, 11, 2, 2, 1));
        tiles.add(new Tile(50, 3, 3, 2, 1));
        tiles.add(new Tile(50, 3, 0, 1, 3));
        tiles.add(new Tile(50, 11, 1, 1, 3));
        tiles.add(new Tile(50, 5, 2, 1, 3));
        tiles.add(new Tile(50, 1, 3, 1, 1));
        tiles.add(new Tile(50, 1, 0, 0, 1));
        tiles.add(new Tile(50, 5, 1, 0, 1));
        tiles.add(new Tile(50, 1, 2, 0, 2));
        tiles.add(new Tile(50, 6, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_51_NAME", "Padded Protection"));
        puzzles.add(new Puzzle(51, 3, 3907L, 10, 0L, 0));
        tiles.add(new Tile(51, 34, 0, 4, 3));
        tiles.add(new Tile(51, 34, 1, 4, 3));
        tiles.add(new Tile(51, 34, 2, 4, 2));
        tiles.add(new Tile(51, 34, 3, 4, 1));
        tiles.add(new Tile(51, 34, 4, 4, 3));
        tiles.add(new Tile(51, 34, 0, 3, 2));
        tiles.add(new Tile(51, 39, 1, 3, 3));
        tiles.add(new Tile(51, 37, 2, 3, 4));
        tiles.add(new Tile(51, 39, 3, 3, 4));
        tiles.add(new Tile(51, 34, 4, 3, 4));
        tiles.add(new Tile(51, 12, 0, 2, 1));
        tiles.add(new Tile(51, 11, 1, 2, 4));
        tiles.add(new Tile(51, 12, 2, 2, 1));
        tiles.add(new Tile(51, 11, 3, 2, 4));
        tiles.add(new Tile(51, 12, 4, 2, 1));
        tiles.add(new Tile(51, 44, 0, 1, 4));
        tiles.add(new Tile(51, 1, 1, 1, 4));
        tiles.add(new Tile(51, 10, 2, 1, 1));
        tiles.add(new Tile(51, 1, 3, 1, 4));
        tiles.add(new Tile(51, 43, 4, 1, 1));
        tiles.add(new Tile(51, 6, 0, 0, 3));
        tiles.add(new Tile(51, 6, 1, 0, 3));
        tiles.add(new Tile(51, 6, 2, 0, 3));
        tiles.add(new Tile(51, 6, 3, 0, 1));
        tiles.add(new Tile(51, 6, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_52_NAME", "For Snake"));
        puzzles.add(new Puzzle(52, 3, 6014L, 13, 0L, 0));
        tiles.add(new Tile(52, 8, 0, 4, 3));
        tiles.add(new Tile(52, 9, 1, 4, 3));
        tiles.add(new Tile(52, 35, 2, 4, 3));
        tiles.add(new Tile(52, 9, 0, 3, 2));
        tiles.add(new Tile(52, 6, 1, 3, 3));
        tiles.add(new Tile(52, 45, 2, 3, 1));
        tiles.add(new Tile(52, 8, 0, 2, 1));
        tiles.add(new Tile(52, 9, 1, 2, 4));
        tiles.add(new Tile(52, 8, 2, 2, 1));
        tiles.add(new Tile(52, 6, 0, 1, 1));
        tiles.add(new Tile(52, 43, 1, 1, 2));
        tiles.add(new Tile(52, 9, 2, 1, 4));
        tiles.add(new Tile(52, 35, 0, 0, 4));
        tiles.add(new Tile(52, 9, 1, 0, 3));
        tiles.add(new Tile(52, 8, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_53_NAME", "Focal Point"));
        puzzles.add(new Puzzle(53, 3, 23506L, 33, 0L, 0));
        tiles.add(new Tile(53, 8, 0, 4, 1));
        tiles.add(new Tile(53, 8, 1, 4, 1));
        tiles.add(new Tile(53, 36, 2, 4, 4));
        tiles.add(new Tile(53, 1, 3, 4, 1));
        tiles.add(new Tile(53, 1, 4, 4, 3));
        tiles.add(new Tile(53, 8, 0, 3, 1));
        tiles.add(new Tile(53, 8, 1, 3, 4));
        tiles.add(new Tile(53, 11, 2, 3, 2));
        tiles.add(new Tile(53, 1, 3, 3, 1));
        tiles.add(new Tile(53, 1, 4, 3, 1));
        tiles.add(new Tile(53, 36, 0, 2, 3));
        tiles.add(new Tile(53, 11, 1, 2, 3));
        tiles.add(new Tile(53, 4, 2, 2, 3));
        tiles.add(new Tile(53, 11, 3, 2, 1));
        tiles.add(new Tile(53, 36, 4, 2, 4));
        tiles.add(new Tile(53, 1, 0, 1, 1));
        tiles.add(new Tile(53, 1, 1, 1, 3));
        tiles.add(new Tile(53, 11, 2, 1, 1));
        tiles.add(new Tile(53, 8, 3, 1, 2));
        tiles.add(new Tile(53, 8, 4, 1, 1));
        tiles.add(new Tile(53, 1, 0, 0, 3));
        tiles.add(new Tile(53, 1, 1, 0, 4));
        tiles.add(new Tile(53, 36, 2, 0, 1));
        tiles.add(new Tile(53, 8, 3, 0, 4));
        tiles.add(new Tile(53, 8, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_54_NAME", "Snaking Around"));
        puzzles.add(new Puzzle(54, 3, 9670L, 16, 0L, 0));
        tiles.add(new Tile(54, 36, 0, 3, 4));
        tiles.add(new Tile(54, 39, 1, 3, 4));
        tiles.add(new Tile(54, 39, 2, 3, 4));
        tiles.add(new Tile(54, 79, 0, 2, 1));
        tiles.add(new Tile(54, 11, 1, 2, 2));
        tiles.add(new Tile(54, 79, 2, 2, 1));
        tiles.add(new Tile(54, 79, 0, 1, 3));
        tiles.add(new Tile(54, 11, 1, 1, 3));
        tiles.add(new Tile(54, 79, 2, 1, 2));
        tiles.add(new Tile(54, 39, 0, 0, 4));
        tiles.add(new Tile(54, 39, 1, 0, 2));
        tiles.add(new Tile(54, 36, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_55_NAME", "Double Loop"));
        puzzles.add(new Puzzle(55, 3, 19321L, 27, 0L, 0));
        tiles.add(new Tile(55, 3, 0, 5, 4));
        tiles.add(new Tile(55, 8, 1, 5, 3));
        tiles.add(new Tile(55, 9, 2, 5, 4));
        tiles.add(new Tile(55, 8, 3, 5, 1));
        tiles.add(new Tile(55, 6, 4, 5, 1));
        tiles.add(new Tile(55, 5, 0, 4, 4));
        tiles.add(new Tile(55, 7, 1, 4, 3));
        tiles.add(new Tile(55, 1, 2, 4, 3));
        tiles.add(new Tile(55, 9, 3, 4, 4));
        tiles.add(new Tile(55, 43, 4, 4, 4));
        tiles.add(new Tile(55, 2, 0, 3, 3));
        tiles.add(new Tile(55, 9, 1, 3, 2));
        tiles.add(new Tile(55, 5, 2, 3, 4));
        tiles.add(new Tile(55, 7, 3, 3, 4));
        tiles.add(new Tile(55, 1, 4, 3, 4));
        tiles.add(new Tile(55, 1, 0, 2, 3));
        tiles.add(new Tile(55, 7, 1, 2, 3));
        tiles.add(new Tile(55, 5, 2, 2, 3));
        tiles.add(new Tile(55, 9, 3, 2, 2));
        tiles.add(new Tile(55, 2, 4, 2, 4));
        tiles.add(new Tile(55, 44, 0, 1, 2));
        tiles.add(new Tile(55, 9, 1, 1, 1));
        tiles.add(new Tile(55, 1, 2, 1, 3));
        tiles.add(new Tile(55, 7, 3, 1, 4));
        tiles.add(new Tile(55, 1, 4, 1, 1));
        tiles.add(new Tile(55, 6, 0, 0, 1));
        tiles.add(new Tile(55, 8, 1, 0, 4));
        tiles.add(new Tile(55, 9, 2, 0, 4));
        tiles.add(new Tile(55, 8, 3, 0, 3));
        tiles.add(new Tile(55, 45, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_56_NAME", "Transition"));
        puzzles.add(new Puzzle(56, 3, 11993L, 20, 0L, 0));
        tiles.add(new Tile(56, 1, 0, 4, 4));
        tiles.add(new Tile(56, 2, 1, 4, 4));
        tiles.add(new Tile(56, 5, 2, 4, 1));
        tiles.add(new Tile(56, 2, 3, 4, 2));
        tiles.add(new Tile(56, 1, 4, 4, 3));
        tiles.add(new Tile(56, 2, 0, 3, 1));
        tiles.add(new Tile(56, 8, 1, 3, 1));
        tiles.add(new Tile(56, 7, 2, 3, 4));
        tiles.add(new Tile(56, 8, 3, 3, 1));
        tiles.add(new Tile(56, 2, 4, 3, 4));
        tiles.add(new Tile(56, 33, 0, 2, 3));
        tiles.add(new Tile(56, 33, 1, 2, 1));
        tiles.add(new Tile(56, 33, 2, 2, 3));
        tiles.add(new Tile(56, 33, 3, 2, 4));
        tiles.add(new Tile(56, 33, 4, 2, 4));
        tiles.add(new Tile(56, 9, 0, 1, 1));
        tiles.add(new Tile(56, 1, 1, 1, 4));
        tiles.add(new Tile(56, 7, 2, 1, 1));
        tiles.add(new Tile(56, 1, 3, 1, 2));
        tiles.add(new Tile(56, 9, 4, 1, 4));
        tiles.add(new Tile(56, 8, 0, 0, 1));
        tiles.add(new Tile(56, 9, 1, 0, 4));
        tiles.add(new Tile(56, 8, 2, 0, 4));
        tiles.add(new Tile(56, 35, 3, 0, 2));
        tiles.add(new Tile(56, 8, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_57_NAME", "High Island"));
        puzzles.add(new Puzzle(57, 3, 13539L, 20, 0L, 0));
        tiles.add(new Tile(57, 1, 0, 4, 2));
        tiles.add(new Tile(57, 2, 1, 4, 4));
        tiles.add(new Tile(57, 2, 2, 4, 3));
        tiles.add(new Tile(57, 1, 3, 4, 2));
        tiles.add(new Tile(57, 2, 0, 3, 2));
        tiles.add(new Tile(57, 39, 1, 3, 1));
        tiles.add(new Tile(57, 39, 2, 3, 4));
        tiles.add(new Tile(57, 33, 3, 3, 2));
        tiles.add(new Tile(57, 10, 0, 2, 2));
        tiles.add(new Tile(57, 11, 1, 2, 2));
        tiles.add(new Tile(57, 37, 2, 2, 3));
        tiles.add(new Tile(57, 9, 3, 2, 3));
        tiles.add(new Tile(57, 5, 0, 1, 2));
        tiles.add(new Tile(57, 134, 1, 1, 3));
        tiles.add(new Tile(57, 11, 2, 1, 4));
        tiles.add(new Tile(57, 33, 3, 1, 1));
        tiles.add(new Tile(57, 1, 0, 0, 1));
        tiles.add(new Tile(57, 2, 1, 0, 2));
        tiles.add(new Tile(57, 5, 2, 0, 1));
        tiles.add(new Tile(57, 1, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_58_NAME", "Snaking Along"));
        puzzles.add(new Puzzle(58, 3, 13144L, 17, 0L, 0));
        tiles.add(new Tile(58, 3, 0, 0, 4));
        tiles.add(new Tile(58, 2, 1, 0, 3));
        tiles.add(new Tile(58, 11, 2, 0, 4));
        tiles.add(new Tile(58, 37, 3, 0, 3));
        tiles.add(new Tile(58, 37, 4, 0, 4));
        tiles.add(new Tile(58, 11, 5, 0, 3));
        tiles.add(new Tile(58, 33, 6, 0, 1));
        tiles.add(new Tile(58, 9, 7, 0, 1));
        tiles.add(new Tile(58, 9, 8, 0, 1));
        tiles.add(new Tile(58, 33, 9, 0, 1));
        tiles.add(new Tile(58, 10, 10, 0, 4));
        tiles.add(new Tile(58, 2, 11, 0, 1));
        tiles.add(new Tile(58, 11, 12, 0, 1));
        tiles.add(new Tile(58, 37, 13, 0, 2));
        tiles.add(new Tile(58, 36, 14, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_59_NAME", "Up, Up, and Away"));
        puzzles.add(new Puzzle(59, 3, 7926L, 17, 0L, 0));
        tiles.add(new Tile(59, 44, 0, 3, 2));
        tiles.add(new Tile(59, 44, 1, 3, 4));
        tiles.add(new Tile(59, 1, 2, 3, 1));
        tiles.add(new Tile(59, 3, 3, 3, 4));
        tiles.add(new Tile(59, 1, 0, 2, 2));
        tiles.add(new Tile(59, 2, 1, 2, 2));
        tiles.add(new Tile(59, 134, 2, 2, 1));
        tiles.add(new Tile(59, 45, 3, 2, 3));
        tiles.add(new Tile(59, 134, 0, 1, 3));
        tiles.add(new Tile(59, 79, 1, 1, 3));
        tiles.add(new Tile(59, 79, 2, 1, 1));
        tiles.add(new Tile(59, 3, 3, 1, 1));
        tiles.add(new Tile(59, 44, 0, 0, 2));
        tiles.add(new Tile(59, 43, 1, 0, 2));
        tiles.add(new Tile(59, 45, 2, 0, 4));
        tiles.add(new Tile(59, 6, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_60_NAME", "Antique Key"));
        puzzles.add(new Puzzle(60, 3, 7464L, 15, 0L, 0));
        tiles.add(new Tile(60, 45, 0, 3, 4));
        tiles.add(new Tile(60, 6, 1, 3, 2));
        tiles.add(new Tile(60, 1, 2, 3, 3));
        tiles.add(new Tile(60, 42, 3, 3, 4));
        tiles.add(new Tile(60, 8, 0, 2, 4));
        tiles.add(new Tile(60, 33, 1, 2, 4));
        tiles.add(new Tile(60, 4, 2, 2, 2));
        tiles.add(new Tile(60, 5, 3, 2, 1));
        tiles.add(new Tile(60, 35, 0, 1, 4));
        tiles.add(new Tile(60, 45, 1, 1, 4));
        tiles.add(new Tile(60, 2, 2, 1, 2));
        tiles.add(new Tile(60, 10, 3, 1, 4));
        tiles.add(new Tile(60, 44, 0, 0, 1));
        tiles.add(new Tile(60, 44, 1, 0, 3));
        tiles.add(new Tile(60, 1, 2, 0, 1));
        tiles.add(new Tile(60, 134, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_61_NAME", "Mountain Adventure"));
        puzzles.add(new Puzzle(61, 3, 15520L, 19, 0L, 0));
        tiles.add(new Tile(61, 36, 0, 4, 4));
        tiles.add(new Tile(61, 79, 1, 4, 4));
        tiles.add(new Tile(61, 2, 2, 4, 3));
        tiles.add(new Tile(61, 10, 3, 4, 4));
        tiles.add(new Tile(61, 1, 4, 4, 4));
        tiles.add(new Tile(61, 36, 0, 3, 1));
        tiles.add(new Tile(61, 12, 1, 3, 4));
        tiles.add(new Tile(61, 6, 2, 3, 3));
        tiles.add(new Tile(61, 43, 3, 3, 3));
        tiles.add(new Tile(61, 2, 4, 3, 2));
        tiles.add(new Tile(61, 11, 0, 2, 1));
        tiles.add(new Tile(61, 42, 1, 2, 1));
        tiles.add(new Tile(61, 11, 2, 2, 2));
        tiles.add(new Tile(61, 79, 3, 2, 1));
        tiles.add(new Tile(61, 1, 4, 2, 4));
        tiles.add(new Tile(61, 134, 0, 1, 2));
        tiles.add(new Tile(61, 5, 1, 1, 4));
        tiles.add(new Tile(61, 2, 2, 1, 2));
        tiles.add(new Tile(61, 2, 3, 1, 1));
        tiles.add(new Tile(61, 134, 4, 1, 1));
        tiles.add(new Tile(61, 43, 0, 0, 2));
        tiles.add(new Tile(61, 6, 1, 0, 4));
        tiles.add(new Tile(61, 35, 2, 0, 1));
        tiles.add(new Tile(61, 33, 3, 0, 3));
        tiles.add(new Tile(61, 42, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_62_NAME", "An Unexpected Junction"));
        puzzles.add(new Puzzle(62, 3, 10334L, 15, 0L, 0));
        tiles.add(new Tile(62, 1, 0, 2, 4));
        tiles.add(new Tile(62, 2, 1, 2, 4));
        tiles.add(new Tile(62, 10, 2, 2, 4));
        tiles.add(new Tile(62, 3, 3, 2, 4));
        tiles.add(new Tile(62, 3, 4, 2, 1));
        tiles.add(new Tile(62, 12, 5, 2, 1));
        tiles.add(new Tile(62, 10, 0, 1, 2));
        tiles.add(new Tile(62, 134, 1, 1, 2));
        tiles.add(new Tile(62, 10, 2, 1, 1));
        tiles.add(new Tile(62, 33, 3, 1, 4));
        tiles.add(new Tile(62, 7, 4, 1, 2));
        tiles.add(new Tile(62, 35, 5, 1, 2));
        tiles.add(new Tile(62, 42, 0, 0, 1));
        tiles.add(new Tile(62, 42, 1, 0, 4));
        tiles.add(new Tile(62, 44, 2, 0, 1));
        tiles.add(new Tile(62, 6, 3, 0, 4));
        tiles.add(new Tile(62, 1, 4, 0, 3));
        tiles.add(new Tile(62, 3, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_63_NAME", "An Alternate Route"));
        puzzles.add(new Puzzle(63, 3, 11846L, 25, 0L, 0));
        tiles.add(new Tile(63, 134, 0, 3, 3));
        tiles.add(new Tile(63, 2, 1, 3, 1));
        tiles.add(new Tile(63, 3, 2, 3, 3));
        tiles.add(new Tile(63, 3, 3, 3, 3));
        tiles.add(new Tile(63, 3, 4, 3, 2));
        tiles.add(new Tile(63, 10, 0, 2, 3));
        tiles.add(new Tile(63, 44, 1, 2, 1));
        tiles.add(new Tile(63, 44, 2, 2, 2));
        tiles.add(new Tile(63, 134, 3, 2, 2));
        tiles.add(new Tile(63, 1, 4, 2, 2));
        tiles.add(new Tile(63, 10, 0, 1, 2));
        tiles.add(new Tile(63, 1, 1, 1, 1));
        tiles.add(new Tile(63, 79, 2, 1, 2));
        tiles.add(new Tile(63, 79, 3, 1, 2));
        tiles.add(new Tile(63, 1, 4, 1, 2));
        tiles.add(new Tile(63, 1, 0, 0, 2));
        tiles.add(new Tile(63, 5, 1, 0, 2));
        tiles.add(new Tile(63, 33, 2, 0, 2));
        tiles.add(new Tile(63, 33, 3, 0, 1));
        tiles.add(new Tile(63, 1, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_64_NAME", "Two's Company"));
        puzzles.add(new Puzzle(64, 3, 6282L, 12, 0L, 0));
        tiles.add(new Tile(64, 34, 0, 1, 1));
        tiles.add(new Tile(64, 12, 1, 1, 4));
        tiles.add(new Tile(64, 3, 2, 1, 1));
        tiles.add(new Tile(64, 79, 3, 1, 3));
        tiles.add(new Tile(64, 79, 4, 1, 2));
        tiles.add(new Tile(64, 5, 5, 1, 1));
        tiles.add(new Tile(64, 10, 6, 1, 2));
        tiles.add(new Tile(64, 3, 7, 1, 2));
        tiles.add(new Tile(64, 34, 0, 0, 1));
        tiles.add(new Tile(64, 12, 1, 0, 4));
        tiles.add(new Tile(64, 3, 2, 0, 2));
        tiles.add(new Tile(64, 3, 3, 0, 3));
        tiles.add(new Tile(64, 45, 4, 0, 2));
        tiles.add(new Tile(64, 1, 5, 0, 4));
        tiles.add(new Tile(64, 3, 6, 0, 2));
        tiles.add(new Tile(64, 44, 7, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_65_NAME", "Oh, You!"));
        puzzles.add(new Puzzle(65, 3, 4064L, 7, 0L, 0));
        tiles.add(new Tile(65, 35, 0, 6, 2));
        tiles.add(new Tile(65, 35, 1, 6, 1));
        tiles.add(new Tile(65, 8, 0, 5, 1));
        tiles.add(new Tile(65, 8, 1, 5, 2));
        tiles.add(new Tile(65, 1, 0, 4, 1));
        tiles.add(new Tile(65, 134, 1, 4, 1));
        tiles.add(new Tile(65, 1, 0, 3, 4));
        tiles.add(new Tile(65, 134, 1, 3, 4));
        tiles.add(new Tile(65, 45, 0, 2, 3));
        tiles.add(new Tile(65, 6, 1, 2, 2));
        tiles.add(new Tile(65, 43, 0, 1, 3));
        tiles.add(new Tile(65, 6, 1, 1, 4));
        tiles.add(new Tile(65, 6, 0, 0, 2));
        tiles.add(new Tile(65, 43, 1, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_66_NAME", "Interchangeable"));
        puzzles.add(new Puzzle(66, 3, 6414L, 10, 0L, 0));
        tiles.add(new Tile(66, 3, 0, 2, 2));
        tiles.add(new Tile(66, 44, 1, 2, 2));
        tiles.add(new Tile(66, 3, 2, 2, 3));
        tiles.add(new Tile(66, 6, 3, 2, 3));
        tiles.add(new Tile(66, 45, 4, 2, 3));
        tiles.add(new Tile(66, 6, 5, 2, 1));
        tiles.add(new Tile(66, 45, 6, 2, 4));
        tiles.add(new Tile(66, 5, 0, 1, 3));
        tiles.add(new Tile(66, 2, 1, 1, 2));
        tiles.add(new Tile(66, 4, 2, 1, 1));
        tiles.add(new Tile(66, 3, 3, 1, 2));
        tiles.add(new Tile(66, 12, 4, 1, 3));
        tiles.add(new Tile(66, 12, 5, 1, 3));
        tiles.add(new Tile(66, 12, 6, 1, 3));
        tiles.add(new Tile(66, 134, 0, 0, 3));
        tiles.add(new Tile(66, 2, 1, 0, 1));
        tiles.add(new Tile(66, 5, 2, 0, 4));
        tiles.add(new Tile(66, 11, 3, 0, 2));
        tiles.add(new Tile(66, 36, 4, 0, 2));
        tiles.add(new Tile(66, 34, 5, 0, 2));
        tiles.add(new Tile(66, 34, 6, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_67_NAME", "Thought Fragments"));
        puzzles.add(new Puzzle(67, 3, 7326L, 15, 0L, 0));
        tiles.add(new Tile(67, 35, 0, 4, 2));
        tiles.add(new Tile(67, 6, 1, 4, 4));
        tiles.add(new Tile(67, 43, 2, 4, 4));
        tiles.add(new Tile(67, 6, 3, 4, 1));
        tiles.add(new Tile(67, 35, 4, 4, 2));
        tiles.add(new Tile(67, 8, 0, 3, 4));
        tiles.add(new Tile(67, 8, 1, 3, 2));
        tiles.add(new Tile(67, 3, 2, 3, 4));
        tiles.add(new Tile(67, 3, 3, 3, 4));
        tiles.add(new Tile(67, 33, 4, 3, 2));
        tiles.add(new Tile(67, 6, 0, 2, 4));
        tiles.add(new Tile(67, 8, 1, 2, 1));
        tiles.add(new Tile(67, 35, 2, 2, 4));
        tiles.add(new Tile(67, 43, 3, 2, 1));
        tiles.add(new Tile(67, 3, 4, 2, 4));
        tiles.add(new Tile(67, 12, 0, 1, 2));
        tiles.add(new Tile(67, 12, 1, 1, 4));
        tiles.add(new Tile(67, 1, 2, 1, 1));
        tiles.add(new Tile(67, 2, 3, 1, 2));
        tiles.add(new Tile(67, 1, 4, 1, 3));
        tiles.add(new Tile(67, 44, 0, 0, 3));
        tiles.add(new Tile(67, 43, 1, 0, 3));
        tiles.add(new Tile(67, 3, 2, 0, 3));
        tiles.add(new Tile(67, 6, 3, 0, 4));
        tiles.add(new Tile(67, 3, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_68_NAME", "Diving Board"));
        puzzles.add(new Puzzle(68, 3, 9809L, 18, 0L, 0));
        tiles.add(new Tile(68, 39, 0, 2, 4));
        tiles.add(new Tile(68, 79, 1, 2, 3));
        tiles.add(new Tile(68, 79, 2, 2, 3));
        tiles.add(new Tile(68, 36, 3, 2, 1));
        tiles.add(new Tile(68, 44, 4, 2, 3));
        tiles.add(new Tile(68, 6, 5, 2, 2));
        tiles.add(new Tile(68, 43, 6, 2, 2));
        tiles.add(new Tile(68, 43, 7, 2, 1));
        tiles.add(new Tile(68, 79, 0, 1, 1));
        tiles.add(new Tile(68, 44, 1, 1, 2));
        tiles.add(new Tile(68, 44, 2, 1, 1));
        tiles.add(new Tile(68, 35, 3, 1, 2));
        tiles.add(new Tile(68, 12, 4, 1, 3));
        tiles.add(new Tile(68, 134, 5, 1, 3));
        tiles.add(new Tile(68, 5, 6, 1, 2));
        tiles.add(new Tile(68, 3, 7, 1, 4));
        tiles.add(new Tile(68, 42, 0, 0, 1));
        tiles.add(new Tile(68, 3, 1, 0, 4));
        tiles.add(new Tile(68, 43, 2, 0, 3));
        tiles.add(new Tile(68, 35, 3, 0, 4));
        tiles.add(new Tile(68, 12, 4, 0, 1));
        tiles.add(new Tile(68, 42, 5, 0, 1));
        tiles.add(new Tile(68, 1, 6, 0, 3));
        tiles.add(new Tile(68, 45, 7, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_69_NAME", "That Isn't An 8"));
        puzzles.add(new Puzzle(69, 3, 10511L, 18, 0L, 0));
        tiles.add(new Tile(69, 3, 0, 4, 4));
        tiles.add(new Tile(69, 34, 1, 4, 2));
        tiles.add(new Tile(69, 45, 2, 4, 1));
        tiles.add(new Tile(69, 3, 3, 4, 2));
        tiles.add(new Tile(69, 44, 4, 4, 1));
        tiles.add(new Tile(69, 45, 5, 4, 2));
        tiles.add(new Tile(69, 2, 0, 3, 1));
        tiles.add(new Tile(69, 12, 1, 3, 1));
        tiles.add(new Tile(69, 42, 2, 3, 1));
        tiles.add(new Tile(69, 134, 3, 3, 4));
        tiles.add(new Tile(69, 6, 4, 3, 3));
        tiles.add(new Tile(69, 45, 5, 3, 3));
        tiles.add(new Tile(69, 5, 0, 2, 1));
        tiles.add(new Tile(69, 5, 1, 2, 1));
        tiles.add(new Tile(69, 5, 2, 2, 1));
        tiles.add(new Tile(69, 6, 3, 2, 3));
        tiles.add(new Tile(69, 43, 4, 2, 2));
        tiles.add(new Tile(69, 6, 5, 2, 4));
        tiles.add(new Tile(69, 134, 0, 1, 2));
        tiles.add(new Tile(69, 5, 1, 1, 2));
        tiles.add(new Tile(69, 134, 2, 1, 4));
        tiles.add(new Tile(69, 6, 3, 1, 4));
        tiles.add(new Tile(69, 12, 4, 1, 3));
        tiles.add(new Tile(69, 12, 5, 1, 3));
        tiles.add(new Tile(69, 44, 0, 0, 2));
        tiles.add(new Tile(69, 35, 1, 0, 2));
        tiles.add(new Tile(69, 33, 2, 0, 2));
        tiles.add(new Tile(69, 79, 3, 0, 2));
        tiles.add(new Tile(69, 37, 4, 0, 1));
        tiles.add(new Tile(69, 36, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_70_NAME", "Rol?"));
        puzzles.add(new Puzzle(70, 3, 16415L, 30, 0L, 0));
        tiles.add(new Tile(70, 45, 0, 4, 3));
        tiles.add(new Tile(70, 6, 1, 4, 2));
        tiles.add(new Tile(70, 12, 2, 4, 3));
        tiles.add(new Tile(70, 6, 3, 4, 4));
        tiles.add(new Tile(70, 8, 4, 4, 1));
        tiles.add(new Tile(70, 35, 5, 4, 3));
        tiles.add(new Tile(70, 3, 6, 4, 3));
        tiles.add(new Tile(70, 6, 0, 3, 2));
        tiles.add(new Tile(70, 45, 1, 3, 3));
        tiles.add(new Tile(70, 36, 2, 3, 4));
        tiles.add(new Tile(70, 45, 3, 3, 4));
        tiles.add(new Tile(70, 33, 4, 3, 2));
        tiles.add(new Tile(70, 3, 5, 3, 3));
        tiles.add(new Tile(70, 1, 6, 3, 3));
        tiles.add(new Tile(70, 12, 0, 2, 4));
        tiles.add(new Tile(70, 44, 1, 2, 4));
        tiles.add(new Tile(70, 11, 2, 2, 2));
        tiles.add(new Tile(70, 45, 3, 2, 1));
        tiles.add(new Tile(70, 11, 4, 2, 4));
        tiles.add(new Tile(70, 134, 5, 2, 3));
        tiles.add(new Tile(70, 1, 6, 2, 2));
        tiles.add(new Tile(70, 45, 0, 1, 3));
        tiles.add(new Tile(70, 6, 1, 1, 3));
        tiles.add(new Tile(70, 3, 2, 1, 2));
        tiles.add(new Tile(70, 44, 3, 1, 3));
        tiles.add(new Tile(70, 11, 4, 1, 3));
        tiles.add(new Tile(70, 1, 5, 1, 2));
        tiles.add(new Tile(70, 134, 6, 1, 4));
        tiles.add(new Tile(70, 43, 0, 0, 1));
        tiles.add(new Tile(70, 6, 1, 0, 2));
        tiles.add(new Tile(70, 6, 2, 0, 1));
        tiles.add(new Tile(70, 45, 3, 0, 3));
        tiles.add(new Tile(70, 42, 4, 0, 1));
        tiles.add(new Tile(70, 2, 5, 0, 4));
        tiles.add(new Tile(70, 3, 6, 0, 2));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack4() {
        // Forest Fun
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_71_NAME", "The High Road"));
        puzzles.add(new Puzzle(71, 4, 13612L, 17, 0L, 0));
        tiles.add(new Tile(71, 71, 0, 3, 4));
        tiles.add(new Tile(71, 62, 1, 3, 1));
        tiles.add(new Tile(71, 66, 2, 3, 3));
        tiles.add(new Tile(71, 70, 3, 3, 1));
        tiles.add(new Tile(71, 83, 4, 3, 2));
        tiles.add(new Tile(71, 71, 0, 2, 3));
        tiles.add(new Tile(71, 70, 1, 2, 1));
        tiles.add(new Tile(71, 70, 2, 2, 2));
        tiles.add(new Tile(71, 71, 3, 2, 3));
        tiles.add(new Tile(71, 71, 4, 2, 3));
        tiles.add(new Tile(71, 72, 0, 1, 3));
        tiles.add(new Tile(71, 83, 1, 1, 4));
        tiles.add(new Tile(71, 83, 2, 1, 4));
        tiles.add(new Tile(71, 83, 3, 1, 3));
        tiles.add(new Tile(71, 83, 4, 1, 4));
        tiles.add(new Tile(71, 72, 0, 0, 3));
        tiles.add(new Tile(71, 72, 1, 0, 1));
        tiles.add(new Tile(71, 72, 2, 0, 2));
        tiles.add(new Tile(71, 83, 3, 0, 1));
        tiles.add(new Tile(71, 83, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_72_NAME", "IV"));
        puzzles.add(new Puzzle(72, 4, 6340L, 15, 0L, 0));
        tiles.add(new Tile(72, 76, 0, 2, 3));
        tiles.add(new Tile(72, 83, 1, 2, 1));
        tiles.add(new Tile(72, 75, 2, 2, 3));
        tiles.add(new Tile(72, 61, 0, 1, 3));
        tiles.add(new Tile(72, 70, 1, 1, 2));
        tiles.add(new Tile(72, 64, 2, 1, 4));
        tiles.add(new Tile(72, 76, 0, 0, 3));
        tiles.add(new Tile(72, 67, 1, 0, 1));
        tiles.add(new Tile(72, 67, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_73_NAME", "The Double Bump"));
        puzzles.add(new Puzzle(73, 4, 7718L, 17, 0L, 0));
        tiles.add(new Tile(73, 73, 0, 2, 3));
        tiles.add(new Tile(73, 62, 1, 2, 1));
        tiles.add(new Tile(73, 65, 2, 2, 1));
        tiles.add(new Tile(73, 67, 3, 2, 4));
        tiles.add(new Tile(73, 75, 4, 2, 2));
        tiles.add(new Tile(73, 75, 5, 2, 4));
        tiles.add(new Tile(73, 74, 0, 1, 1));
        tiles.add(new Tile(73, 62, 1, 1, 4));
        tiles.add(new Tile(73, 65, 2, 1, 3));
        tiles.add(new Tile(73, 66, 3, 1, 4));
        tiles.add(new Tile(73, 68, 4, 1, 4));
        tiles.add(new Tile(73, 67, 5, 1, 1));
        tiles.add(new Tile(73, 69, 0, 0, 3));
        tiles.add(new Tile(73, 74, 1, 0, 3));
        tiles.add(new Tile(73, 71, 2, 0, 4));
        tiles.add(new Tile(73, 69, 3, 0, 1));
        tiles.add(new Tile(73, 62, 4, 0, 2));
        tiles.add(new Tile(73, 75, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_74_NAME", "The Ditch"));
        puzzles.add(new Puzzle(74, 4, 6740L, 13, 0L, 0));
        tiles.add(new Tile(74, 84, 0, 1, 4));
        tiles.add(new Tile(74, 70, 1, 1, 2));
        tiles.add(new Tile(74, 65, 2, 1, 3));
        tiles.add(new Tile(74, 75, 3, 1, 1));
        tiles.add(new Tile(74, 74, 4, 1, 4));
        tiles.add(new Tile(74, 74, 5, 1, 3));
        tiles.add(new Tile(74, 74, 6, 1, 1));
        tiles.add(new Tile(74, 84, 0, 0, 3));
        tiles.add(new Tile(74, 70, 1, 0, 4));
        tiles.add(new Tile(74, 75, 2, 0, 2));
        tiles.add(new Tile(74, 76, 3, 0, 4));
        tiles.add(new Tile(74, 61, 4, 0, 4));
        tiles.add(new Tile(74, 76, 5, 0, 1));
        tiles.add(new Tile(74, 71, 6, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_75_NAME", "What A Mess"));
        puzzles.add(new Puzzle(75, 4, 31886L, 47, 0L, 0));
        tiles.add(new Tile(75, 71, 0, 5, 2));
        tiles.add(new Tile(75, 83, 1, 5, 3));
        tiles.add(new Tile(75, 75, 2, 5, 3));
        tiles.add(new Tile(75, 75, 3, 5, 3));
        tiles.add(new Tile(75, 69, 4, 5, 1));
        tiles.add(new Tile(75, 74, 5, 5, 4));
        tiles.add(new Tile(75, 74, 0, 4, 1));
        tiles.add(new Tile(75, 70, 1, 4, 4));
        tiles.add(new Tile(75, 64, 2, 4, 2));
        tiles.add(new Tile(75, 65, 3, 4, 1));
        tiles.add(new Tile(75, 69, 4, 4, 1));
        tiles.add(new Tile(75, 75, 5, 4, 2));
        tiles.add(new Tile(75, 75, 0, 3, 3));
        tiles.add(new Tile(75, 64, 1, 3, 2));
        tiles.add(new Tile(75, 64, 2, 3, 4));
        tiles.add(new Tile(75, 62, 3, 3, 3));
        tiles.add(new Tile(75, 67, 4, 3, 4));
        tiles.add(new Tile(75, 65, 5, 3, 3));
        tiles.add(new Tile(75, 62, 0, 2, 4));
        tiles.add(new Tile(75, 66, 1, 2, 3));
        tiles.add(new Tile(75, 66, 2, 2, 3));
        tiles.add(new Tile(75, 75, 3, 2, 2));
        tiles.add(new Tile(75, 64, 4, 2, 4));
        tiles.add(new Tile(75, 65, 5, 2, 4));
        tiles.add(new Tile(75, 75, 0, 1, 1));
        tiles.add(new Tile(75, 75, 1, 1, 3));
        tiles.add(new Tile(75, 62, 2, 1, 3));
        tiles.add(new Tile(75, 62, 3, 1, 2));
        tiles.add(new Tile(75, 66, 4, 1, 4));
        tiles.add(new Tile(75, 66, 5, 1, 2));
        tiles.add(new Tile(75, 74, 0, 0, 3));
        tiles.add(new Tile(75, 69, 1, 0, 3));
        tiles.add(new Tile(75, 74, 2, 0, 4));
        tiles.add(new Tile(75, 74, 3, 0, 2));
        tiles.add(new Tile(75, 62, 4, 0, 1));
        tiles.add(new Tile(75, 67, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_76_NAME", "The Water Monster"));
        puzzles.add(new Puzzle(76, 4, 22610L, 29, 0L, 0));
        tiles.add(new Tile(76, 76, 0, 2, 1));
        tiles.add(new Tile(76, 60, 1, 2, 4));
        tiles.add(new Tile(76, 61, 2, 2, 1));
        tiles.add(new Tile(76, 76, 3, 2, 4));
        tiles.add(new Tile(76, 62, 4, 2, 1));
        tiles.add(new Tile(76, 62, 5, 2, 2));
        tiles.add(new Tile(76, 62, 6, 2, 1));
        tiles.add(new Tile(76, 64, 7, 2, 4));
        tiles.add(new Tile(76, 75, 8, 2, 1));
        tiles.add(new Tile(76, 60, 0, 1, 3));
        tiles.add(new Tile(76, 82, 1, 1, 3));
        tiles.add(new Tile(76, 81, 2, 1, 2));
        tiles.add(new Tile(76, 76, 3, 1, 2));
        tiles.add(new Tile(76, 64, 4, 1, 3));
        tiles.add(new Tile(76, 65, 5, 1, 4));
        tiles.add(new Tile(76, 65, 6, 1, 2));
        tiles.add(new Tile(76, 76, 7, 1, 4));
        tiles.add(new Tile(76, 76, 8, 1, 1));
        tiles.add(new Tile(76, 73, 0, 0, 3));
        tiles.add(new Tile(76, 76, 1, 0, 4));
        tiles.add(new Tile(76, 76, 2, 0, 4));
        tiles.add(new Tile(76, 73, 3, 0, 4));
        tiles.add(new Tile(76, 75, 4, 0, 2));
        tiles.add(new Tile(76, 67, 5, 0, 1));
        tiles.add(new Tile(76, 66, 6, 0, 4));
        tiles.add(new Tile(76, 64, 7, 0, 4));
        tiles.add(new Tile(76, 75, 8, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_77_NAME", "Spreading Damp"));
        puzzles.add(new Puzzle(77, 4, 14939L, 20, 0L, 0));
        tiles.add(new Tile(77, 67, 0, 3, 4));
        tiles.add(new Tile(77, 66, 1, 3, 4));
        tiles.add(new Tile(77, 75, 2, 3, 2));
        tiles.add(new Tile(77, 76, 3, 3, 2));
        tiles.add(new Tile(77, 75, 4, 3, 4));
        tiles.add(new Tile(77, 73, 5, 3, 2));
        tiles.add(new Tile(77, 73, 6, 3, 2));
        tiles.add(new Tile(77, 65, 0, 2, 1));
        tiles.add(new Tile(77, 65, 1, 2, 3));
        tiles.add(new Tile(77, 76, 2, 2, 2));
        tiles.add(new Tile(77, 61, 3, 2, 4));
        tiles.add(new Tile(77, 75, 4, 2, 4));
        tiles.add(new Tile(77, 74, 5, 2, 3));
        tiles.add(new Tile(77, 69, 6, 2, 3));
        tiles.add(new Tile(77, 75, 0, 1, 1));
        tiles.add(new Tile(77, 75, 1, 1, 3));
        tiles.add(new Tile(77, 81, 2, 1, 1));
        tiles.add(new Tile(77, 82, 3, 1, 3));
        tiles.add(new Tile(77, 61, 4, 1, 1));
        tiles.add(new Tile(77, 61, 5, 1, 2));
        tiles.add(new Tile(77, 76, 6, 1, 2));
        tiles.add(new Tile(77, 76, 0, 0, 1));
        tiles.add(new Tile(77, 61, 1, 0, 4));
        tiles.add(new Tile(77, 81, 2, 0, 1));
        tiles.add(new Tile(77, 81, 3, 0, 3));
        tiles.add(new Tile(77, 76, 4, 0, 1));
        tiles.add(new Tile(77, 74, 5, 0, 2));
        tiles.add(new Tile(77, 69, 6, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_78_NAME", "Mountain Expedition"));
        puzzles.add(new Puzzle(78, 4, 13127L, 16, 0L, 0));
        tiles.add(new Tile(78, 76, 0, 6, 4));
        tiles.add(new Tile(78, 60, 1, 6, 1));
        tiles.add(new Tile(78, 61, 2, 6, 4));
        tiles.add(new Tile(78, 76, 3, 6, 3));
        tiles.add(new Tile(78, 61, 0, 5, 4));
        tiles.add(new Tile(78, 61, 1, 5, 2));
        tiles.add(new Tile(78, 73, 2, 5, 3));
        tiles.add(new Tile(78, 75, 3, 5, 1));
        tiles.add(new Tile(78, 76, 0, 4, 2));
        tiles.add(new Tile(78, 61, 1, 4, 1));
        tiles.add(new Tile(78, 62, 2, 4, 2));
        tiles.add(new Tile(78, 66, 3, 4, 2));
        tiles.add(new Tile(78, 76, 0, 3, 1));
        tiles.add(new Tile(78, 60, 1, 3, 4));
        tiles.add(new Tile(78, 75, 2, 3, 3));
        tiles.add(new Tile(78, 65, 3, 3, 4));
        tiles.add(new Tile(78, 75, 0, 2, 2));
        tiles.add(new Tile(78, 69, 1, 2, 4));
        tiles.add(new Tile(78, 74, 2, 2, 1));
        tiles.add(new Tile(78, 65, 3, 2, 1));
        tiles.add(new Tile(78, 62, 0, 1, 4));
        tiles.add(new Tile(78, 62, 1, 1, 3));
        tiles.add(new Tile(78, 71, 2, 1, 3));
        tiles.add(new Tile(78, 70, 3, 1, 3));
        tiles.add(new Tile(78, 71, 0, 0, 2));
        tiles.add(new Tile(78, 75, 1, 0, 3));
        tiles.add(new Tile(78, 72, 2, 0, 3));
        tiles.add(new Tile(78, 83, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_79_NAME", "The Double Loop"));
        puzzles.add(new Puzzle(79, 4, 7894L, 15, 0L, 0));
        tiles.add(new Tile(79, 67, 0, 2, 4));
        tiles.add(new Tile(79, 64, 1, 2, 3));
        tiles.add(new Tile(79, 62, 2, 2, 2));
        tiles.add(new Tile(79, 67, 3, 2, 4));
        tiles.add(new Tile(79, 62, 4, 2, 1));
        tiles.add(new Tile(79, 65, 0, 1, 1));
        tiles.add(new Tile(79, 69, 1, 1, 1));
        tiles.add(new Tile(79, 65, 2, 1, 4));
        tiles.add(new Tile(79, 64, 3, 1, 2));
        tiles.add(new Tile(79, 64, 4, 1, 1));
        tiles.add(new Tile(79, 67, 0, 0, 3));
        tiles.add(new Tile(79, 64, 1, 0, 2));
        tiles.add(new Tile(79, 62, 2, 0, 4));
        tiles.add(new Tile(79, 62, 3, 0, 1));
        tiles.add(new Tile(79, 62, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_80_NAME", "8 + 8 ="));
        puzzles.add(new Puzzle(80, 4, 10287L, 18, 0L, 0));
        tiles.add(new Tile(80, 76, 0, 5, 2));
        tiles.add(new Tile(80, 73, 1, 5, 3));
        tiles.add(new Tile(80, 74, 2, 5, 1));
        tiles.add(new Tile(80, 71, 3, 5, 3));
        tiles.add(new Tile(80, 61, 0, 4, 4));
        tiles.add(new Tile(80, 73, 1, 4, 4));
        tiles.add(new Tile(80, 69, 2, 4, 3));
        tiles.add(new Tile(80, 71, 3, 4, 1));
        tiles.add(new Tile(80, 61, 0, 3, 1));
        tiles.add(new Tile(80, 69, 1, 3, 1));
        tiles.add(new Tile(80, 74, 2, 3, 4));
        tiles.add(new Tile(80, 76, 3, 3, 4));
        tiles.add(new Tile(80, 61, 0, 2, 4));
        tiles.add(new Tile(80, 76, 1, 2, 2));
        tiles.add(new Tile(80, 60, 2, 2, 1));
        tiles.add(new Tile(80, 81, 3, 2, 3));
        tiles.add(new Tile(80, 61, 0, 1, 2));
        tiles.add(new Tile(80, 60, 1, 1, 2));
        tiles.add(new Tile(80, 81, 2, 1, 3));
        tiles.add(new Tile(80, 60, 3, 1, 3));
        tiles.add(new Tile(80, 76, 0, 0, 2));
        tiles.add(new Tile(80, 76, 1, 0, 3));
        tiles.add(new Tile(80, 61, 2, 0, 3));
        tiles.add(new Tile(80, 76, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_81_NAME", "Facing Away"));
        puzzles.add(new Puzzle(81, 4, 7382L, 16, 0L, 0));
        tiles.add(new Tile(81, 76, 0, 4, 2));
        tiles.add(new Tile(81, 71, 1, 4, 1));
        tiles.add(new Tile(81, 73, 2, 4, 2));
        tiles.add(new Tile(81, 60, 0, 3, 4));
        tiles.add(new Tile(81, 61, 1, 3, 3));
        tiles.add(new Tile(81, 76, 2, 3, 1));
        tiles.add(new Tile(81, 71, 0, 2, 3));
        tiles.add(new Tile(81, 71, 1, 2, 3));
        tiles.add(new Tile(81, 71, 2, 2, 3));
        tiles.add(new Tile(81, 84, 0, 1, 4));
        tiles.add(new Tile(81, 63, 1, 1, 1));
        tiles.add(new Tile(81, 83, 2, 1, 4));
        tiles.add(new Tile(81, 83, 0, 0, 1));
        tiles.add(new Tile(81, 83, 1, 0, 3));
        tiles.add(new Tile(81, 83, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_82_NAME", "Remote Road"));
        puzzles.add(new Puzzle(82, 4, 6509L, 15, 0L, 0));
        tiles.add(new Tile(82, 69, 0, 6, 3));
        tiles.add(new Tile(82, 73, 1, 6, 3));
        tiles.add(new Tile(82, 69, 2, 6, 1));
        tiles.add(new Tile(82, 71, 0, 5, 4));
        tiles.add(new Tile(82, 69, 1, 5, 1));
        tiles.add(new Tile(82, 71, 2, 5, 3));
        tiles.add(new Tile(82, 71, 0, 4, 4));
        tiles.add(new Tile(82, 71, 1, 4, 2));
        tiles.add(new Tile(82, 83, 2, 4, 3));
        tiles.add(new Tile(82, 73, 0, 3, 3));
        tiles.add(new Tile(82, 73, 1, 3, 2));
        tiles.add(new Tile(82, 70, 2, 3, 2));
        tiles.add(new Tile(82, 67, 0, 2, 1));
        tiles.add(new Tile(82, 65, 1, 2, 3));
        tiles.add(new Tile(82, 67, 2, 2, 2));
        tiles.add(new Tile(82, 62, 0, 1, 3));
        tiles.add(new Tile(82, 65, 1, 1, 4));
        tiles.add(new Tile(82, 75, 2, 1, 4));
        tiles.add(new Tile(82, 73, 0, 0, 2));
        tiles.add(new Tile(82, 71, 1, 0, 3));
        tiles.add(new Tile(82, 69, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_83_NAME", "So Near, Yet So Far"));
        puzzles.add(new Puzzle(83, 4, 3583L, 9, 0L, 0));
        tiles.add(new Tile(83, 76, 0, 3, 3));
        tiles.add(new Tile(83, 71, 1, 3, 3));
        tiles.add(new Tile(83, 69, 2, 3, 2));
        tiles.add(new Tile(83, 75, 3, 3, 2));
        tiles.add(new Tile(83, 61, 0, 2, 3));
        tiles.add(new Tile(83, 71, 1, 2, 1));
        tiles.add(new Tile(83, 71, 2, 2, 3));
        tiles.add(new Tile(83, 65, 3, 2, 2));
        tiles.add(new Tile(83, 76, 0, 1, 2));
        tiles.add(new Tile(83, 74, 1, 1, 2));
        tiles.add(new Tile(83, 71, 2, 1, 1));
        tiles.add(new Tile(83, 64, 3, 1, 4));
        tiles.add(new Tile(83, 69, 0, 0, 3));
        tiles.add(new Tile(83, 73, 1, 0, 4));
        tiles.add(new Tile(83, 74, 2, 0, 4));
        tiles.add(new Tile(83, 75, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_84_NAME", "Doubling Back"));
        puzzles.add(new Puzzle(84, 4, 11840L, 21, 0L, 0));
        tiles.add(new Tile(84, 69, 0, 1, 3));
        tiles.add(new Tile(84, 69, 1, 1, 1));
        tiles.add(new Tile(84, 74, 2, 1, 2));
        tiles.add(new Tile(84, 75, 3, 1, 3));
        tiles.add(new Tile(84, 65, 4, 1, 2));
        tiles.add(new Tile(84, 70, 5, 1, 3));
        tiles.add(new Tile(84, 70, 6, 1, 3));
        tiles.add(new Tile(84, 64, 7, 1, 3));
        tiles.add(new Tile(84, 65, 8, 1, 1));
        tiles.add(new Tile(84, 62, 9, 1, 1));
        tiles.add(new Tile(84, 73, 0, 0, 3));
        tiles.add(new Tile(84, 75, 1, 0, 4));
        tiles.add(new Tile(84, 65, 2, 0, 3));
        tiles.add(new Tile(84, 65, 3, 0, 4));
        tiles.add(new Tile(84, 70, 4, 0, 1));
        tiles.add(new Tile(84, 70, 5, 0, 1));
        tiles.add(new Tile(84, 70, 6, 0, 1));
        tiles.add(new Tile(84, 70, 7, 0, 1));
        tiles.add(new Tile(84, 65, 8, 0, 4));
        tiles.add(new Tile(84, 62, 9, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_85_NAME", "The Expanse"));
        puzzles.add(new Puzzle(85, 4, 63597L, 69, 0L, 0));
        tiles.add(new Tile(85, 73, 0, 8, 3));
        tiles.add(new Tile(85, 74, 1, 8, 1));
        tiles.add(new Tile(85, 74, 2, 8, 4));
        tiles.add(new Tile(85, 73, 3, 8, 4));
        tiles.add(new Tile(85, 69, 4, 8, 1));
        tiles.add(new Tile(85, 75, 5, 8, 3));
        tiles.add(new Tile(85, 67, 6, 8, 3));
        tiles.add(new Tile(85, 65, 7, 8, 3));
        tiles.add(new Tile(85, 75, 8, 8, 3));
        tiles.add(new Tile(85, 73, 0, 7, 2));
        tiles.add(new Tile(85, 74, 1, 7, 4));
        tiles.add(new Tile(85, 67, 2, 7, 3));
        tiles.add(new Tile(85, 70, 3, 7, 3));
        tiles.add(new Tile(85, 70, 4, 7, 4));
        tiles.add(new Tile(85, 68, 5, 7, 3));
        tiles.add(new Tile(85, 66, 6, 7, 3));
        tiles.add(new Tile(85, 75, 7, 7, 1));
        tiles.add(new Tile(85, 74, 8, 7, 1));
        tiles.add(new Tile(85, 67, 0, 6, 1));
        tiles.add(new Tile(85, 64, 1, 6, 2));
        tiles.add(new Tile(85, 66, 2, 6, 2));
        tiles.add(new Tile(85, 65, 3, 6, 1));
        tiles.add(new Tile(85, 65, 4, 6, 3));
        tiles.add(new Tile(85, 67, 5, 6, 4));
        tiles.add(new Tile(85, 73, 6, 6, 4));
        tiles.add(new Tile(85, 69, 7, 6, 2));
        tiles.add(new Tile(85, 73, 8, 6, 1));
        tiles.add(new Tile(85, 75, 0, 5, 1));
        tiles.add(new Tile(85, 73, 1, 5, 1));
        tiles.add(new Tile(85, 73, 2, 5, 1));
        tiles.add(new Tile(85, 76, 3, 5, 2));
        tiles.add(new Tile(85, 61, 4, 5, 4));
        tiles.add(new Tile(85, 76, 5, 5, 2));
        tiles.add(new Tile(85, 75, 6, 5, 1));
        tiles.add(new Tile(85, 74, 7, 5, 3));
        tiles.add(new Tile(85, 69, 8, 5, 3));
        tiles.add(new Tile(85, 69, 0, 4, 1));
        tiles.add(new Tile(85, 62, 1, 4, 2));
        tiles.add(new Tile(85, 65, 2, 4, 1));
        tiles.add(new Tile(85, 65, 3, 4, 4));
        tiles.add(new Tile(85, 64, 4, 4, 1));
        tiles.add(new Tile(85, 64, 5, 4, 4));
        tiles.add(new Tile(85, 66, 6, 4, 2));
        tiles.add(new Tile(85, 65, 7, 4, 2));
        tiles.add(new Tile(85, 75, 8, 4, 3));
        tiles.add(new Tile(85, 75, 0, 3, 3));
        tiles.add(new Tile(85, 75, 1, 3, 2));
        tiles.add(new Tile(85, 69, 2, 3, 2));
        tiles.add(new Tile(85, 76, 3, 3, 1));
        tiles.add(new Tile(85, 81, 4, 3, 3));
        tiles.add(new Tile(85, 76, 5, 3, 3));
        tiles.add(new Tile(85, 74, 6, 3, 2));
        tiles.add(new Tile(85, 76, 7, 3, 4));
        tiles.add(new Tile(85, 74, 8, 3, 3));
        tiles.add(new Tile(85, 67, 0, 2, 3));
        tiles.add(new Tile(85, 65, 1, 2, 1));
        tiles.add(new Tile(85, 64, 2, 2, 3));
        tiles.add(new Tile(85, 75, 3, 2, 3));
        tiles.add(new Tile(85, 81, 4, 2, 1));
        tiles.add(new Tile(85, 76, 5, 2, 4));
        tiles.add(new Tile(85, 60, 6, 2, 2));
        tiles.add(new Tile(85, 82, 7, 2, 3));
        tiles.add(new Tile(85, 76, 8, 2, 4));
        tiles.add(new Tile(85, 69, 0, 1, 4));
        tiles.add(new Tile(85, 76, 1, 1, 2));
        tiles.add(new Tile(85, 61, 2, 1, 3));
        tiles.add(new Tile(85, 81, 3, 1, 1));
        tiles.add(new Tile(85, 82, 4, 1, 2));
        tiles.add(new Tile(85, 61, 5, 1, 3));
        tiles.add(new Tile(85, 82, 6, 1, 1));
        tiles.add(new Tile(85, 60, 7, 1, 4));
        tiles.add(new Tile(85, 69, 8, 1, 2));
        tiles.add(new Tile(85, 73, 0, 0, 4));
        tiles.add(new Tile(85, 73, 1, 0, 4));
        tiles.add(new Tile(85, 69, 2, 0, 1));
        tiles.add(new Tile(85, 60, 3, 0, 4));
        tiles.add(new Tile(85, 81, 4, 0, 2));
        tiles.add(new Tile(85, 61, 5, 0, 4));
        tiles.add(new Tile(85, 60, 6, 0, 1));
        tiles.add(new Tile(85, 73, 7, 0, 1));
        tiles.add(new Tile(85, 74, 8, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_86_NAME", "Split Layers"));
        puzzles.add(new Puzzle(86, 4, 8223L, 17, 0L, 0));
        tiles.add(new Tile(86, 71, 0, 3, 2));
        tiles.add(new Tile(86, 72, 1, 3, 2));
        tiles.add(new Tile(86, 76, 2, 3, 4));
        tiles.add(new Tile(86, 61, 3, 3, 4));
        tiles.add(new Tile(86, 76, 4, 3, 1));
        tiles.add(new Tile(86, 69, 0, 2, 2));
        tiles.add(new Tile(86, 74, 1, 2, 3));
        tiles.add(new Tile(86, 83, 2, 2, 3));
        tiles.add(new Tile(86, 75, 3, 2, 1));
        tiles.add(new Tile(86, 62, 4, 2, 4));
        tiles.add(new Tile(86, 69, 0, 1, 4));
        tiles.add(new Tile(86, 72, 1, 1, 4));
        tiles.add(new Tile(86, 84, 2, 1, 4));
        tiles.add(new Tile(86, 84, 3, 1, 2));
        tiles.add(new Tile(86, 75, 4, 1, 1));
        tiles.add(new Tile(86, 74, 0, 0, 1));
        tiles.add(new Tile(86, 73, 1, 0, 4));
        tiles.add(new Tile(86, 73, 2, 0, 1));
        tiles.add(new Tile(86, 84, 3, 0, 3));
        tiles.add(new Tile(86, 83, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_87_NAME", "Pathside River"));
        puzzles.add(new Puzzle(87, 4, 20074L, 25, 0L, 0));
        tiles.add(new Tile(87, 73, 0, 4, 3));
        tiles.add(new Tile(87, 75, 1, 4, 2));
        tiles.add(new Tile(87, 83, 2, 4, 1));
        tiles.add(new Tile(87, 73, 3, 4, 2));
        tiles.add(new Tile(87, 71, 4, 4, 3));
        tiles.add(new Tile(87, 75, 5, 4, 1));
        tiles.add(new Tile(87, 69, 0, 3, 1));
        tiles.add(new Tile(87, 70, 1, 3, 4));
        tiles.add(new Tile(87, 63, 2, 3, 4));
        tiles.add(new Tile(87, 69, 3, 3, 4));
        tiles.add(new Tile(87, 71, 4, 3, 1));
        tiles.add(new Tile(87, 65, 5, 3, 4));
        tiles.add(new Tile(87, 73, 0, 2, 3));
        tiles.add(new Tile(87, 83, 1, 2, 1));
        tiles.add(new Tile(87, 84, 2, 2, 3));
        tiles.add(new Tile(87, 63, 3, 2, 1));
        tiles.add(new Tile(87, 70, 4, 2, 2));
        tiles.add(new Tile(87, 66, 5, 2, 4));
        tiles.add(new Tile(87, 72, 0, 1, 2));
        tiles.add(new Tile(87, 62, 1, 1, 3));
        tiles.add(new Tile(87, 65, 2, 1, 4));
        tiles.add(new Tile(87, 64, 3, 1, 4));
        tiles.add(new Tile(87, 65, 4, 1, 4));
        tiles.add(new Tile(87, 67, 5, 1, 4));
        tiles.add(new Tile(87, 69, 0, 0, 1));
        tiles.add(new Tile(87, 75, 1, 0, 4));
        tiles.add(new Tile(87, 76, 2, 0, 4));
        tiles.add(new Tile(87, 61, 3, 0, 1));
        tiles.add(new Tile(87, 61, 4, 0, 3));
        tiles.add(new Tile(87, 76, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_88_NAME", "Underlined T"));
        puzzles.add(new Puzzle(88, 4, 12782L, 18, 0L, 0));
        tiles.add(new Tile(88, 76, 0, 4, 4));
        tiles.add(new Tile(88, 71, 1, 4, 3));
        tiles.add(new Tile(88, 73, 2, 4, 4));
        tiles.add(new Tile(88, 83, 3, 4, 1));
        tiles.add(new Tile(88, 72, 4, 4, 3));
        tiles.add(new Tile(88, 81, 0, 3, 3));
        tiles.add(new Tile(88, 61, 1, 3, 2));
        tiles.add(new Tile(88, 76, 2, 3, 4));
        tiles.add(new Tile(88, 63, 3, 3, 4));
        tiles.add(new Tile(88, 74, 4, 3, 3));
        tiles.add(new Tile(88, 76, 0, 2, 3));
        tiles.add(new Tile(88, 71, 1, 2, 1));
        tiles.add(new Tile(88, 69, 2, 2, 3));
        tiles.add(new Tile(88, 63, 3, 2, 1));
        tiles.add(new Tile(88, 69, 4, 2, 3));
        tiles.add(new Tile(88, 73, 0, 1, 2));
        tiles.add(new Tile(88, 84, 1, 1, 4));
        tiles.add(new Tile(88, 84, 2, 1, 2));
        tiles.add(new Tile(88, 63, 3, 1, 4));
        tiles.add(new Tile(88, 73, 4, 1, 4));
        tiles.add(new Tile(88, 69, 0, 0, 2));
        tiles.add(new Tile(88, 83, 1, 0, 2));
        tiles.add(new Tile(88, 84, 2, 0, 1));
        tiles.add(new Tile(88, 84, 3, 0, 2));
        tiles.add(new Tile(88, 72, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_89_NAME", "Mountain Range"));
        puzzles.add(new Puzzle(89, 4, 20413L, 30, 0L, 0));
        tiles.add(new Tile(89, 76, 0, 3, 2));
        tiles.add(new Tile(89, 76, 1, 3, 2));
        tiles.add(new Tile(89, 83, 2, 3, 2));
        tiles.add(new Tile(89, 83, 3, 3, 1));
        tiles.add(new Tile(89, 84, 4, 3, 1));
        tiles.add(new Tile(89, 70, 5, 3, 4));
        tiles.add(new Tile(89, 67, 6, 3, 3));
        tiles.add(new Tile(89, 62, 0, 2, 3));
        tiles.add(new Tile(89, 65, 1, 2, 2));
        tiles.add(new Tile(89, 75, 2, 2, 4));
        tiles.add(new Tile(89, 72, 3, 2, 2));
        tiles.add(new Tile(89, 63, 4, 2, 3));
        tiles.add(new Tile(89, 67, 5, 2, 3));
        tiles.add(new Tile(89, 66, 6, 2, 3));
        tiles.add(new Tile(89, 62, 0, 1, 3));
        tiles.add(new Tile(89, 64, 1, 1, 3));
        tiles.add(new Tile(89, 65, 2, 1, 1));
        tiles.add(new Tile(89, 70, 3, 1, 2));
        tiles.add(new Tile(89, 84, 4, 1, 4));
        tiles.add(new Tile(89, 66, 5, 1, 4));
        tiles.add(new Tile(89, 67, 6, 1, 3));
        tiles.add(new Tile(89, 74, 0, 0, 1));
        tiles.add(new Tile(89, 71, 1, 0, 3));
        tiles.add(new Tile(89, 71, 2, 0, 2));
        tiles.add(new Tile(89, 72, 3, 0, 2));
        tiles.add(new Tile(89, 72, 4, 0, 1));
        tiles.add(new Tile(89, 62, 5, 0, 3));
        tiles.add(new Tile(89, 75, 6, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_90_NAME", "No"));
        puzzles.add(new Puzzle(90, 4, 20044L, 27, 0L, 0));
        tiles.add(new Tile(90, 62, 0, 4, 4));
        tiles.add(new Tile(90, 62, 1, 4, 2));
        tiles.add(new Tile(90, 67, 2, 4, 3));
        tiles.add(new Tile(90, 64, 3, 4, 4));
        tiles.add(new Tile(90, 67, 4, 4, 1));
        tiles.add(new Tile(90, 75, 0, 3, 2));
        tiles.add(new Tile(90, 75, 1, 3, 1));
        tiles.add(new Tile(90, 65, 2, 3, 1));
        tiles.add(new Tile(90, 69, 3, 3, 2));
        tiles.add(new Tile(90, 65, 4, 3, 2));
        tiles.add(new Tile(90, 74, 0, 2, 3));
        tiles.add(new Tile(90, 73, 1, 2, 2));
        tiles.add(new Tile(90, 67, 2, 2, 2));
        tiles.add(new Tile(90, 64, 3, 2, 4));
        tiles.add(new Tile(90, 67, 4, 2, 2));
        tiles.add(new Tile(90, 84, 0, 1, 1));
        tiles.add(new Tile(90, 63, 1, 1, 4));
        tiles.add(new Tile(90, 83, 2, 1, 2));
        tiles.add(new Tile(90, 71, 3, 1, 3));
        tiles.add(new Tile(90, 73, 4, 1, 1));
        tiles.add(new Tile(90, 84, 0, 0, 1));
        tiles.add(new Tile(90, 70, 1, 0, 1));
        tiles.add(new Tile(90, 70, 2, 0, 1));
        tiles.add(new Tile(90, 63, 3, 0, 2));
        tiles.add(new Tile(90, 83, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_91_NAME", "River Forest"));
        puzzles.add(new Puzzle(91, 4, 11771L, 16, 0L, 0));
        tiles.add(new Tile(91, 72, 0, 5, 4));
        tiles.add(new Tile(91, 74, 1, 5, 3));
        tiles.add(new Tile(91, 76, 2, 5, 1));
        tiles.add(new Tile(91, 71, 3, 5, 4));
        tiles.add(new Tile(91, 76, 4, 5, 3));
        tiles.add(new Tile(91, 76, 5, 5, 3));
        tiles.add(new Tile(91, 74, 0, 4, 4));
        tiles.add(new Tile(91, 69, 1, 4, 3));
        tiles.add(new Tile(91, 61, 2, 4, 1));
        tiles.add(new Tile(91, 76, 3, 4, 1));
        tiles.add(new Tile(91, 71, 4, 4, 4));
        tiles.add(new Tile(91, 74, 5, 4, 1));
        tiles.add(new Tile(91, 69, 0, 3, 2));
        tiles.add(new Tile(91, 74, 1, 3, 4));
        tiles.add(new Tile(91, 61, 2, 3, 3));
        tiles.add(new Tile(91, 61, 3, 3, 2));
        tiles.add(new Tile(91, 69, 4, 3, 4));
        tiles.add(new Tile(91, 73, 5, 3, 4));
        tiles.add(new Tile(91, 74, 0, 2, 2));
        tiles.add(new Tile(91, 72, 1, 2, 1));
        tiles.add(new Tile(91, 81, 2, 2, 3));
        tiles.add(new Tile(91, 82, 3, 2, 3));
        tiles.add(new Tile(91, 76, 4, 2, 3));
        tiles.add(new Tile(91, 74, 5, 2, 4));
        tiles.add(new Tile(91, 73, 0, 1, 1));
        tiles.add(new Tile(91, 60, 1, 1, 4));
        tiles.add(new Tile(91, 81, 2, 1, 2));
        tiles.add(new Tile(91, 60, 3, 1, 1));
        tiles.add(new Tile(91, 72, 4, 1, 4));
        tiles.add(new Tile(91, 74, 5, 1, 3));
        tiles.add(new Tile(91, 72, 0, 0, 1));
        tiles.add(new Tile(91, 76, 1, 0, 2));
        tiles.add(new Tile(91, 73, 2, 0, 4));
        tiles.add(new Tile(91, 74, 3, 0, 2));
        tiles.add(new Tile(91, 74, 4, 0, 3));
        tiles.add(new Tile(91, 74, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_92_NAME", "Stripes"));
        puzzles.add(new Puzzle(92, 4, 17723L, 26, 0L, 0));
        tiles.add(new Tile(92, 84, 0, 2, 3));
        tiles.add(new Tile(92, 63, 1, 2, 2));
        tiles.add(new Tile(92, 70, 2, 2, 4));
        tiles.add(new Tile(92, 70, 3, 2, 3));
        tiles.add(new Tile(92, 83, 4, 2, 3));
        tiles.add(new Tile(92, 71, 5, 2, 2));
        tiles.add(new Tile(92, 83, 6, 2, 3));
        tiles.add(new Tile(92, 63, 7, 2, 4));
        tiles.add(new Tile(92, 83, 8, 2, 4));
        tiles.add(new Tile(92, 84, 0, 1, 1));
        tiles.add(new Tile(92, 70, 1, 1, 1));
        tiles.add(new Tile(92, 65, 2, 1, 2));
        tiles.add(new Tile(92, 64, 3, 1, 1));
        tiles.add(new Tile(92, 65, 4, 1, 4));
        tiles.add(new Tile(92, 70, 5, 1, 2));
        tiles.add(new Tile(92, 70, 6, 1, 2));
        tiles.add(new Tile(92, 65, 7, 1, 2));
        tiles.add(new Tile(92, 75, 8, 1, 1));
        tiles.add(new Tile(92, 74, 0, 0, 1));
        tiles.add(new Tile(92, 75, 1, 0, 2));
        tiles.add(new Tile(92, 65, 2, 0, 3));
        tiles.add(new Tile(92, 64, 3, 0, 2));
        tiles.add(new Tile(92, 64, 4, 0, 2));
        tiles.add(new Tile(92, 64, 5, 0, 1));
        tiles.add(new Tile(92, 70, 6, 0, 4));
        tiles.add(new Tile(92, 83, 7, 0, 3));
        tiles.add(new Tile(92, 72, 8, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_93_NAME", "Waterworks"));
        puzzles.add(new Puzzle(93, 4, 12625L, 25, 0L, 0));
        tiles.add(new Tile(93, 69, 0, 5, 1));
        tiles.add(new Tile(93, 60, 1, 5, 1));
        tiles.add(new Tile(93, 81, 2, 5, 1));
        tiles.add(new Tile(93, 60, 3, 5, 1));
        tiles.add(new Tile(93, 71, 0, 4, 1));
        tiles.add(new Tile(93, 81, 1, 4, 1));
        tiles.add(new Tile(93, 60, 2, 4, 1));
        tiles.add(new Tile(93, 61, 3, 4, 2));
        tiles.add(new Tile(93, 60, 0, 3, 4));
        tiles.add(new Tile(93, 81, 1, 3, 4));
        tiles.add(new Tile(93, 81, 2, 3, 2));
        tiles.add(new Tile(93, 60, 3, 3, 2));
        tiles.add(new Tile(93, 81, 0, 2, 3));
        tiles.add(new Tile(93, 61, 1, 2, 2));
        tiles.add(new Tile(93, 82, 2, 2, 3));
        tiles.add(new Tile(93, 76, 3, 2, 1));
        tiles.add(new Tile(93, 61, 0, 1, 3));
        tiles.add(new Tile(93, 60, 1, 1, 4));
        tiles.add(new Tile(93, 82, 2, 1, 2));
        tiles.add(new Tile(93, 76, 3, 1, 2));
        tiles.add(new Tile(93, 60, 0, 0, 3));
        tiles.add(new Tile(93, 81, 1, 0, 4));
        tiles.add(new Tile(93, 81, 2, 0, 1));
        tiles.add(new Tile(93, 76, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_94_NAME", "Hidden Swamp"));
        puzzles.add(new Puzzle(94, 4, 9546L, 20, 0L, 0));
        tiles.add(new Tile(94, 60, 0, 4, 3));
        tiles.add(new Tile(94, 61, 1, 4, 1));
        tiles.add(new Tile(94, 76, 2, 4, 1));
        tiles.add(new Tile(94, 73, 3, 4, 1));
        tiles.add(new Tile(94, 81, 0, 3, 2));
        tiles.add(new Tile(94, 76, 1, 3, 4));
        tiles.add(new Tile(94, 76, 2, 3, 4));
        tiles.add(new Tile(94, 73, 3, 3, 3));
        tiles.add(new Tile(94, 61, 0, 2, 2));
        tiles.add(new Tile(94, 74, 1, 2, 3));
        tiles.add(new Tile(94, 60, 2, 2, 4));
        tiles.add(new Tile(94, 76, 3, 2, 1));
        tiles.add(new Tile(94, 60, 0, 1, 4));
        tiles.add(new Tile(94, 76, 1, 1, 2));
        tiles.add(new Tile(94, 74, 2, 1, 4));
        tiles.add(new Tile(94, 72, 3, 1, 4));
        tiles.add(new Tile(94, 72, 0, 0, 3));
        tiles.add(new Tile(94, 73, 1, 0, 2));
        tiles.add(new Tile(94, 72, 2, 0, 3));
        tiles.add(new Tile(94, 74, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_95_NAME", "Path To H"));
        puzzles.add(new Puzzle(95, 4, 11947L, 18, 0L, 0));
        tiles.add(new Tile(95, 69, 0, 7, 4));
        tiles.add(new Tile(95, 60, 1, 7, 3));
        tiles.add(new Tile(95, 76, 2, 7, 4));
        tiles.add(new Tile(95, 76, 0, 6, 4));
        tiles.add(new Tile(95, 81, 1, 6, 3));
        tiles.add(new Tile(95, 76, 2, 6, 2));
        tiles.add(new Tile(95, 69, 0, 5, 1));
        tiles.add(new Tile(95, 72, 1, 5, 1));
        tiles.add(new Tile(95, 69, 2, 5, 2));
        tiles.add(new Tile(95, 69, 0, 4, 2));
        tiles.add(new Tile(95, 75, 1, 4, 3));
        tiles.add(new Tile(95, 73, 2, 4, 1));
        tiles.add(new Tile(95, 71, 0, 3, 3));
        tiles.add(new Tile(95, 65, 1, 3, 3));
        tiles.add(new Tile(95, 69, 2, 3, 4));
        tiles.add(new Tile(95, 73, 0, 2, 2));
        tiles.add(new Tile(95, 64, 1, 2, 3));
        tiles.add(new Tile(95, 72, 2, 2, 3));
        tiles.add(new Tile(95, 71, 0, 1, 4));
        tiles.add(new Tile(95, 64, 1, 1, 1));
        tiles.add(new Tile(95, 74, 2, 1, 2));
        tiles.add(new Tile(95, 72, 0, 0, 2));
        tiles.add(new Tile(95, 67, 1, 0, 2));
        tiles.add(new Tile(95, 75, 2, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_96_NAME", "Side By Side"));
        puzzles.add(new Puzzle(96, 4, 12686L, 22, 0L, 0));
        tiles.add(new Tile(96, 71, 0, 4, 2));
        tiles.add(new Tile(96, 72, 1, 4, 1));
        tiles.add(new Tile(96, 75, 2, 4, 3));
        tiles.add(new Tile(96, 71, 3, 4, 3));
        tiles.add(new Tile(96, 83, 4, 4, 2));
        tiles.add(new Tile(96, 75, 0, 3, 4));
        tiles.add(new Tile(96, 65, 1, 3, 3));
        tiles.add(new Tile(96, 62, 2, 3, 3));
        tiles.add(new Tile(96, 72, 3, 3, 2));
        tiles.add(new Tile(96, 63, 4, 3, 4));
        tiles.add(new Tile(96, 69, 0, 2, 3));
        tiles.add(new Tile(96, 69, 1, 2, 2));
        tiles.add(new Tile(96, 83, 2, 2, 2));
        tiles.add(new Tile(96, 63, 3, 2, 3));
        tiles.add(new Tile(96, 84, 4, 2, 1));
        tiles.add(new Tile(96, 76, 0, 1, 2));
        tiles.add(new Tile(96, 76, 1, 1, 4));
        tiles.add(new Tile(96, 69, 2, 1, 2));
        tiles.add(new Tile(96, 73, 3, 1, 1));
        tiles.add(new Tile(96, 73, 4, 1, 2));
        tiles.add(new Tile(96, 74, 0, 0, 1));
        tiles.add(new Tile(96, 76, 1, 0, 3));
        tiles.add(new Tile(96, 76, 2, 0, 3));
        tiles.add(new Tile(96, 74, 3, 0, 4));
        tiles.add(new Tile(96, 71, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_97_NAME", "Rocky Outcrop"));
        puzzles.add(new Puzzle(97, 4, 10160L, 17, 0L, 0));
        tiles.add(new Tile(97, 74, 0, 6, 2));
        tiles.add(new Tile(97, 71, 1, 6, 2));
        tiles.add(new Tile(97, 83, 2, 6, 3));
        tiles.add(new Tile(97, 69, 0, 5, 1));
        tiles.add(new Tile(97, 69, 1, 5, 3));
        tiles.add(new Tile(97, 83, 2, 5, 3));
        tiles.add(new Tile(97, 73, 0, 4, 2));
        tiles.add(new Tile(97, 84, 1, 4, 1));
        tiles.add(new Tile(97, 83, 2, 4, 2));
        tiles.add(new Tile(97, 84, 0, 3, 3));
        tiles.add(new Tile(97, 84, 1, 3, 1));
        tiles.add(new Tile(97, 75, 2, 3, 2));
        tiles.add(new Tile(97, 83, 0, 2, 3));
        tiles.add(new Tile(97, 73, 1, 2, 4));
        tiles.add(new Tile(97, 65, 2, 2, 1));
        tiles.add(new Tile(97, 83, 0, 1, 4));
        tiles.add(new Tile(97, 83, 1, 1, 3));
        tiles.add(new Tile(97, 75, 2, 1, 1));
        tiles.add(new Tile(97, 73, 0, 0, 4));
        tiles.add(new Tile(97, 73, 1, 0, 3));
        tiles.add(new Tile(97, 73, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_98_NAME", "River System"));
        puzzles.add(new Puzzle(98, 4, 19239L, 30, 0L, 0));
        tiles.add(new Tile(98, 60, 0, 5, 1));
        tiles.add(new Tile(98, 61, 1, 5, 1));
        tiles.add(new Tile(98, 61, 2, 5, 3));
        tiles.add(new Tile(98, 60, 3, 5, 2));
        tiles.add(new Tile(98, 75, 4, 5, 3));
        tiles.add(new Tile(98, 61, 0, 4, 3));
        tiles.add(new Tile(98, 72, 1, 4, 2));
        tiles.add(new Tile(98, 72, 2, 4, 4));
        tiles.add(new Tile(98, 76, 3, 4, 1));
        tiles.add(new Tile(98, 75, 4, 4, 3));
        tiles.add(new Tile(98, 61, 0, 3, 1));
        tiles.add(new Tile(98, 71, 1, 3, 1));
        tiles.add(new Tile(98, 74, 2, 3, 2));
        tiles.add(new Tile(98, 74, 3, 3, 1));
        tiles.add(new Tile(98, 76, 4, 3, 2));
        tiles.add(new Tile(98, 81, 0, 2, 3));
        tiles.add(new Tile(98, 76, 1, 2, 1));
        tiles.add(new Tile(98, 74, 2, 2, 1));
        tiles.add(new Tile(98, 76, 3, 2, 4));
        tiles.add(new Tile(98, 61, 4, 2, 2));
        tiles.add(new Tile(98, 60, 0, 1, 4));
        tiles.add(new Tile(98, 76, 1, 1, 2));
        tiles.add(new Tile(98, 60, 2, 1, 4));
        tiles.add(new Tile(98, 81, 3, 1, 3));
        tiles.add(new Tile(98, 60, 4, 1, 2));
        tiles.add(new Tile(98, 72, 0, 0, 1));
        tiles.add(new Tile(98, 74, 1, 0, 4));
        tiles.add(new Tile(98, 76, 2, 0, 3));
        tiles.add(new Tile(98, 73, 3, 0, 3));
        tiles.add(new Tile(98, 71, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_99_NAME", "Coming Together"));
        puzzles.add(new Puzzle(99, 4, 10368L, 19, 0L, 0));
        tiles.add(new Tile(99, 73, 0, 4, 4));
        tiles.add(new Tile(99, 69, 1, 4, 2));
        tiles.add(new Tile(99, 83, 2, 4, 1));
        tiles.add(new Tile(99, 74, 3, 4, 3));
        tiles.add(new Tile(99, 73, 0, 3, 1));
        tiles.add(new Tile(99, 83, 1, 3, 1));
        tiles.add(new Tile(99, 63, 2, 3, 4));
        tiles.add(new Tile(99, 76, 3, 3, 3));
        tiles.add(new Tile(99, 71, 0, 2, 3));
        tiles.add(new Tile(99, 63, 1, 2, 1));
        tiles.add(new Tile(99, 83, 2, 2, 1));
        tiles.add(new Tile(99, 76, 3, 2, 1));
        tiles.add(new Tile(99, 84, 0, 1, 1));
        tiles.add(new Tile(99, 84, 1, 1, 2));
        tiles.add(new Tile(99, 75, 2, 1, 2));
        tiles.add(new Tile(99, 71, 3, 1, 4));
        tiles.add(new Tile(99, 83, 0, 0, 1));
        tiles.add(new Tile(99, 73, 1, 0, 4));
        tiles.add(new Tile(99, 62, 2, 0, 1));
        tiles.add(new Tile(99, 75, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_100_NAME", "Wisping Away"));
        puzzles.add(new Puzzle(100, 4, 9704L, 22, 0L, 0));
        tiles.add(new Tile(100, 72, 0, 3, 1));
        tiles.add(new Tile(100, 83, 1, 3, 3));
        tiles.add(new Tile(100, 83, 2, 3, 4));
        tiles.add(new Tile(100, 72, 3, 3, 2));
        tiles.add(new Tile(100, 69, 4, 3, 3));
        tiles.add(new Tile(100, 76, 5, 3, 3));
        tiles.add(new Tile(100, 71, 0, 2, 1));
        tiles.add(new Tile(100, 71, 1, 2, 1));
        tiles.add(new Tile(100, 76, 2, 2, 2));
        tiles.add(new Tile(100, 74, 3, 2, 3));
        tiles.add(new Tile(100, 76, 4, 2, 3));
        tiles.add(new Tile(100, 61, 5, 2, 2));
        tiles.add(new Tile(100, 72, 0, 1, 1));
        tiles.add(new Tile(100, 60, 1, 1, 3));
        tiles.add(new Tile(100, 81, 2, 1, 3));
        tiles.add(new Tile(100, 60, 3, 1, 1));
        tiles.add(new Tile(100, 81, 4, 1, 3));
        tiles.add(new Tile(100, 60, 5, 1, 4));
        tiles.add(new Tile(100, 74, 0, 0, 3));
        tiles.add(new Tile(100, 60, 1, 0, 1));
        tiles.add(new Tile(100, 60, 2, 0, 2));
        tiles.add(new Tile(100, 76, 3, 0, 1));
        tiles.add(new Tile(100, 69, 4, 0, 3));
        tiles.add(new Tile(100, 73, 5, 0, 2));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack5() {
        //Mountain Climbing
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_101_NAME", "Forgotten Swamp"));
        puzzles.add(new Puzzle(101, 5, 16918L, 24, 0L, 0));
        tiles.add(new Tile(101, 89, 0, 4, 4));
        tiles.add(new Tile(101, 91, 1, 4, 4));
        tiles.add(new Tile(101, 88, 2, 4, 3));
        tiles.add(new Tile(101, 89, 3, 4, 4));
        tiles.add(new Tile(101, 88, 4, 4, 2));
        tiles.add(new Tile(101, 91, 0, 3, 1));
        tiles.add(new Tile(101, 92, 1, 3, 3));
        tiles.add(new Tile(101, 89, 2, 3, 4));
        tiles.add(new Tile(101, 91, 3, 3, 4));
        tiles.add(new Tile(101, 88, 4, 3, 3));
        tiles.add(new Tile(101, 88, 0, 2, 1));
        tiles.add(new Tile(101, 91, 1, 2, 3));
        tiles.add(new Tile(101, 92, 2, 2, 1));
        tiles.add(new Tile(101, 92, 3, 2, 4));
        tiles.add(new Tile(101, 88, 4, 2, 4));
        tiles.add(new Tile(101, 88, 0, 1, 1));
        tiles.add(new Tile(101, 92, 1, 1, 1));
        tiles.add(new Tile(101, 92, 2, 1, 1));
        tiles.add(new Tile(101, 89, 3, 1, 1));
        tiles.add(new Tile(101, 86, 4, 1, 3));
        tiles.add(new Tile(101, 86, 0, 0, 1));
        tiles.add(new Tile(101, 89, 1, 0, 3));
        tiles.add(new Tile(101, 89, 2, 0, 4));
        tiles.add(new Tile(101, 129, 3, 0, 1));
        tiles.add(new Tile(101, 87, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_102_NAME", "Distinct Strands"));
        puzzles.add(new Puzzle(102, 5, 12267L, 21, 0L, 0));
        tiles.add(new Tile(102, 88, 0, 4, 2));
        tiles.add(new Tile(102, 90, 1, 4, 1));
        tiles.add(new Tile(102, 88, 2, 4, 2));
        tiles.add(new Tile(102, 86, 3, 4, 3));
        tiles.add(new Tile(102, 87, 4, 4, 3));
        tiles.add(new Tile(102, 86, 0, 3, 3));
        tiles.add(new Tile(102, 87, 1, 3, 1));
        tiles.add(new Tile(102, 88, 2, 3, 2));
        tiles.add(new Tile(102, 129, 3, 3, 3));
        tiles.add(new Tile(102, 88, 4, 3, 4));
        tiles.add(new Tile(102, 89, 0, 2, 1));
        tiles.add(new Tile(102, 90, 1, 2, 1));
        tiles.add(new Tile(102, 89, 2, 2, 1));
        tiles.add(new Tile(102, 87, 3, 2, 3));
        tiles.add(new Tile(102, 90, 4, 2, 3));
        tiles.add(new Tile(102, 89, 0, 1, 1));
        tiles.add(new Tile(102, 90, 1, 1, 2));
        tiles.add(new Tile(102, 91, 2, 1, 2));
        tiles.add(new Tile(102, 89, 3, 1, 3));
        tiles.add(new Tile(102, 90, 4, 1, 2));
        tiles.add(new Tile(102, 88, 0, 0, 3));
        tiles.add(new Tile(102, 90, 1, 0, 4));
        tiles.add(new Tile(102, 91, 2, 0, 3));
        tiles.add(new Tile(102, 91, 3, 0, 1));
        tiles.add(new Tile(102, 89, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_103_NAME", "Never Wavering"));
        puzzles.add(new Puzzle(103, 5, 6500L, 8, 0L, 0));
        tiles.add(new Tile(103, 87, 0, 3, 1));
        tiles.add(new Tile(103, 129, 1, 3, 1));
        tiles.add(new Tile(103, 86, 2, 3, 1));
        tiles.add(new Tile(103, 129, 3, 3, 2));
        tiles.add(new Tile(103, 89, 4, 3, 1));
        tiles.add(new Tile(103, 90, 5, 3, 2));
        tiles.add(new Tile(103, 88, 6, 3, 2));
        tiles.add(new Tile(103, 87, 0, 2, 1));
        tiles.add(new Tile(103, 129, 1, 2, 3));
        tiles.add(new Tile(103, 86, 2, 2, 1));
        tiles.add(new Tile(103, 87, 3, 2, 3));
        tiles.add(new Tile(103, 90, 4, 2, 1));
        tiles.add(new Tile(103, 86, 5, 2, 2));
        tiles.add(new Tile(103, 86, 6, 2, 2));
        tiles.add(new Tile(103, 89, 0, 1, 2));
        tiles.add(new Tile(103, 90, 1, 1, 1));
        tiles.add(new Tile(103, 90, 2, 1, 2));
        tiles.add(new Tile(103, 90, 3, 1, 1));
        tiles.add(new Tile(103, 89, 4, 1, 2));
        tiles.add(new Tile(103, 86, 5, 1, 4));
        tiles.add(new Tile(103, 86, 6, 1, 2));
        tiles.add(new Tile(103, 88, 0, 0, 2));
        tiles.add(new Tile(103, 129, 1, 0, 2));
        tiles.add(new Tile(103, 87, 2, 0, 3));
        tiles.add(new Tile(103, 129, 3, 0, 3));
        tiles.add(new Tile(103, 87, 4, 0, 2));
        tiles.add(new Tile(103, 86, 5, 0, 2));
        tiles.add(new Tile(103, 87, 6, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_104_NAME", "Infected Strand"));
        puzzles.add(new Puzzle(104, 5, 5607L, 12, 0L, 0));
        tiles.add(new Tile(104, 88, 0, 2, 2));
        tiles.add(new Tile(104, 88, 1, 2, 4));
        tiles.add(new Tile(104, 178, 2, 2, 4));
        tiles.add(new Tile(104, 129, 3, 2, 1));
        tiles.add(new Tile(104, 173, 4, 2, 1));
        tiles.add(new Tile(104, 89, 0, 1, 3));
        tiles.add(new Tile(104, 89, 1, 1, 1));
        tiles.add(new Tile(104, 173, 2, 1, 4));
        tiles.add(new Tile(104, 175, 3, 1, 4));
        tiles.add(new Tile(104, 174, 4, 1, 1));
        tiles.add(new Tile(104, 86, 0, 0, 4));
        tiles.add(new Tile(104, 178, 1, 0, 2));
        tiles.add(new Tile(104, 86, 2, 0, 1));
        tiles.add(new Tile(104, 178, 3, 0, 2));
        tiles.add(new Tile(104, 179, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_105_NAME", "Idyllic Swamp"));
        puzzles.add(new Puzzle(105, 5, 3108L, 5, 0L, 0));
        tiles.add(new Tile(105, 180, 0, 4, 1));
        tiles.add(new Tile(105, 174, 1, 4, 3));
        tiles.add(new Tile(105, 175, 2, 4, 4));
        tiles.add(new Tile(105, 175, 3, 4, 2));
        tiles.add(new Tile(105, 173, 4, 4, 2));
        tiles.add(new Tile(105, 178, 0, 3, 3));
        tiles.add(new Tile(105, 175, 1, 3, 2));
        tiles.add(new Tile(105, 87, 2, 3, 2));
        tiles.add(new Tile(105, 181, 3, 3, 2));
        tiles.add(new Tile(105, 181, 4, 3, 2));
        tiles.add(new Tile(105, 179, 0, 2, 2));
        tiles.add(new Tile(105, 173, 1, 2, 4));
        tiles.add(new Tile(105, 178, 2, 2, 2));
        tiles.add(new Tile(105, 86, 3, 2, 1));
        tiles.add(new Tile(105, 180, 4, 2, 1));
        tiles.add(new Tile(105, 178, 0, 1, 3));
        tiles.add(new Tile(105, 87, 1, 1, 4));
        tiles.add(new Tile(105, 178, 2, 1, 2));
        tiles.add(new Tile(105, 181, 3, 1, 1));
        tiles.add(new Tile(105, 181, 4, 1, 2));
        tiles.add(new Tile(105, 87, 0, 0, 4));
        tiles.add(new Tile(105, 180, 1, 0, 4));
        tiles.add(new Tile(105, 179, 2, 0, 3));
        tiles.add(new Tile(105, 86, 3, 0, 2));
        tiles.add(new Tile(105, 181, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_106_NAME", "Divide And Infect"));
        puzzles.add(new Puzzle(106, 5, 4895L, 10, 0L, 0));
        tiles.add(new Tile(106, 86, 0, 1, 3));
        tiles.add(new Tile(106, 87, 1, 1, 4));
        tiles.add(new Tile(106, 174, 2, 1, 4));
        tiles.add(new Tile(106, 176, 3, 1, 3));
        tiles.add(new Tile(106, 175, 4, 1, 4));
        tiles.add(new Tile(106, 175, 5, 1, 1));
        tiles.add(new Tile(106, 173, 6, 1, 1));
        tiles.add(new Tile(106, 87, 0, 0, 3));
        tiles.add(new Tile(106, 173, 1, 0, 1));
        tiles.add(new Tile(106, 176, 2, 0, 2));
        tiles.add(new Tile(106, 174, 3, 0, 4));
        tiles.add(new Tile(106, 87, 4, 0, 4));
        tiles.add(new Tile(106, 180, 5, 0, 2));
        tiles.add(new Tile(106, 129, 6, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_107_NAME", "Surround The Enemy"));
        puzzles.add(new Puzzle(107, 5, 14292L, 28, 0L, 0));
        tiles.add(new Tile(107, 173, 0, 5, 4));
        tiles.add(new Tile(107, 179, 1, 5, 1));
        tiles.add(new Tile(107, 87, 2, 5, 3));
        tiles.add(new Tile(107, 88, 3, 5, 2));
        tiles.add(new Tile(107, 88, 4, 5, 2));
        tiles.add(new Tile(107, 175, 0, 4, 2));
        tiles.add(new Tile(107, 173, 1, 4, 1));
        tiles.add(new Tile(107, 86, 2, 4, 3));
        tiles.add(new Tile(107, 86, 3, 4, 2));
        tiles.add(new Tile(107, 173, 4, 4, 4));
        tiles.add(new Tile(107, 175, 0, 3, 4));
        tiles.add(new Tile(107, 175, 1, 3, 3));
        tiles.add(new Tile(107, 178, 2, 3, 2));
        tiles.add(new Tile(107, 174, 3, 3, 4));
        tiles.add(new Tile(107, 174, 4, 3, 1));
        tiles.add(new Tile(107, 174, 0, 2, 3));
        tiles.add(new Tile(107, 177, 1, 2, 1));
        tiles.add(new Tile(107, 175, 2, 2, 4));
        tiles.add(new Tile(107, 174, 3, 2, 4));
        tiles.add(new Tile(107, 88, 4, 2, 4));
        tiles.add(new Tile(107, 129, 0, 1, 1));
        tiles.add(new Tile(107, 173, 1, 1, 1));
        tiles.add(new Tile(107, 89, 2, 1, 1));
        tiles.add(new Tile(107, 90, 3, 1, 2));
        tiles.add(new Tile(107, 89, 4, 1, 2));
        tiles.add(new Tile(107, 181, 0, 0, 1));
        tiles.add(new Tile(107, 88, 1, 0, 3));
        tiles.add(new Tile(107, 89, 2, 0, 4));
        tiles.add(new Tile(107, 178, 3, 0, 1));
        tiles.add(new Tile(107, 87, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_108_NAME", "Short And Sweet"));
        puzzles.add(new Puzzle(108, 5, 5890L, 12, 0L, 0));
        tiles.add(new Tile(108, 129, 0, 6, 4));
        tiles.add(new Tile(108, 181, 1, 6, 2));
        tiles.add(new Tile(108, 180, 2, 6, 4));
        tiles.add(new Tile(108, 86, 3, 6, 3));
        tiles.add(new Tile(108, 88, 0, 5, 4));
        tiles.add(new Tile(108, 88, 1, 5, 2));
        tiles.add(new Tile(108, 180, 2, 5, 2));
        tiles.add(new Tile(108, 181, 3, 5, 2));
        tiles.add(new Tile(108, 180, 0, 4, 4));
        tiles.add(new Tile(108, 178, 1, 4, 2));
        tiles.add(new Tile(108, 180, 2, 4, 4));
        tiles.add(new Tile(108, 180, 3, 4, 4));
        tiles.add(new Tile(108, 129, 0, 3, 4));
        tiles.add(new Tile(108, 178, 1, 3, 2));
        tiles.add(new Tile(108, 173, 2, 3, 3));
        tiles.add(new Tile(108, 173, 3, 3, 4));
        tiles.add(new Tile(108, 178, 0, 2, 3));
        tiles.add(new Tile(108, 129, 1, 2, 2));
        tiles.add(new Tile(108, 173, 2, 2, 2));
        tiles.add(new Tile(108, 173, 3, 2, 2));
        tiles.add(new Tile(108, 88, 0, 1, 1));
        tiles.add(new Tile(108, 88, 1, 1, 2));
        tiles.add(new Tile(108, 180, 2, 1, 3));
        tiles.add(new Tile(108, 129, 3, 1, 4));
        tiles.add(new Tile(108, 86, 0, 0, 1));
        tiles.add(new Tile(108, 178, 1, 0, 3));
        tiles.add(new Tile(108, 180, 2, 0, 1));
        tiles.add(new Tile(108, 181, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_109_NAME", "Speechless"));
        puzzles.add(new Puzzle(109, 5, 8838L, 16, 0L, 0));
        tiles.add(new Tile(109, 89, 0, 4, 4));
        tiles.add(new Tile(109, 89, 1, 4, 1));
        tiles.add(new Tile(109, 88, 2, 4, 1));
        tiles.add(new Tile(109, 87, 3, 4, 2));
        tiles.add(new Tile(109, 87, 4, 4, 4));
        tiles.add(new Tile(109, 90, 0, 3, 3));
        tiles.add(new Tile(109, 91, 1, 3, 2));
        tiles.add(new Tile(109, 89, 2, 3, 1));
        tiles.add(new Tile(109, 88, 3, 3, 1));
        tiles.add(new Tile(109, 88, 4, 3, 3));
        tiles.add(new Tile(109, 91, 0, 2, 4));
        tiles.add(new Tile(109, 91, 1, 2, 4));
        tiles.add(new Tile(109, 181, 2, 2, 3));
        tiles.add(new Tile(109, 129, 3, 2, 3));
        tiles.add(new Tile(109, 181, 4, 2, 4));
        tiles.add(new Tile(109, 90, 0, 1, 3));
        tiles.add(new Tile(109, 90, 1, 1, 4));
        tiles.add(new Tile(109, 179, 2, 1, 4));
        tiles.add(new Tile(109, 178, 3, 1, 2));
        tiles.add(new Tile(109, 181, 4, 1, 4));
        tiles.add(new Tile(109, 89, 0, 0, 1));
        tiles.add(new Tile(109, 89, 1, 0, 4));
        tiles.add(new Tile(109, 179, 2, 0, 1));
        tiles.add(new Tile(109, 178, 3, 0, 1));
        tiles.add(new Tile(109, 87, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_110_NAME", "Spreading Out"));
        puzzles.add(new Puzzle(110, 5, 14866L, 25, 0L, 0));
        tiles.add(new Tile(110, 181, 0, 6, 1));
        tiles.add(new Tile(110, 180, 1, 6, 4));
        tiles.add(new Tile(110, 173, 2, 6, 4));
        tiles.add(new Tile(110, 87, 3, 6, 2));
        tiles.add(new Tile(110, 173, 4, 6, 3));
        tiles.add(new Tile(110, 173, 5, 6, 2));
        tiles.add(new Tile(110, 88, 0, 5, 3));
        tiles.add(new Tile(110, 86, 1, 5, 4));
        tiles.add(new Tile(110, 176, 2, 5, 1));
        tiles.add(new Tile(110, 175, 3, 5, 4));
        tiles.add(new Tile(110, 176, 4, 5, 1));
        tiles.add(new Tile(110, 174, 5, 5, 3));
        tiles.add(new Tile(110, 90, 0, 4, 1));
        tiles.add(new Tile(110, 86, 1, 4, 3));
        tiles.add(new Tile(110, 176, 2, 4, 2));
        tiles.add(new Tile(110, 173, 3, 4, 2));
        tiles.add(new Tile(110, 86, 4, 4, 2));
        tiles.add(new Tile(110, 86, 5, 4, 4));
        tiles.add(new Tile(110, 88, 0, 3, 2));
        tiles.add(new Tile(110, 178, 1, 3, 4));
        tiles.add(new Tile(110, 175, 2, 3, 3));
        tiles.add(new Tile(110, 87, 3, 3, 1));
        tiles.add(new Tile(110, 179, 4, 3, 3));
        tiles.add(new Tile(110, 87, 5, 3, 3));
        tiles.add(new Tile(110, 179, 0, 2, 2));
        tiles.add(new Tile(110, 129, 1, 2, 3));
        tiles.add(new Tile(110, 175, 2, 2, 2));
        tiles.add(new Tile(110, 129, 3, 2, 4));
        tiles.add(new Tile(110, 180, 4, 2, 3));
        tiles.add(new Tile(110, 86, 5, 2, 1));
        tiles.add(new Tile(110, 87, 0, 1, 4));
        tiles.add(new Tile(110, 87, 1, 1, 1));
        tiles.add(new Tile(110, 175, 2, 1, 4));
        tiles.add(new Tile(110, 179, 3, 1, 4));
        tiles.add(new Tile(110, 88, 4, 1, 1));
        tiles.add(new Tile(110, 88, 5, 1, 1));
        tiles.add(new Tile(110, 86, 0, 0, 4));
        tiles.add(new Tile(110, 180, 1, 0, 3));
        tiles.add(new Tile(110, 174, 2, 0, 4));
        tiles.add(new Tile(110, 175, 3, 0, 1));
        tiles.add(new Tile(110, 173, 4, 0, 3));
        tiles.add(new Tile(110, 179, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_111_NAME", "Mutated"));
        puzzles.add(new Puzzle(111, 5, 14114L, 21, 0L, 0));
        tiles.add(new Tile(111, 89, 0, 6, 4));
        tiles.add(new Tile(111, 89, 1, 6, 2));
        tiles.add(new Tile(111, 178, 2, 6, 2));
        tiles.add(new Tile(111, 180, 3, 6, 2));
        tiles.add(new Tile(111, 129, 4, 6, 3));
        tiles.add(new Tile(111, 90, 0, 5, 1));
        tiles.add(new Tile(111, 91, 1, 5, 4));
        tiles.add(new Tile(111, 90, 2, 5, 2));
        tiles.add(new Tile(111, 90, 3, 5, 3));
        tiles.add(new Tile(111, 88, 4, 5, 1));
        tiles.add(new Tile(111, 89, 0, 4, 4));
        tiles.add(new Tile(111, 89, 1, 4, 3));
        tiles.add(new Tile(111, 86, 2, 4, 3));
        tiles.add(new Tile(111, 173, 3, 4, 2));
        tiles.add(new Tile(111, 87, 4, 4, 1));
        tiles.add(new Tile(111, 181, 0, 3, 4));
        tiles.add(new Tile(111, 174, 1, 3, 3));
        tiles.add(new Tile(111, 175, 2, 3, 3));
        tiles.add(new Tile(111, 177, 3, 3, 3));
        tiles.add(new Tile(111, 173, 4, 3, 4));
        tiles.add(new Tile(111, 174, 0, 2, 1));
        tiles.add(new Tile(111, 174, 1, 2, 3));
        tiles.add(new Tile(111, 178, 2, 2, 2));
        tiles.add(new Tile(111, 175, 3, 2, 4));
        tiles.add(new Tile(111, 129, 4, 2, 2));
        tiles.add(new Tile(111, 173, 0, 1, 3));
        tiles.add(new Tile(111, 129, 1, 1, 4));
        tiles.add(new Tile(111, 129, 2, 1, 4));
        tiles.add(new Tile(111, 175, 3, 1, 3));
        tiles.add(new Tile(111, 129, 4, 1, 3));
        tiles.add(new Tile(111, 179, 0, 0, 3));
        tiles.add(new Tile(111, 179, 1, 0, 4));
        tiles.add(new Tile(111, 179, 2, 0, 3));
        tiles.add(new Tile(111, 174, 3, 0, 4));
        tiles.add(new Tile(111, 173, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_112_NAME", "Beating The Infection"));
        puzzles.add(new Puzzle(112, 5, 15379L, 26, 0L, 0));
        tiles.add(new Tile(112, 87, 0, 4, 4));
        tiles.add(new Tile(112, 87, 1, 4, 2));
        tiles.add(new Tile(112, 86, 2, 4, 1));
        tiles.add(new Tile(112, 181, 3, 4, 4));
        tiles.add(new Tile(112, 88, 4, 4, 2));
        tiles.add(new Tile(112, 87, 5, 4, 1));
        tiles.add(new Tile(112, 88, 6, 4, 3));
        tiles.add(new Tile(112, 89, 0, 3, 2));
        tiles.add(new Tile(112, 90, 1, 3, 3));
        tiles.add(new Tile(112, 90, 2, 3, 3));
        tiles.add(new Tile(112, 90, 3, 3, 1));
        tiles.add(new Tile(112, 92, 4, 3, 1));
        tiles.add(new Tile(112, 90, 5, 3, 3));
        tiles.add(new Tile(112, 91, 6, 3, 1));
        tiles.add(new Tile(112, 91, 0, 2, 3));
        tiles.add(new Tile(112, 90, 1, 2, 4));
        tiles.add(new Tile(112, 90, 2, 2, 3));
        tiles.add(new Tile(112, 90, 3, 2, 3));
        tiles.add(new Tile(112, 92, 4, 2, 2));
        tiles.add(new Tile(112, 90, 5, 2, 3));
        tiles.add(new Tile(112, 89, 6, 2, 4));
        tiles.add(new Tile(112, 90, 0, 1, 1));
        tiles.add(new Tile(112, 86, 1, 1, 1));
        tiles.add(new Tile(112, 129, 2, 1, 4));
        tiles.add(new Tile(112, 86, 3, 1, 4));
        tiles.add(new Tile(112, 88, 4, 1, 4));
        tiles.add(new Tile(112, 129, 5, 1, 2));
        tiles.add(new Tile(112, 173, 6, 1, 2));
        tiles.add(new Tile(112, 88, 0, 0, 2));
        tiles.add(new Tile(112, 173, 1, 0, 3));
        tiles.add(new Tile(112, 175, 2, 0, 4));
        tiles.add(new Tile(112, 173, 3, 0, 1));
        tiles.add(new Tile(112, 86, 4, 0, 4));
        tiles.add(new Tile(112, 173, 5, 0, 3));
        tiles.add(new Tile(112, 174, 6, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_113_NAME", "Divided"));
        puzzles.add(new Puzzle(113, 5, 28592L, 40, 0L, 0));
        tiles.add(new Tile(113, 88, 0, 7, 4));
        tiles.add(new Tile(113, 178, 1, 7, 1));
        tiles.add(new Tile(113, 86, 2, 7, 4));
        tiles.add(new Tile(113, 173, 3, 7, 2));
        tiles.add(new Tile(113, 181, 4, 7, 3));
        tiles.add(new Tile(113, 86, 5, 7, 2));
        tiles.add(new Tile(113, 88, 6, 7, 1));
        tiles.add(new Tile(113, 90, 0, 6, 4));
        tiles.add(new Tile(113, 129, 1, 6, 2));
        tiles.add(new Tile(113, 180, 2, 6, 3));
        tiles.add(new Tile(113, 173, 3, 6, 3));
        tiles.add(new Tile(113, 181, 4, 6, 2));
        tiles.add(new Tile(113, 86, 5, 6, 1));
        tiles.add(new Tile(113, 90, 6, 6, 1));
        tiles.add(new Tile(113, 90, 0, 5, 2));
        tiles.add(new Tile(113, 179, 1, 5, 2));
        tiles.add(new Tile(113, 89, 2, 5, 3));
        tiles.add(new Tile(113, 90, 3, 5, 2));
        tiles.add(new Tile(113, 90, 4, 5, 3));
        tiles.add(new Tile(113, 90, 5, 5, 2));
        tiles.add(new Tile(113, 89, 6, 5, 2));
        tiles.add(new Tile(113, 88, 0, 4, 4));
        tiles.add(new Tile(113, 129, 1, 4, 1));
        tiles.add(new Tile(113, 88, 2, 4, 4));
        tiles.add(new Tile(113, 174, 3, 4, 3));
        tiles.add(new Tile(113, 173, 4, 4, 4));
        tiles.add(new Tile(113, 174, 5, 4, 2));
        tiles.add(new Tile(113, 173, 6, 4, 3));
        tiles.add(new Tile(113, 86, 0, 3, 2));
        tiles.add(new Tile(113, 88, 1, 3, 3));
        tiles.add(new Tile(113, 129, 2, 3, 2));
        tiles.add(new Tile(113, 173, 3, 3, 1));
        tiles.add(new Tile(113, 173, 4, 3, 2));
        tiles.add(new Tile(113, 176, 5, 3, 3));
        tiles.add(new Tile(113, 173, 6, 3, 3));
        tiles.add(new Tile(113, 129, 0, 2, 1));
        tiles.add(new Tile(113, 90, 1, 2, 3));
        tiles.add(new Tile(113, 178, 2, 2, 4));
        tiles.add(new Tile(113, 178, 3, 2, 4));
        tiles.add(new Tile(113, 87, 4, 2, 2));
        tiles.add(new Tile(113, 173, 5, 2, 1));
        tiles.add(new Tile(113, 173, 6, 2, 1));
        tiles.add(new Tile(113, 89, 0, 1, 1));
        tiles.add(new Tile(113, 91, 1, 1, 4));
        tiles.add(new Tile(113, 90, 2, 1, 2));
        tiles.add(new Tile(113, 88, 3, 1, 2));
        tiles.add(new Tile(113, 181, 4, 1, 2));
        tiles.add(new Tile(113, 180, 5, 1, 4));
        tiles.add(new Tile(113, 178, 6, 1, 3));
        tiles.add(new Tile(113, 89, 0, 0, 4));
        tiles.add(new Tile(113, 88, 1, 0, 2));
        tiles.add(new Tile(113, 178, 2, 0, 1));
        tiles.add(new Tile(113, 180, 3, 0, 3));
        tiles.add(new Tile(113, 87, 4, 0, 4));
        tiles.add(new Tile(113, 178, 5, 0, 2));
        tiles.add(new Tile(113, 86, 6, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_114_NAME", "Antibiotics"));
        puzzles.add(new Puzzle(114, 5, 4766L, 12, 0L, 0));
        tiles.add(new Tile(114, 88, 0, 4, 2));
        tiles.add(new Tile(114, 129, 1, 4, 4));
        tiles.add(new Tile(114, 178, 2, 4, 2));
        tiles.add(new Tile(114, 88, 3, 4, 3));
        tiles.add(new Tile(114, 88, 0, 3, 4));
        tiles.add(new Tile(114, 86, 1, 3, 2));
        tiles.add(new Tile(114, 179, 2, 3, 1));
        tiles.add(new Tile(114, 90, 3, 3, 4));
        tiles.add(new Tile(114, 173, 0, 2, 4));
        tiles.add(new Tile(114, 87, 1, 2, 1));
        tiles.add(new Tile(114, 129, 2, 2, 2));
        tiles.add(new Tile(114, 90, 3, 2, 2));
        tiles.add(new Tile(114, 175, 0, 1, 2));
        tiles.add(new Tile(114, 86, 1, 1, 2));
        tiles.add(new Tile(114, 178, 2, 1, 1));
        tiles.add(new Tile(114, 90, 3, 1, 4));
        tiles.add(new Tile(114, 173, 0, 0, 3));
        tiles.add(new Tile(114, 86, 1, 0, 4));
        tiles.add(new Tile(114, 181, 2, 0, 1));
        tiles.add(new Tile(114, 88, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_115_NAME", "Lingering"));
        puzzles.add(new Puzzle(115, 5, 6237L, 10, 0L, 0));
        tiles.add(new Tile(115, 179, 0, 4, 1));
        tiles.add(new Tile(115, 181, 1, 4, 3));
        tiles.add(new Tile(115, 89, 2, 4, 2));
        tiles.add(new Tile(115, 88, 3, 4, 1));
        tiles.add(new Tile(115, 86, 4, 4, 2));
        tiles.add(new Tile(115, 86, 0, 3, 2));
        tiles.add(new Tile(115, 181, 1, 3, 3));
        tiles.add(new Tile(115, 90, 2, 3, 2));
        tiles.add(new Tile(115, 129, 3, 3, 4));
        tiles.add(new Tile(115, 86, 4, 3, 2));
        tiles.add(new Tile(115, 129, 0, 2, 4));
        tiles.add(new Tile(115, 180, 1, 2, 1));
        tiles.add(new Tile(115, 90, 2, 2, 4));
        tiles.add(new Tile(115, 89, 3, 2, 4));
        tiles.add(new Tile(115, 88, 4, 2, 3));
        tiles.add(new Tile(115, 88, 0, 1, 4));
        tiles.add(new Tile(115, 90, 1, 1, 4));
        tiles.add(new Tile(115, 91, 2, 1, 3));
        tiles.add(new Tile(115, 91, 3, 1, 2));
        tiles.add(new Tile(115, 88, 4, 1, 3));
        tiles.add(new Tile(115, 181, 0, 0, 4));
        tiles.add(new Tile(115, 179, 1, 0, 2));
        tiles.add(new Tile(115, 86, 2, 0, 1));
        tiles.add(new Tile(115, 129, 3, 0, 2));
        tiles.add(new Tile(115, 87, 4, 0, 3));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack6() {
        // Desert Oasis
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_116_NAME", "The Divide"));
        puzzles.add(new Puzzle(116, 6, 12962L, 14, 0L, 0));
        tiles.add(new Tile(116, 93, 0, 3, 4));
        tiles.add(new Tile(116, 163, 1, 3, 1));
        tiles.add(new Tile(116, 115, 2, 3, 4));
        tiles.add(new Tile(116, 117, 3, 3, 4));
        tiles.add(new Tile(116, 96, 4, 3, 2));
        tiles.add(new Tile(116, 96, 0, 2, 1));
        tiles.add(new Tile(116, 93, 1, 2, 1));
        tiles.add(new Tile(116, 123, 2, 2, 4));
        tiles.add(new Tile(116, 121, 3, 2, 1));
        tiles.add(new Tile(116, 162, 4, 2, 3));
        tiles.add(new Tile(116, 96, 0, 1, 3));
        tiles.add(new Tile(116, 93, 1, 1, 4));
        tiles.add(new Tile(116, 93, 2, 1, 2));
        tiles.add(new Tile(116, 96, 3, 1, 1));
        tiles.add(new Tile(116, 159, 4, 1, 2));
        tiles.add(new Tile(116, 163, 0, 0, 1));
        tiles.add(new Tile(116, 126, 1, 0, 2));
        tiles.add(new Tile(116, 126, 2, 0, 4));
        tiles.add(new Tile(116, 163, 3, 0, 4));
        tiles.add(new Tile(116, 93, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_117_NAME", "Isolation"));
        puzzles.add(new Puzzle(117, 6, 31250L, 28, 0L, 0));
        tiles.add(new Tile(117, 97, 0, 4, 1));
        tiles.add(new Tile(117, 125, 1, 4, 2));
        tiles.add(new Tile(117, 164, 2, 4, 4));
        tiles.add(new Tile(117, 126, 3, 4, 3));
        tiles.add(new Tile(117, 99, 4, 4, 3));
        tiles.add(new Tile(117, 95, 0, 3, 1));
        tiles.add(new Tile(117, 97, 1, 3, 3));
        tiles.add(new Tile(117, 164, 2, 3, 3));
        tiles.add(new Tile(117, 114, 3, 3, 4));
        tiles.add(new Tile(117, 163, 4, 3, 1));
        tiles.add(new Tile(117, 108, 0, 2, 4));
        tiles.add(new Tile(117, 123, 1, 2, 1));
        tiles.add(new Tile(117, 94, 2, 2, 1));
        tiles.add(new Tile(117, 127, 3, 2, 3));
        tiles.add(new Tile(117, 99, 4, 2, 1));
        tiles.add(new Tile(117, 162, 0, 1, 2));
        tiles.add(new Tile(117, 118, 1, 1, 2));
        tiles.add(new Tile(117, 101, 2, 1, 4));
        tiles.add(new Tile(117, 100, 3, 1, 2));
        tiles.add(new Tile(117, 95, 4, 1, 4));
        tiles.add(new Tile(117, 94, 0, 0, 3));
        tiles.add(new Tile(117, 123, 1, 0, 4));
        tiles.add(new Tile(117, 161, 2, 0, 2));
        tiles.add(new Tile(117, 160, 3, 0, 2));
        tiles.add(new Tile(117, 95, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_118_NAME", "Curving Round"));
        puzzles.add(new Puzzle(118, 6, 24248L, 26, 0L, 0));
        tiles.add(new Tile(118, 94, 0, 3, 2));
        tiles.add(new Tile(118, 164, 1, 3, 3));
        tiles.add(new Tile(118, 163, 2, 3, 4));
        tiles.add(new Tile(118, 162, 3, 3, 2));
        tiles.add(new Tile(118, 108, 4, 3, 3));
        tiles.add(new Tile(118, 93, 5, 3, 4));
        tiles.add(new Tile(118, 94, 0, 2, 2));
        tiles.add(new Tile(118, 126, 1, 2, 2));
        tiles.add(new Tile(118, 123, 2, 2, 1));
        tiles.add(new Tile(118, 118, 3, 2, 1));
        tiles.add(new Tile(118, 121, 4, 2, 4));
        tiles.add(new Tile(118, 123, 5, 2, 1));
        tiles.add(new Tile(118, 93, 0, 1, 3));
        tiles.add(new Tile(118, 126, 1, 1, 3));
        tiles.add(new Tile(118, 97, 2, 1, 3));
        tiles.add(new Tile(118, 125, 3, 1, 1));
        tiles.add(new Tile(118, 97, 4, 1, 2));
        tiles.add(new Tile(118, 97, 5, 1, 1));
        tiles.add(new Tile(118, 94, 0, 0, 2));
        tiles.add(new Tile(118, 164, 1, 0, 4));
        tiles.add(new Tile(118, 119, 2, 0, 3));
        tiles.add(new Tile(118, 120, 3, 0, 3));
        tiles.add(new Tile(118, 98, 4, 0, 4));
        tiles.add(new Tile(118, 96, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_119_NAME", "Connections"));
        puzzles.add(new Puzzle(119, 6, 18640L, 27, 0L, 0));
        tiles.add(new Tile(119, 162, 0, 5, 3));
        tiles.add(new Tile(119, 103, 1, 5, 4));
        tiles.add(new Tile(119, 96, 2, 5, 3));
        tiles.add(new Tile(119, 121, 0, 4, 4));
        tiles.add(new Tile(119, 160, 1, 4, 1));
        tiles.add(new Tile(119, 128, 2, 4, 2));
        tiles.add(new Tile(119, 125, 0, 3, 3));
        tiles.add(new Tile(119, 162, 1, 3, 3));
        tiles.add(new Tile(119, 98, 2, 3, 4));
        tiles.add(new Tile(119, 93, 0, 2, 1));
        tiles.add(new Tile(119, 160, 1, 2, 4));
        tiles.add(new Tile(119, 127, 2, 2, 1));
        tiles.add(new Tile(119, 161, 0, 1, 3));
        tiles.add(new Tile(119, 121, 1, 1, 3));
        tiles.add(new Tile(119, 162, 2, 1, 1));
        tiles.add(new Tile(119, 162, 0, 0, 2));
        tiles.add(new Tile(119, 121, 1, 0, 4));
        tiles.add(new Tile(119, 161, 2, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_120_NAME", "Rectangular"));
        puzzles.add(new Puzzle(120, 6, 11085L, 15, 0L, 0));
        tiles.add(new Tile(120, 159, 0, 2, 1));
        tiles.add(new Tile(120, 128, 1, 2, 1));
        tiles.add(new Tile(120, 98, 2, 2, 2));
        tiles.add(new Tile(120, 128, 3, 2, 1));
        tiles.add(new Tile(120, 160, 4, 2, 1));
        tiles.add(new Tile(120, 108, 0, 1, 3));
        tiles.add(new Tile(120, 128, 1, 1, 4));
        tiles.add(new Tile(120, 120, 2, 1, 1));
        tiles.add(new Tile(120, 122, 3, 1, 4));
        tiles.add(new Tile(120, 157, 4, 1, 1));
        tiles.add(new Tile(120, 94, 0, 0, 3));
        tiles.add(new Tile(120, 96, 1, 0, 3));
        tiles.add(new Tile(120, 94, 2, 0, 3));
        tiles.add(new Tile(120, 159, 3, 0, 4));
        tiles.add(new Tile(120, 103, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_121_NAME", "High Life"));
        puzzles.add(new Puzzle(121, 6, 11834L, 14, 0L, 0));
        tiles.add(new Tile(121, 99, 0, 2, 2));
        tiles.add(new Tile(121, 163, 1, 2, 2));
        tiles.add(new Tile(121, 164, 2, 2, 1));
        tiles.add(new Tile(121, 164, 3, 2, 1));
        tiles.add(new Tile(121, 163, 4, 2, 1));
        tiles.add(new Tile(121, 99, 0, 1, 4));
        tiles.add(new Tile(121, 93, 1, 1, 4));
        tiles.add(new Tile(121, 163, 2, 1, 1));
        tiles.add(new Tile(121, 163, 3, 1, 2));
        tiles.add(new Tile(121, 108, 4, 1, 2));
        tiles.add(new Tile(121, 163, 0, 0, 1));
        tiles.add(new Tile(121, 114, 1, 0, 4));
        tiles.add(new Tile(121, 115, 2, 0, 4));
        tiles.add(new Tile(121, 117, 3, 0, 3));
        tiles.add(new Tile(121, 159, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_122_NAME", "Train Station"));
        puzzles.add(new Puzzle(122, 6, 11398L, 15, 0L, 0));
        tiles.add(new Tile(122, 108, 0, 2, 1));
        tiles.add(new Tile(122, 157, 1, 2, 2));
        tiles.add(new Tile(122, 107, 2, 2, 3));
        tiles.add(new Tile(122, 108, 3, 2, 3));
        tiles.add(new Tile(122, 123, 0, 1, 2));
        tiles.add(new Tile(122, 96, 1, 1, 2));
        tiles.add(new Tile(122, 160, 2, 1, 2));
        tiles.add(new Tile(122, 96, 3, 1, 1));
        tiles.add(new Tile(122, 123, 0, 0, 2));
        tiles.add(new Tile(122, 163, 1, 0, 1));
        tiles.add(new Tile(122, 113, 2, 0, 3));
        tiles.add(new Tile(122, 163, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_123_NAME", "Interconnected"));
        puzzles.add(new Puzzle(123, 6, 10856L, 20, 0L, 0));
        tiles.add(new Tile(123, 123, 0, 2, 4));
        tiles.add(new Tile(123, 101, 1, 2, 3));
        tiles.add(new Tile(123, 101, 2, 2, 4));
        tiles.add(new Tile(123, 123, 3, 2, 4));
        tiles.add(new Tile(123, 123, 0, 1, 2));
        tiles.add(new Tile(123, 101, 1, 1, 1));
        tiles.add(new Tile(123, 124, 2, 1, 2));
        tiles.add(new Tile(123, 97, 3, 1, 4));
        tiles.add(new Tile(123, 95, 0, 0, 4));
        tiles.add(new Tile(123, 93, 1, 0, 3));
        tiles.add(new Tile(123, 94, 2, 0, 2));
        tiles.add(new Tile(123, 94, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_124_NAME", "Tracking"));
        puzzles.add(new Puzzle(124, 6, 11440L, 17, 0L, 0));
        tiles.add(new Tile(124, 108, 0, 4, 1));
        tiles.add(new Tile(124, 102, 1, 4, 1));
        tiles.add(new Tile(124, 108, 2, 4, 2));
        tiles.add(new Tile(124, 108, 0, 3, 4));
        tiles.add(new Tile(124, 161, 1, 3, 3));
        tiles.add(new Tile(124, 96, 2, 3, 3));
        tiles.add(new Tile(124, 125, 0, 2, 1));
        tiles.add(new Tile(124, 125, 1, 2, 4));
        tiles.add(new Tile(124, 126, 2, 2, 2));
        tiles.add(new Tile(124, 97, 0, 1, 2));
        tiles.add(new Tile(124, 164, 1, 1, 1));
        tiles.add(new Tile(124, 164, 2, 1, 1));
        tiles.add(new Tile(124, 93, 0, 0, 2));
        tiles.add(new Tile(124, 163, 1, 0, 1));
        tiles.add(new Tile(124, 95, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_125_NAME", "Jagged Outcrop"));
        puzzles.add(new Puzzle(125, 6, 6854L, 11, 0L, 0));
        tiles.add(new Tile(125, 161, 0, 1, 4));
        tiles.add(new Tile(125, 97, 1, 1, 2));
        tiles.add(new Tile(125, 94, 2, 1, 2));
        tiles.add(new Tile(125, 94, 3, 1, 4));
        tiles.add(new Tile(125, 162, 4, 1, 1));
        tiles.add(new Tile(125, 111, 5, 1, 2));
        tiles.add(new Tile(125, 166, 6, 1, 1));
        tiles.add(new Tile(125, 108, 0, 0, 3));
        tiles.add(new Tile(125, 96, 1, 0, 2));
        tiles.add(new Tile(125, 126, 2, 0, 1));
        tiles.add(new Tile(125, 163, 3, 0, 2));
        tiles.add(new Tile(125, 123, 4, 0, 4));
        tiles.add(new Tile(125, 94, 5, 0, 1));
        tiles.add(new Tile(125, 94, 6, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_126_NAME", "Trailing Rails"));
        puzzles.add(new Puzzle(126, 6, 11322L, 21, 0L, 0));
        tiles.add(new Tile(126, 93, 0, 4, 2));
        tiles.add(new Tile(126, 127, 1, 4, 3));
        tiles.add(new Tile(126, 99, 2, 4, 1));
        tiles.add(new Tile(126, 159, 0, 3, 1));
        tiles.add(new Tile(126, 122, 1, 3, 2));
        tiles.add(new Tile(126, 127, 2, 3, 4));
        tiles.add(new Tile(126, 108, 0, 2, 2));
        tiles.add(new Tile(126, 159, 1, 2, 2));
        tiles.add(new Tile(126, 160, 2, 2, 3));
        tiles.add(new Tile(126, 108, 0, 1, 3));
        tiles.add(new Tile(126, 159, 1, 1, 1));
        tiles.add(new Tile(126, 93, 2, 1, 3));
        tiles.add(new Tile(126, 108, 0, 0, 1));
        tiles.add(new Tile(126, 160, 1, 0, 2));
        tiles.add(new Tile(126, 93, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_127_NAME", "Upper Tier"));
        puzzles.add(new Puzzle(127, 6, 9182L, 16, 0L, 0));
        tiles.add(new Tile(127, 163, 0, 3, 2));
        tiles.add(new Tile(127, 114, 1, 3, 1));
        tiles.add(new Tile(127, 113, 2, 3, 2));
        tiles.add(new Tile(127, 163, 3, 3, 4));
        tiles.add(new Tile(127, 95, 0, 2, 3));
        tiles.add(new Tile(127, 94, 1, 2, 1));
        tiles.add(new Tile(127, 108, 2, 2, 3));
        tiles.add(new Tile(127, 108, 3, 2, 2));
        tiles.add(new Tile(127, 127, 0, 1, 1));
        tiles.add(new Tile(127, 98, 1, 1, 2));
        tiles.add(new Tile(127, 99, 2, 1, 3));
        tiles.add(new Tile(127, 95, 3, 1, 2));
        tiles.add(new Tile(127, 99, 0, 0, 2));
        tiles.add(new Tile(127, 123, 1, 0, 1));
        tiles.add(new Tile(127, 97, 2, 0, 4));
        tiles.add(new Tile(127, 93, 3, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_128_NAME", "Right Angles"));
        puzzles.add(new Puzzle(128, 6, 10438L, 19, 0L, 0));
        tiles.add(new Tile(128, 166, 0, 4, 3));
        tiles.add(new Tile(128, 94, 1, 4, 1));
        tiles.add(new Tile(128, 95, 2, 4, 4));
        tiles.add(new Tile(128, 165, 0, 3, 2));
        tiles.add(new Tile(128, 96, 1, 3, 4));
        tiles.add(new Tile(128, 95, 2, 3, 3));
        tiles.add(new Tile(128, 166, 0, 2, 4));
        tiles.add(new Tile(128, 159, 1, 2, 2));
        tiles.add(new Tile(128, 108, 2, 2, 1));
        tiles.add(new Tile(128, 163, 0, 1, 2));
        tiles.add(new Tile(128, 119, 1, 1, 3));
        tiles.add(new Tile(128, 96, 2, 1, 1));
        tiles.add(new Tile(128, 95, 0, 0, 4));
        tiles.add(new Tile(128, 94, 1, 0, 4));
        tiles.add(new Tile(128, 93, 2, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_129_NAME", "Diagonal Divide"));
        puzzles.add(new Puzzle(129, 6, 15450L, 22, 0L, 0));
        tiles.add(new Tile(129, 96, 0, 5, 3));
        tiles.add(new Tile(129, 100, 1, 5, 3));
        tiles.add(new Tile(129, 99, 2, 5, 3));
        tiles.add(new Tile(129, 163, 0, 4, 2));
        tiles.add(new Tile(129, 125, 1, 4, 1));
        tiles.add(new Tile(129, 162, 2, 4, 3));
        tiles.add(new Tile(129, 117, 0, 3, 2));
        tiles.add(new Tile(129, 95, 1, 3, 1));
        tiles.add(new Tile(129, 108, 2, 3, 4));
        tiles.add(new Tile(129, 159, 0, 2, 2));
        tiles.add(new Tile(129, 111, 1, 2, 4));
        tiles.add(new Tile(129, 166, 2, 2, 1));
        tiles.add(new Tile(129, 95, 0, 1, 3));
        tiles.add(new Tile(129, 123, 1, 1, 4));
        tiles.add(new Tile(129, 108, 2, 1, 3));
        tiles.add(new Tile(129, 95, 0, 0, 2));
        tiles.add(new Tile(129, 125, 1, 0, 3));
        tiles.add(new Tile(129, 161, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_130_NAME", "Train Centrepiece"));
        puzzles.add(new Puzzle(130, 6, 20475L, 28, 0L, 0));
        tiles.add(new Tile(130, 96, 0, 3, 1));
        tiles.add(new Tile(130, 166, 1, 3, 2));
        tiles.add(new Tile(130, 161, 2, 3, 2));
        tiles.add(new Tile(130, 121, 3, 3, 1));
        tiles.add(new Tile(130, 123, 4, 3, 3));
        tiles.add(new Tile(130, 120, 0, 2, 1));
        tiles.add(new Tile(130, 111, 1, 2, 1));
        tiles.add(new Tile(130, 157, 2, 2, 2));
        tiles.add(new Tile(130, 127, 3, 2, 1));
        tiles.add(new Tile(130, 99, 4, 2, 2));
        tiles.add(new Tile(130, 120, 0, 1, 2));
        tiles.add(new Tile(130, 110, 1, 1, 2));
        tiles.add(new Tile(130, 109, 2, 1, 4));
        tiles.add(new Tile(130, 160, 3, 1, 1));
        tiles.add(new Tile(130, 120, 4, 1, 3));
        tiles.add(new Tile(130, 159, 0, 0, 2));
        tiles.add(new Tile(130, 103, 1, 0, 3));
        tiles.add(new Tile(130, 93, 2, 0, 1));
        tiles.add(new Tile(130, 108, 3, 0, 2));
        tiles.add(new Tile(130, 160, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_131_NAME", "Looping Round"));
        puzzles.add(new Puzzle(131, 6, 8356L, 15, 0L, 0));
        tiles.add(new Tile(131, 127, 0, 2, 1));
        tiles.add(new Tile(131, 96, 1, 2, 4));
        tiles.add(new Tile(131, 163, 2, 2, 4));
        tiles.add(new Tile(131, 163, 3, 2, 3));
        tiles.add(new Tile(131, 120, 0, 1, 2));
        tiles.add(new Tile(131, 93, 1, 1, 4));
        tiles.add(new Tile(131, 97, 2, 1, 2));
        tiles.add(new Tile(131, 123, 3, 1, 1));
        tiles.add(new Tile(131, 127, 0, 0, 3));
        tiles.add(new Tile(131, 120, 1, 0, 2));
        tiles.add(new Tile(131, 119, 2, 0, 4));
        tiles.add(new Tile(131, 163, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_132_NAME", "K I L ..."));
        puzzles.add(new Puzzle(132, 6, 13995L, 22, 0L, 0));
        tiles.add(new Tile(132, 96, 0, 5, 2));
        tiles.add(new Tile(132, 126, 1, 5, 2));
        tiles.add(new Tile(132, 114, 2, 5, 4));
        tiles.add(new Tile(132, 163, 3, 5, 2));
        tiles.add(new Tile(132, 93, 0, 4, 2));
        tiles.add(new Tile(132, 97, 1, 4, 3));
        tiles.add(new Tile(132, 121, 2, 4, 4));
        tiles.add(new Tile(132, 123, 3, 4, 3));
        tiles.add(new Tile(132, 166, 0, 3, 2));
        tiles.add(new Tile(132, 165, 1, 3, 4));
        tiles.add(new Tile(132, 165, 2, 3, 2));
        tiles.add(new Tile(132, 166, 3, 3, 1));
        tiles.add(new Tile(132, 95, 0, 2, 2));
        tiles.add(new Tile(132, 93, 1, 2, 2));
        tiles.add(new Tile(132, 96, 2, 2, 3));
        tiles.add(new Tile(132, 99, 3, 2, 4));
        tiles.add(new Tile(132, 95, 0, 1, 4));
        tiles.add(new Tile(132, 161, 1, 1, 4));
        tiles.add(new Tile(132, 101, 2, 1, 2));
        tiles.add(new Tile(132, 123, 3, 1, 3));
        tiles.add(new Tile(132, 94, 0, 0, 1));
        tiles.add(new Tile(132, 162, 1, 0, 2));
        tiles.add(new Tile(132, 124, 2, 0, 4));
        tiles.add(new Tile(132, 97, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_133_NAME", "Supporting Rail"));
        puzzles.add(new Puzzle(133, 6, 6441L, 13, 0L, 0));
        tiles.add(new Tile(133, 125, 0, 2, 3));
        tiles.add(new Tile(133, 123, 1, 2, 1));
        tiles.add(new Tile(133, 96, 2, 2, 2));
        tiles.add(new Tile(133, 101, 0, 1, 3));
        tiles.add(new Tile(133, 97, 1, 1, 3));
        tiles.add(new Tile(133, 99, 2, 1, 1));
        tiles.add(new Tile(133, 161, 0, 0, 3));
        tiles.add(new Tile(133, 102, 1, 0, 3));
        tiles.add(new Tile(133, 108, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_134_NAME", "Side By Side"));
        puzzles.add(new Puzzle(134, 6, 5021L, 9, 0L, 0));
        tiles.add(new Tile(134, 99, 0, 4, 3));
        tiles.add(new Tile(134, 108, 1, 4, 3));
        tiles.add(new Tile(134, 120, 0, 3, 3));
        tiles.add(new Tile(134, 102, 1, 3, 3));
        tiles.add(new Tile(134, 126, 0, 2, 2));
        tiles.add(new Tile(134, 102, 1, 2, 2));
        tiles.add(new Tile(134, 119, 0, 1, 1));
        tiles.add(new Tile(134, 102, 1, 1, 2));
        tiles.add(new Tile(134, 96, 0, 0, 4));
        tiles.add(new Tile(134, 108, 1, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_135_NAME", "iUi"));
        puzzles.add(new Puzzle(135, 6, 11119L, 21, 0L, 0));
        tiles.add(new Tile(135, 103, 0, 5, 4));
        tiles.add(new Tile(135, 161, 1, 5, 1));
        tiles.add(new Tile(135, 108, 0, 4, 2));
        tiles.add(new Tile(135, 123, 1, 4, 1));
        tiles.add(new Tile(135, 166, 0, 3, 4));
        tiles.add(new Tile(135, 166, 1, 3, 2));
        tiles.add(new Tile(135, 99, 0, 2, 2));
        tiles.add(new Tile(135, 127, 1, 2, 1));
        tiles.add(new Tile(135, 99, 0, 1, 2));
        tiles.add(new Tile(135, 127, 1, 1, 2));
        tiles.add(new Tile(135, 166, 0, 0, 4));
        tiles.add(new Tile(135, 166, 1, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_136_NAME", "Fish Hook"));
        puzzles.add(new Puzzle(136, 6, 6750L, 9, 0L, 0));
        tiles.add(new Tile(136, 94, 0, 2, 2));
        tiles.add(new Tile(136, 95, 1, 2, 1));
        tiles.add(new Tile(136, 96, 2, 2, 3));
        tiles.add(new Tile(136, 103, 0, 1, 3));
        tiles.add(new Tile(136, 108, 1, 1, 3));
        tiles.add(new Tile(136, 98, 2, 1, 3));
        tiles.add(new Tile(136, 103, 0, 0, 4));
        tiles.add(new Tile(136, 102, 1, 0, 1));
        tiles.add(new Tile(136, 160, 2, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_137_NAME", "4 Routes"));
        puzzles.add(new Puzzle(137, 6, 10566L, 18, 0L, 0));
        tiles.add(new Tile(137, 103, 0, 3, 1));
        tiles.add(new Tile(137, 102, 1, 3, 2));
        tiles.add(new Tile(137, 111, 2, 3, 1));
        tiles.add(new Tile(137, 166, 3, 3, 1));
        tiles.add(new Tile(137, 157, 0, 2, 1));
        tiles.add(new Tile(137, 119, 1, 2, 2));
        tiles.add(new Tile(137, 163, 2, 2, 1));
        tiles.add(new Tile(137, 93, 3, 2, 1));
        tiles.add(new Tile(137, 109, 0, 1, 1));
        tiles.add(new Tile(137, 111, 1, 1, 4));
        tiles.add(new Tile(137, 165, 2, 1, 4));
        tiles.add(new Tile(137, 166, 3, 1, 4));
        tiles.add(new Tile(137, 160, 0, 0, 2));
        tiles.add(new Tile(137, 120, 1, 0, 1));
        tiles.add(new Tile(137, 117, 2, 0, 4));
        tiles.add(new Tile(137, 163, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_138_NAME", "Simple Curve"));
        puzzles.add(new Puzzle(138, 6, 4089L, 6, 0L, 0));
        tiles.add(new Tile(138, 96, 0, 2, 3));
        tiles.add(new Tile(138, 94, 1, 2, 3));
        tiles.add(new Tile(138, 93, 2, 2, 3));
        tiles.add(new Tile(138, 120, 0, 1, 4));
        tiles.add(new Tile(138, 94, 1, 1, 1));
        tiles.add(new Tile(138, 93, 2, 1, 4));
        tiles.add(new Tile(138, 127, 0, 0, 4));
        tiles.add(new Tile(138, 98, 1, 0, 4));
        tiles.add(new Tile(138, 96, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_139_NAME", "The Underpass"));
        puzzles.add(new Puzzle(139, 6, 15184L, 21, 0L, 0));
        tiles.add(new Tile(139, 163, 0, 3, 3));
        tiles.add(new Tile(139, 127, 1, 3, 2));
        tiles.add(new Tile(139, 120, 2, 3, 1));
        tiles.add(new Tile(139, 96, 3, 3, 3));
        tiles.add(new Tile(139, 164, 0, 2, 2));
        tiles.add(new Tile(139, 116, 1, 2, 4));
        tiles.add(new Tile(139, 115, 2, 2, 4));
        tiles.add(new Tile(139, 163, 3, 2, 1));
        tiles.add(new Tile(139, 96, 0, 1, 2));
        tiles.add(new Tile(139, 128, 1, 1, 4));
        tiles.add(new Tile(139, 158, 2, 1, 3));
        tiles.add(new Tile(139, 99, 3, 1, 3));
        tiles.add(new Tile(139, 123, 0, 0, 3));
        tiles.add(new Tile(139, 97, 1, 0, 3));
        tiles.add(new Tile(139, 108, 2, 0, 4));
        tiles.add(new Tile(139, 93, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_140_NAME", "Connecting Chain"));
        puzzles.add(new Puzzle(140, 6, 11187L, 15, 0L, 0));
        tiles.add(new Tile(140, 99, 0, 3, 2));
        tiles.add(new Tile(140, 128, 1, 3, 2));
        tiles.add(new Tile(140, 120, 2, 3, 3));
        tiles.add(new Tile(140, 160, 3, 3, 4));
        tiles.add(new Tile(140, 93, 0, 2, 2));
        tiles.add(new Tile(140, 159, 1, 2, 3));
        tiles.add(new Tile(140, 102, 2, 2, 2));
        tiles.add(new Tile(140, 103, 3, 2, 4));
        tiles.add(new Tile(140, 95, 0, 1, 3));
        tiles.add(new Tile(140, 159, 1, 1, 4));
        tiles.add(new Tile(140, 98, 2, 1, 1));
        tiles.add(new Tile(140, 99, 3, 1, 2));
        tiles.add(new Tile(140, 94, 0, 0, 1));
        tiles.add(new Tile(140, 108, 1, 0, 2));
        tiles.add(new Tile(140, 95, 2, 0, 3));
        tiles.add(new Tile(140, 93, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_141_NAME", "H Prong"));
        puzzles.add(new Puzzle(141, 6, 20628L, 33, 0L, 0));
        tiles.add(new Tile(141, 93, 0, 3, 1));
        tiles.add(new Tile(141, 96, 1, 3, 4));
        tiles.add(new Tile(141, 98, 2, 3, 2));
        tiles.add(new Tile(141, 120, 3, 3, 3));
        tiles.add(new Tile(141, 160, 4, 3, 1));
        tiles.add(new Tile(141, 95, 0, 2, 1));
        tiles.add(new Tile(141, 123, 1, 2, 3));
        tiles.add(new Tile(141, 99, 2, 2, 2));
        tiles.add(new Tile(141, 128, 3, 2, 1));
        tiles.add(new Tile(141, 159, 4, 2, 3));
        tiles.add(new Tile(141, 125, 0, 1, 4));
        tiles.add(new Tile(141, 118, 1, 1, 4));
        tiles.add(new Tile(141, 121, 2, 1, 4));
        tiles.add(new Tile(141, 100, 3, 1, 4));
        tiles.add(new Tile(141, 94, 4, 1, 2));
        tiles.add(new Tile(141, 161, 0, 0, 2));
        tiles.add(new Tile(141, 162, 1, 0, 1));
        tiles.add(new Tile(141, 96, 2, 0, 3));
        tiles.add(new Tile(141, 128, 3, 0, 2));
        tiles.add(new Tile(141, 96, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_142_NAME", "Path Maze"));
        puzzles.add(new Puzzle(142, 6, 28175L, 36, 0L, 0));
        tiles.add(new Tile(142, 123, 0, 4, 4));
        tiles.add(new Tile(142, 127, 1, 4, 2));
        tiles.add(new Tile(142, 120, 2, 4, 4));
        tiles.add(new Tile(142, 158, 3, 4, 4));
        tiles.add(new Tile(142, 158, 4, 4, 3));
        tiles.add(new Tile(142, 99, 5, 4, 2));
        tiles.add(new Tile(142, 101, 0, 3, 2));
        tiles.add(new Tile(142, 100, 1, 3, 3));
        tiles.add(new Tile(142, 162, 2, 3, 4));
        tiles.add(new Tile(142, 105, 3, 3, 3));
        tiles.add(new Tile(142, 103, 4, 3, 1));
        tiles.add(new Tile(142, 96, 5, 3, 4));
        tiles.add(new Tile(142, 97, 0, 2, 2));
        tiles.add(new Tile(142, 96, 1, 2, 3));
        tiles.add(new Tile(142, 101, 2, 2, 4));
        tiles.add(new Tile(142, 161, 3, 2, 3));
        tiles.add(new Tile(142, 97, 4, 2, 3));
        tiles.add(new Tile(142, 100, 5, 2, 3));
        tiles.add(new Tile(142, 95, 0, 1, 3));
        tiles.add(new Tile(142, 94, 1, 1, 4));
        tiles.add(new Tile(142, 123, 2, 1, 3));
        tiles.add(new Tile(142, 95, 3, 1, 4));
        tiles.add(new Tile(142, 97, 4, 1, 3));
        tiles.add(new Tile(142, 96, 5, 1, 2));
        tiles.add(new Tile(142, 97, 0, 0, 1));
        tiles.add(new Tile(142, 123, 1, 0, 1));
        tiles.add(new Tile(142, 97, 2, 0, 1));
        tiles.add(new Tile(142, 121, 3, 0, 3));
        tiles.add(new Tile(142, 101, 4, 0, 2));
        tiles.add(new Tile(142, 123, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_143_NAME", "More Highs And Lows"));
        puzzles.add(new Puzzle(143, 6, 36289L, 38, 0L, 0));
        tiles.add(new Tile(143, 166, 0, 5, 3));
        tiles.add(new Tile(143, 166, 1, 5, 4));
        tiles.add(new Tile(143, 164, 2, 5, 3));
        tiles.add(new Tile(143, 114, 3, 5, 2));
        tiles.add(new Tile(143, 117, 4, 5, 4));
        tiles.add(new Tile(143, 96, 5, 5, 3));
        tiles.add(new Tile(143, 111, 0, 4, 1));
        tiles.add(new Tile(143, 111, 1, 4, 4));
        tiles.add(new Tile(143, 126, 2, 4, 3));
        tiles.add(new Tile(143, 108, 3, 4, 3));
        tiles.add(new Tile(143, 110, 4, 4, 3));
        tiles.add(new Tile(143, 108, 5, 4, 3));
        tiles.add(new Tile(143, 103, 0, 3, 4));
        tiles.add(new Tile(143, 105, 1, 3, 3));
        tiles.add(new Tile(143, 112, 2, 3, 4));
        tiles.add(new Tile(143, 159, 3, 3, 3));
        tiles.add(new Tile(143, 107, 4, 3, 1));
        tiles.add(new Tile(143, 159, 5, 3, 3));
        tiles.add(new Tile(143, 94, 0, 2, 3));
        tiles.add(new Tile(143, 103, 1, 2, 2));
        tiles.add(new Tile(143, 157, 2, 2, 2));
        tiles.add(new Tile(143, 157, 3, 2, 1));
        tiles.add(new Tile(143, 110, 4, 2, 3));
        tiles.add(new Tile(143, 158, 5, 2, 4));
        tiles.add(new Tile(143, 163, 0, 1, 2));
        tiles.add(new Tile(143, 113, 1, 1, 4));
        tiles.add(new Tile(143, 115, 2, 1, 4));
        tiles.add(new Tile(143, 115, 3, 1, 1));
        tiles.add(new Tile(143, 119, 4, 1, 4));
        tiles.add(new Tile(143, 127, 5, 1, 4));
        tiles.add(new Tile(143, 93, 0, 0, 3));
        tiles.add(new Tile(143, 94, 1, 0, 1));
        tiles.add(new Tile(143, 123, 2, 0, 1));
        tiles.add(new Tile(143, 97, 3, 0, 4));
        tiles.add(new Tile(143, 96, 4, 0, 4));
        tiles.add(new Tile(143, 96, 5, 0, 1));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack7() {
        // Round Of Golf
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_146_NAME", "Hole 1"));
        puzzles.add(new Puzzle(146, 7, 7821L, 9, 0L, 0));
        tiles.add(new Tile(146, 151, 0, 2, 1));
        tiles.add(new Tile(146, 140, 1, 2, 1));
        tiles.add(new Tile(146, 154, 2, 2, 2));
        tiles.add(new Tile(146, 152, 3, 2, 3));
        tiles.add(new Tile(146, 141, 0, 1, 3));
        tiles.add(new Tile(146, 138, 1, 1, 2));
        tiles.add(new Tile(146, 143, 2, 1, 4));
        tiles.add(new Tile(146, 143, 3, 1, 4));
        tiles.add(new Tile(146, 151, 0, 0, 3));
        tiles.add(new Tile(146, 142, 1, 0, 1));
        tiles.add(new Tile(146, 148, 2, 0, 3));
        tiles.add(new Tile(146, 146, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_147_NAME", "Hole 2"));
        puzzles.add(new Puzzle(147, 7, 23347L, 21, 0L, 0));
        tiles.add(new Tile(147, 143, 0, 3, 2));
        tiles.add(new Tile(147, 152, 1, 3, 3));
        tiles.add(new Tile(147, 143, 2, 3, 3));
        tiles.add(new Tile(147, 152, 3, 3, 4));
        tiles.add(new Tile(147, 151, 0, 2, 2));
        tiles.add(new Tile(147, 144, 1, 2, 1));
        tiles.add(new Tile(147, 148, 2, 2, 1));
        tiles.add(new Tile(147, 152, 3, 2, 2));
        tiles.add(new Tile(147, 156, 0, 1, 1));
        tiles.add(new Tile(147, 156, 1, 1, 2));
        tiles.add(new Tile(147, 146, 2, 1, 4));
        tiles.add(new Tile(147, 152, 3, 1, 2));
        tiles.add(new Tile(147, 152, 0, 0, 4));
        tiles.add(new Tile(147, 154, 1, 0, 4));
        tiles.add(new Tile(147, 156, 2, 0, 2));
        tiles.add(new Tile(147, 151, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_148_NAME", "Hole 3"));
        puzzles.add(new Puzzle(148, 7, 7925L, 10, 0L, 0));
        tiles.add(new Tile(148, 146, 0, 2, 2));
        tiles.add(new Tile(148, 147, 1, 2, 4));
        tiles.add(new Tile(148, 142, 2, 2, 2));
        tiles.add(new Tile(148, 151, 3, 2, 1));
        tiles.add(new Tile(148, 138, 4, 2, 2));
        tiles.add(new Tile(148, 143, 0, 1, 1));
        tiles.add(new Tile(148, 141, 1, 1, 1));
        tiles.add(new Tile(148, 142, 2, 1, 3));
        tiles.add(new Tile(148, 144, 3, 1, 1));
        tiles.add(new Tile(148, 143, 4, 1, 3));
        tiles.add(new Tile(148, 138, 0, 0, 4));
        tiles.add(new Tile(148, 138, 1, 0, 1));
        tiles.add(new Tile(148, 138, 2, 0, 2));
        tiles.add(new Tile(148, 152, 3, 0, 2));
        tiles.add(new Tile(148, 143, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_149_NAME", "Hole 4"));
        puzzles.add(new Puzzle(149, 7, 31588L, 33, 0L, 0));
        tiles.add(new Tile(149, 152, 0, 5, 2));
        tiles.add(new Tile(149, 152, 1, 5, 4));
        tiles.add(new Tile(149, 143, 2, 5, 4));
        tiles.add(new Tile(149, 143, 3, 5, 2));
        tiles.add(new Tile(149, 143, 4, 5, 3));
        tiles.add(new Tile(149, 147, 0, 4, 3));
        tiles.add(new Tile(149, 142, 1, 4, 3));
        tiles.add(new Tile(149, 142, 2, 4, 3));
        tiles.add(new Tile(149, 155, 3, 4, 2));
        tiles.add(new Tile(149, 145, 4, 4, 3));
        tiles.add(new Tile(149, 155, 0, 3, 2));
        tiles.add(new Tile(149, 145, 1, 3, 2));
        tiles.add(new Tile(149, 151, 2, 3, 2));
        tiles.add(new Tile(149, 154, 3, 3, 3));
        tiles.add(new Tile(149, 145, 4, 3, 1));
        tiles.add(new Tile(149, 150, 0, 2, 1));
        tiles.add(new Tile(149, 147, 1, 2, 3));
        tiles.add(new Tile(149, 146, 2, 2, 1));
        tiles.add(new Tile(149, 144, 3, 2, 3));
        tiles.add(new Tile(149, 154, 4, 2, 4));
        tiles.add(new Tile(149, 141, 0, 1, 1));
        tiles.add(new Tile(149, 154, 1, 1, 3));
        tiles.add(new Tile(149, 147, 2, 1, 4));
        tiles.add(new Tile(149, 144, 3, 1, 3));
        tiles.add(new Tile(149, 152, 4, 1, 1));
        tiles.add(new Tile(149, 143, 0, 0, 3));
        tiles.add(new Tile(149, 143, 1, 0, 1));
        tiles.add(new Tile(149, 138, 2, 0, 2));
        tiles.add(new Tile(149, 152, 3, 0, 3));
        tiles.add(new Tile(149, 143, 4, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_150_NAME", "Hole 5"));
        puzzles.add(new Puzzle(150, 7, 24151L, 22, 0L, 0));
        tiles.add(new Tile(150, 138, 0, 3, 3));
        tiles.add(new Tile(150, 138, 1, 3, 4));
        tiles.add(new Tile(150, 152, 2, 3, 1));
        tiles.add(new Tile(150, 151, 3, 3, 1));
        tiles.add(new Tile(150, 143, 4, 3, 1));
        tiles.add(new Tile(150, 143, 0, 2, 3));
        tiles.add(new Tile(150, 147, 1, 2, 2));
        tiles.add(new Tile(150, 151, 2, 2, 3));
        tiles.add(new Tile(150, 152, 3, 2, 2));
        tiles.add(new Tile(150, 154, 4, 2, 4));
        tiles.add(new Tile(150, 138, 0, 1, 4));
        tiles.add(new Tile(150, 143, 1, 1, 2));
        tiles.add(new Tile(150, 145, 2, 1, 4));
        tiles.add(new Tile(150, 148, 3, 1, 4));
        tiles.add(new Tile(150, 154, 4, 1, 2));
        tiles.add(new Tile(150, 138, 0, 0, 3));
        tiles.add(new Tile(150, 146, 1, 0, 4));
        tiles.add(new Tile(150, 156, 2, 0, 3));
        tiles.add(new Tile(150, 140, 3, 0, 4));
        tiles.add(new Tile(150, 151, 4, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_151_NAME", "Hole 6"));
        puzzles.add(new Puzzle(151, 7, 11798L, 7, 0L, 0));
        tiles.add(new Tile(151, 138, 0, 1, 2));
        tiles.add(new Tile(151, 146, 1, 1, 1));
        tiles.add(new Tile(151, 150, 2, 1, 2));
        tiles.add(new Tile(151, 142, 3, 1, 1));
        tiles.add(new Tile(151, 142, 4, 1, 3));
        tiles.add(new Tile(151, 145, 5, 1, 4));
        tiles.add(new Tile(151, 147, 6, 1, 3));
        tiles.add(new Tile(151, 152, 7, 1, 3));
        tiles.add(new Tile(151, 138, 0, 0, 1));
        tiles.add(new Tile(151, 143, 1, 0, 3));
        tiles.add(new Tile(151, 155, 2, 0, 2));
        tiles.add(new Tile(151, 148, 3, 0, 2));
        tiles.add(new Tile(151, 141, 4, 0, 1));
        tiles.add(new Tile(151, 140, 5, 0, 2));
        tiles.add(new Tile(151, 142, 6, 0, 1));
        tiles.add(new Tile(151, 151, 7, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_152_NAME", "Hole 7"));
        puzzles.add(new Puzzle(152, 7, 24276L, 28, 0L, 0));
        tiles.add(new Tile(152, 138, 0, 4, 1));
        tiles.add(new Tile(152, 151, 1, 4, 2));
        tiles.add(new Tile(152, 154, 2, 4, 3));
        tiles.add(new Tile(152, 147, 3, 4, 2));
        tiles.add(new Tile(152, 151, 4, 4, 1));
        tiles.add(new Tile(152, 138, 0, 3, 1));
        tiles.add(new Tile(152, 155, 1, 3, 2));
        tiles.add(new Tile(152, 151, 2, 3, 1));
        tiles.add(new Tile(152, 151, 3, 3, 1));
        tiles.add(new Tile(152, 145, 4, 3, 4));
        tiles.add(new Tile(152, 138, 0, 2, 3));
        tiles.add(new Tile(152, 143, 1, 2, 1));
        tiles.add(new Tile(152, 138, 2, 2, 4));
        tiles.add(new Tile(152, 151, 3, 2, 2));
        tiles.add(new Tile(152, 154, 4, 2, 1));
        tiles.add(new Tile(152, 152, 0, 1, 1));
        tiles.add(new Tile(152, 153, 1, 1, 1));
        tiles.add(new Tile(152, 142, 2, 1, 4));
        tiles.add(new Tile(152, 150, 3, 1, 2));
        tiles.add(new Tile(152, 154, 4, 1, 3));
        tiles.add(new Tile(152, 146, 0, 0, 4));
        tiles.add(new Tile(152, 143, 1, 0, 3));
        tiles.add(new Tile(152, 156, 2, 0, 1));
        tiles.add(new Tile(152, 141, 3, 0, 4));
        tiles.add(new Tile(152, 151, 4, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_153_NAME", "Hole 8"));
        puzzles.add(new Puzzle(153, 7, 14839L, 22, 0L, 0));
        tiles.add(new Tile(153, 143, 0, 4, 3));
        tiles.add(new Tile(153, 154, 1, 4, 3));
        tiles.add(new Tile(153, 142, 2, 4, 3));
        tiles.add(new Tile(153, 143, 3, 4, 1));
        tiles.add(new Tile(153, 138, 0, 3, 2));
        tiles.add(new Tile(153, 151, 1, 3, 4));
        tiles.add(new Tile(153, 149, 2, 3, 2));
        tiles.add(new Tile(153, 152, 3, 3, 3));
        tiles.add(new Tile(153, 151, 0, 2, 1));
        tiles.add(new Tile(153, 142, 1, 2, 1));
        tiles.add(new Tile(153, 140, 2, 2, 2));
        tiles.add(new Tile(153, 152, 3, 2, 4));
        tiles.add(new Tile(153, 150, 0, 1, 1));
        tiles.add(new Tile(153, 146, 1, 1, 4));
        tiles.add(new Tile(153, 139, 2, 1, 3));
        tiles.add(new Tile(153, 151, 3, 1, 4));
        tiles.add(new Tile(153, 152, 0, 0, 4));
        tiles.add(new Tile(153, 149, 1, 0, 3));
        tiles.add(new Tile(153, 142, 2, 0, 3));
        tiles.add(new Tile(153, 151, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_154_NAME", "Hole 9"));
        puzzles.add(new Puzzle(154, 7, 7531L, 10, 0L, 0));
        tiles.add(new Tile(154, 138, 0, 2, 2));
        tiles.add(new Tile(154, 146, 1, 2, 4));
        tiles.add(new Tile(154, 151, 2, 2, 1));
        tiles.add(new Tile(154, 151, 3, 2, 4));
        tiles.add(new Tile(154, 138, 0, 1, 2));
        tiles.add(new Tile(154, 151, 1, 1, 1));
        tiles.add(new Tile(154, 154, 2, 1, 4));
        tiles.add(new Tile(154, 154, 3, 1, 3));
        tiles.add(new Tile(154, 143, 0, 0, 1));
        tiles.add(new Tile(154, 141, 1, 0, 1));
        tiles.add(new Tile(154, 141, 2, 0, 3));
        tiles.add(new Tile(154, 151, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_155_NAME", "Hole 10"));
        puzzles.add(new Puzzle(155, 7, 15674L, 7, 0L, 0));
        tiles.add(new Tile(155, 146, 0, 4, 1));
        tiles.add(new Tile(155, 152, 1, 4, 1));
        tiles.add(new Tile(155, 151, 2, 4, 2));
        tiles.add(new Tile(155, 147, 0, 3, 3));
        tiles.add(new Tile(155, 156, 1, 3, 3));
        tiles.add(new Tile(155, 145, 2, 3, 1));
        tiles.add(new Tile(155, 151, 0, 2, 1));
        tiles.add(new Tile(155, 154, 1, 2, 1));
        tiles.add(new Tile(155, 146, 2, 2, 4));
        tiles.add(new Tile(155, 138, 0, 1, 3));
        tiles.add(new Tile(155, 142, 1, 1, 4));
        tiles.add(new Tile(155, 138, 2, 1, 4));
        tiles.add(new Tile(155, 138, 0, 0, 3));
        tiles.add(new Tile(155, 151, 1, 0, 1));
        tiles.add(new Tile(155, 143, 2, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_156_NAME", "Hole 11"));
        puzzles.add(new Puzzle(156, 7, 12912L, 14, 0L, 0));
        tiles.add(new Tile(156, 152, 0, 2, 2));
        tiles.add(new Tile(156, 152, 1, 2, 1));
        tiles.add(new Tile(156, 146, 2, 2, 2));
        tiles.add(new Tile(156, 151, 3, 2, 1));
        tiles.add(new Tile(156, 142, 0, 1, 2));
        tiles.add(new Tile(156, 139, 1, 1, 2));
        tiles.add(new Tile(156, 138, 2, 1, 2));
        tiles.add(new Tile(156, 149, 3, 1, 2));
        tiles.add(new Tile(156, 143, 0, 0, 4));
        tiles.add(new Tile(156, 151, 1, 0, 3));
        tiles.add(new Tile(156, 150, 2, 0, 3));
        tiles.add(new Tile(156, 151, 3, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_157_NAME", "Hole 12"));
        puzzles.add(new Puzzle(157, 7, 5419L, 6, 0L, 0));
        tiles.add(new Tile(157, 143, 0, 0, 4));
        tiles.add(new Tile(157, 141, 1, 0, 1));
        tiles.add(new Tile(157, 153, 2, 0, 3));
        tiles.add(new Tile(157, 148, 3, 0, 1));
        tiles.add(new Tile(157, 149, 4, 0, 4));
        tiles.add(new Tile(157, 139, 5, 0, 1));
        tiles.add(new Tile(157, 146, 6, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_158_NAME", "Hole 13"));
        puzzles.add(new Puzzle(158, 7, 12271L, 9, 0L, 0));
        tiles.add(new Tile(158, 138, 0, 3, 1));
        tiles.add(new Tile(158, 152, 1, 3, 1));
        tiles.add(new Tile(158, 156, 2, 3, 4));
        tiles.add(new Tile(158, 146, 3, 3, 1));
        tiles.add(new Tile(158, 138, 0, 2, 1));
        tiles.add(new Tile(158, 153, 1, 2, 4));
        tiles.add(new Tile(158, 152, 2, 2, 2));
        tiles.add(new Tile(158, 151, 3, 2, 3));
        tiles.add(new Tile(158, 143, 0, 1, 2));
        tiles.add(new Tile(158, 144, 1, 1, 1));
        tiles.add(new Tile(158, 144, 2, 1, 1));
        tiles.add(new Tile(158, 151, 3, 1, 3));
        tiles.add(new Tile(158, 138, 0, 0, 1));
        tiles.add(new Tile(158, 143, 1, 0, 3));
        tiles.add(new Tile(158, 143, 2, 0, 4));
        tiles.add(new Tile(158, 138, 3, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_159_NAME", "Hole 14"));
        puzzles.add(new Puzzle(159, 7, 9323L, 12, 0L, 0));
        tiles.add(new Tile(159, 151, 0, 3, 3));
        tiles.add(new Tile(159, 149, 1, 3, 1));
        tiles.add(new Tile(159, 155, 2, 3, 1));
        tiles.add(new Tile(159, 143, 3, 3, 3));
        tiles.add(new Tile(159, 154, 0, 2, 1));
        tiles.add(new Tile(159, 142, 1, 2, 2));
        tiles.add(new Tile(159, 152, 2, 2, 3));
        tiles.add(new Tile(159, 138, 3, 2, 4));
        tiles.add(new Tile(159, 155, 0, 1, 3));
        tiles.add(new Tile(159, 138, 1, 1, 1));
        tiles.add(new Tile(159, 151, 2, 1, 2));
        tiles.add(new Tile(159, 146, 3, 1, 2));
        tiles.add(new Tile(159, 151, 0, 0, 1));
        tiles.add(new Tile(159, 147, 1, 0, 3));
        tiles.add(new Tile(159, 147, 2, 0, 3));
        tiles.add(new Tile(159, 143, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_160_NAME", "Hole 15"));
        puzzles.add(new Puzzle(160, 7, 14331L, 18, 0L, 0));
        tiles.add(new Tile(160, 138, 0, 3, 3));
        tiles.add(new Tile(160, 146, 1, 3, 1));
        tiles.add(new Tile(160, 151, 2, 3, 3));
        tiles.add(new Tile(160, 143, 3, 3, 2));
        tiles.add(new Tile(160, 138, 0, 2, 1));
        tiles.add(new Tile(160, 149, 1, 2, 1));
        tiles.add(new Tile(160, 149, 2, 2, 2));
        tiles.add(new Tile(160, 138, 3, 2, 1));
        tiles.add(new Tile(160, 138, 0, 1, 4));
        tiles.add(new Tile(160, 156, 1, 1, 4));
        tiles.add(new Tile(160, 151, 2, 1, 3));
        tiles.add(new Tile(160, 151, 3, 1, 4));
        tiles.add(new Tile(160, 143, 0, 0, 4));
        tiles.add(new Tile(160, 154, 1, 0, 2));
        tiles.add(new Tile(160, 142, 2, 0, 1));
        tiles.add(new Tile(160, 151, 3, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_161_NAME", "Hole 16"));
        puzzles.add(new Puzzle(161, 7, 18629L, 19, 0L, 0));
        tiles.add(new Tile(161, 146, 0, 3, 3));
        tiles.add(new Tile(161, 143, 1, 3, 1));
        tiles.add(new Tile(161, 151, 2, 3, 2));
        tiles.add(new Tile(161, 154, 3, 3, 2));
        tiles.add(new Tile(161, 151, 4, 3, 2));
        tiles.add(new Tile(161, 147, 0, 2, 2));
        tiles.add(new Tile(161, 149, 1, 2, 3));
        tiles.add(new Tile(161, 145, 2, 2, 3));
        tiles.add(new Tile(161, 143, 3, 2, 3));
        tiles.add(new Tile(161, 143, 4, 2, 2));
        tiles.add(new Tile(161, 150, 0, 1, 3));
        tiles.add(new Tile(161, 155, 1, 1, 3));
        tiles.add(new Tile(161, 152, 2, 1, 2));
        tiles.add(new Tile(161, 141, 3, 1, 4));
        tiles.add(new Tile(161, 151, 4, 1, 2));
        tiles.add(new Tile(161, 152, 0, 0, 1));
        tiles.add(new Tile(161, 154, 1, 0, 1));
        tiles.add(new Tile(161, 141, 2, 0, 3));
        tiles.add(new Tile(161, 140, 3, 0, 1));
        tiles.add(new Tile(161, 151, 4, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_162_NAME", "Hole 17"));
        puzzles.add(new Puzzle(162, 7, 13067L, 14, 0L, 0));
        tiles.add(new Tile(162, 152, 0, 6, 4));
        tiles.add(new Tile(162, 143, 1, 6, 3));
        tiles.add(new Tile(162, 147, 0, 5, 2));
        tiles.add(new Tile(162, 138, 1, 5, 3));
        tiles.add(new Tile(162, 154, 0, 4, 3));
        tiles.add(new Tile(162, 151, 1, 4, 1));
        tiles.add(new Tile(162, 145, 0, 3, 3));
        tiles.add(new Tile(162, 142, 1, 3, 1));
        tiles.add(new Tile(162, 150, 0, 2, 4));
        tiles.add(new Tile(162, 156, 1, 2, 2));
        tiles.add(new Tile(162, 150, 0, 1, 4));
        tiles.add(new Tile(162, 146, 1, 1, 4));
        tiles.add(new Tile(162, 143, 0, 0, 4));
        tiles.add(new Tile(162, 138, 1, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_163_NAME", "Hole 18"));
        puzzles.add(new Puzzle(163, 7, 17816L, 19, 0L, 0));
        tiles.add(new Tile(163, 138, 0, 4, 3));
        tiles.add(new Tile(163, 138, 1, 4, 2));
        tiles.add(new Tile(163, 151, 2, 4, 2));
        tiles.add(new Tile(163, 140, 3, 4, 4));
        tiles.add(new Tile(163, 151, 4, 4, 1));
        tiles.add(new Tile(163, 143, 0, 3, 2));
        tiles.add(new Tile(163, 138, 1, 3, 4));
        tiles.add(new Tile(163, 151, 2, 3, 1));
        tiles.add(new Tile(163, 146, 3, 3, 1));
        tiles.add(new Tile(163, 150, 4, 3, 1));
        tiles.add(new Tile(163, 149, 0, 2, 1));
        tiles.add(new Tile(163, 138, 1, 2, 3));
        tiles.add(new Tile(163, 138, 2, 2, 3));
        tiles.add(new Tile(163, 143, 3, 2, 3));
        tiles.add(new Tile(163, 154, 4, 2, 4));
        tiles.add(new Tile(163, 152, 0, 1, 2));
        tiles.add(new Tile(163, 145, 1, 1, 2));
        tiles.add(new Tile(163, 153, 2, 1, 4));
        tiles.add(new Tile(163, 148, 3, 1, 3));
        tiles.add(new Tile(163, 154, 4, 1, 4));
        tiles.add(new Tile(163, 138, 0, 0, 3));
        tiles.add(new Tile(163, 143, 1, 0, 2));
        tiles.add(new Tile(163, 147, 2, 0, 4));
        tiles.add(new Tile(163, 156, 3, 0, 2));
        tiles.add(new Tile(163, 152, 4, 0, 4));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createPuzzlesPack8() {
        List<Puzzle> puzzles = new ArrayList<>();
        List<Text> texts = new ArrayList<>();
        List<Tile> tiles = new ArrayList<>();

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_164_NAME", "Ups And Downs"));
        puzzles.add(new Puzzle(164, 7, 24222L, 25, 0L, 0));
        tiles.add(new Tile(164, 34, 0, 5, 4));
        tiles.add(new Tile(164, 44, 1, 5, 1));
        tiles.add(new Tile(164, 3, 2, 5, 1));
        tiles.add(new Tile(164, 79, 3, 5, 2));
        tiles.add(new Tile(164, 37, 4, 5, 4));
        tiles.add(new Tile(164, 36, 5, 5, 2));
        tiles.add(new Tile(164, 34, 0, 4, 3));
        tiles.add(new Tile(164, 42, 1, 4, 4));
        tiles.add(new Tile(164, 79, 2, 4, 1));
        tiles.add(new Tile(164, 79, 3, 4, 2));
        tiles.add(new Tile(164, 42, 4, 4, 1));
        tiles.add(new Tile(164, 12, 5, 4, 4));
        tiles.add(new Tile(164, 6, 0, 3, 4));
        tiles.add(new Tile(164, 5, 1, 3, 3));
        tiles.add(new Tile(164, 5, 2, 3, 4));
        tiles.add(new Tile(164, 10, 3, 3, 3));
        tiles.add(new Tile(164, 1, 4, 3, 4));
        tiles.add(new Tile(164, 44, 5, 3, 1));
        tiles.add(new Tile(164, 43, 0, 2, 4));
        tiles.add(new Tile(164, 172, 1, 2, 1));
        tiles.add(new Tile(164, 11, 2, 2, 2));
        tiles.add(new Tile(164, 44, 3, 2, 4));
        tiles.add(new Tile(164, 35, 4, 2, 4));
        tiles.add(new Tile(164, 184, 5, 2, 3));
        tiles.add(new Tile(164, 6, 0, 1, 4));
        tiles.add(new Tile(164, 10, 1, 1, 2));
        tiles.add(new Tile(164, 11, 2, 1, 3));
        tiles.add(new Tile(164, 6, 3, 1, 1));
        tiles.add(new Tile(164, 45, 4, 1, 2));
        tiles.add(new Tile(164, 33, 5, 1, 1));
        tiles.add(new Tile(164, 6, 0, 0, 2));
        tiles.add(new Tile(164, 1, 1, 0, 3));
        tiles.add(new Tile(164, 5, 2, 0, 3));
        tiles.add(new Tile(164, 172, 3, 0, 2));
        tiles.add(new Tile(164, 10, 4, 0, 4));
        tiles.add(new Tile(164, 42, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_165_NAME", "Shopping District"));
        puzzles.add(new Puzzle(165, 7, 21154L, 23, 0L, 0));
        tiles.add(new Tile(165, 136, 0, 5, 2));
        tiles.add(new Tile(165, 18, 1, 5, 3));
        tiles.add(new Tile(165, 135, 2, 5, 3));
        tiles.add(new Tile(165, 15, 3, 5, 4));
        tiles.add(new Tile(165, 18, 4, 5, 3));
        tiles.add(new Tile(165, 131, 5, 5, 3));
        tiles.add(new Tile(165, 38, 0, 4, 3));
        tiles.add(new Tile(165, 14, 1, 4, 2));
        tiles.add(new Tile(165, 15, 2, 4, 2));
        tiles.add(new Tile(165, 80, 3, 4, 4));
        tiles.add(new Tile(165, 170, 4, 4, 1));
        tiles.add(new Tile(165, 21, 5, 4, 2));
        tiles.add(new Tile(165, 136, 0, 3, 2));
        tiles.add(new Tile(165, 167, 1, 3, 4));
        tiles.add(new Tile(165, 50, 2, 3, 2));
        tiles.add(new Tile(165, 40, 3, 3, 3));
        tiles.add(new Tile(165, 40, 4, 3, 4));
        tiles.add(new Tile(165, 41, 5, 3, 4));
        tiles.add(new Tile(165, 32, 0, 2, 4));
        tiles.add(new Tile(165, 13, 1, 2, 4));
        tiles.add(new Tile(165, 40, 2, 2, 2));
        tiles.add(new Tile(165, 32, 3, 2, 4));
        tiles.add(new Tile(165, 30, 4, 2, 1));
        tiles.add(new Tile(165, 170, 5, 2, 1));
        tiles.add(new Tile(165, 169, 0, 1, 1));
        tiles.add(new Tile(165, 171, 1, 1, 4));
        tiles.add(new Tile(165, 40, 2, 1, 1));
        tiles.add(new Tile(165, 51, 3, 1, 4));
        tiles.add(new Tile(165, 133, 4, 1, 3));
        tiles.add(new Tile(165, 46, 5, 1, 2));
        tiles.add(new Tile(165, 168, 0, 0, 4));
        tiles.add(new Tile(165, 21, 1, 0, 2));
        tiles.add(new Tile(165, 41, 2, 0, 2));
        tiles.add(new Tile(165, 46, 3, 0, 4));
        tiles.add(new Tile(165, 29, 4, 0, 1));
        tiles.add(new Tile(165, 51, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_166_NAME", "Variety"));
        puzzles.add(new Puzzle(166, 7, 29890L, 32, 0L, 0));
        tiles.add(new Tile(166, 162, 0, 5, 4));
        tiles.add(new Tile(166, 159, 1, 5, 2));
        tiles.add(new Tile(166, 94, 2, 5, 2));
        tiles.add(new Tile(166, 95, 3, 5, 4));
        tiles.add(new Tile(166, 164, 4, 5, 2));
        tiles.add(new Tile(166, 163, 5, 5, 3));
        tiles.add(new Tile(166, 123, 0, 4, 3));
        tiles.add(new Tile(166, 98, 1, 4, 2));
        tiles.add(new Tile(166, 166, 2, 4, 4));
        tiles.add(new Tile(166, 166, 3, 4, 2));
        tiles.add(new Tile(166, 164, 4, 4, 4));
        tiles.add(new Tile(166, 163, 5, 4, 3));
        tiles.add(new Tile(166, 159, 0, 3, 2));
        tiles.add(new Tile(166, 122, 1, 3, 2));
        tiles.add(new Tile(166, 99, 2, 3, 2));
        tiles.add(new Tile(166, 166, 3, 3, 1));
        tiles.add(new Tile(166, 111, 4, 3, 1));
        tiles.add(new Tile(166, 108, 5, 3, 2));
        tiles.add(new Tile(166, 107, 0, 2, 2));
        tiles.add(new Tile(166, 158, 1, 2, 4));
        tiles.add(new Tile(166, 97, 2, 2, 4));
        tiles.add(new Tile(166, 121, 3, 2, 2));
        tiles.add(new Tile(166, 121, 4, 2, 4));
        tiles.add(new Tile(166, 123, 5, 2, 2));
        tiles.add(new Tile(166, 160, 0, 1, 1));
        tiles.add(new Tile(166, 127, 1, 1, 2));
        tiles.add(new Tile(166, 163, 2, 1, 4));
        tiles.add(new Tile(166, 115, 3, 1, 4));
        tiles.add(new Tile(166, 163, 4, 1, 1));
        tiles.add(new Tile(166, 94, 5, 1, 4));
        tiles.add(new Tile(166, 108, 0, 0, 1));
        tiles.add(new Tile(166, 108, 1, 0, 3));
        tiles.add(new Tile(166, 99, 2, 0, 3));
        tiles.add(new Tile(166, 117, 3, 0, 2));
        tiles.add(new Tile(166, 119, 4, 0, 4));
        tiles.add(new Tile(166, 96, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_167_NAME", "Wrong Turning"));
        puzzles.add(new Puzzle(167, 7, 39186L, 24, 0L, 0));
        tiles.add(new Tile(167, 152, 0, 5, 1));
        tiles.add(new Tile(167, 152, 1, 5, 3));
        tiles.add(new Tile(167, 152, 2, 5, 2));
        tiles.add(new Tile(167, 154, 3, 5, 2));
        tiles.add(new Tile(167, 154, 4, 5, 3));
        tiles.add(new Tile(167, 143, 5, 5, 2));
        tiles.add(new Tile(167, 140, 0, 4, 3));
        tiles.add(new Tile(167, 153, 1, 4, 2));
        tiles.add(new Tile(167, 149, 2, 4, 3));
        tiles.add(new Tile(167, 152, 3, 4, 1));
        tiles.add(new Tile(167, 144, 4, 4, 1));
        tiles.add(new Tile(167, 152, 5, 4, 1));
        tiles.add(new Tile(167, 141, 0, 3, 3));
        tiles.add(new Tile(167, 142, 1, 3, 2));
        tiles.add(new Tile(167, 143, 2, 3, 3));
        tiles.add(new Tile(167, 138, 3, 3, 4));
        tiles.add(new Tile(167, 156, 4, 3, 3));
        tiles.add(new Tile(167, 155, 5, 3, 3));
        tiles.add(new Tile(167, 153, 0, 2, 1));
        tiles.add(new Tile(167, 147, 1, 2, 1));
        tiles.add(new Tile(167, 138, 2, 2, 3));
        tiles.add(new Tile(167, 138, 3, 2, 1));
        tiles.add(new Tile(167, 152, 4, 2, 2));
        tiles.add(new Tile(167, 154, 5, 2, 2));
        tiles.add(new Tile(167, 146, 0, 1, 4));
        tiles.add(new Tile(167, 152, 1, 1, 2));
        tiles.add(new Tile(167, 140, 2, 1, 1));
        tiles.add(new Tile(167, 149, 3, 1, 2));
        tiles.add(new Tile(167, 156, 4, 1, 2));
        tiles.add(new Tile(167, 154, 5, 1, 4));
        tiles.add(new Tile(167, 138, 0, 0, 1));
        tiles.add(new Tile(167, 143, 1, 0, 3));
        tiles.add(new Tile(167, 155, 2, 0, 2));
        tiles.add(new Tile(167, 147, 3, 0, 2));
        tiles.add(new Tile(167, 142, 4, 0, 4));
        tiles.add(new Tile(167, 151, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_168_NAME", "Little Worms"));
        puzzles.add(new Puzzle(168, 7, 28992L, 33, 0L, 0));
        tiles.add(new Tile(168, 71, 0, 5, 3));
        tiles.add(new Tile(168, 84, 1, 5, 1));
        tiles.add(new Tile(168, 70, 2, 5, 1));
        tiles.add(new Tile(168, 64, 3, 5, 4));
        tiles.add(new Tile(168, 67, 4, 5, 4));
        tiles.add(new Tile(168, 74, 5, 5, 4));
        tiles.add(new Tile(168, 72, 0, 4, 2));
        tiles.add(new Tile(168, 70, 1, 4, 2));
        tiles.add(new Tile(168, 83, 2, 4, 2));
        tiles.add(new Tile(168, 73, 3, 4, 1));
        tiles.add(new Tile(168, 65, 4, 4, 2));
        tiles.add(new Tile(168, 71, 5, 4, 2));
        tiles.add(new Tile(168, 71, 0, 3, 1));
        tiles.add(new Tile(168, 65, 1, 3, 1));
        tiles.add(new Tile(168, 84, 2, 3, 3));
        tiles.add(new Tile(168, 70, 3, 3, 2));
        tiles.add(new Tile(168, 67, 4, 3, 2));
        tiles.add(new Tile(168, 75, 5, 3, 4));
        tiles.add(new Tile(168, 75, 0, 2, 1));
        tiles.add(new Tile(168, 67, 1, 2, 3));
        tiles.add(new Tile(168, 83, 2, 2, 3));
        tiles.add(new Tile(168, 74, 3, 2, 3));
        tiles.add(new Tile(168, 72, 4, 2, 4));
        tiles.add(new Tile(168, 70, 5, 2, 3));
        tiles.add(new Tile(168, 73, 0, 1, 1));
        tiles.add(new Tile(168, 69, 1, 1, 1));
        tiles.add(new Tile(168, 70, 2, 1, 4));
        tiles.add(new Tile(168, 74, 3, 1, 3));
        tiles.add(new Tile(168, 74, 4, 1, 1));
        tiles.add(new Tile(168, 70, 5, 1, 4));
        tiles.add(new Tile(168, 76, 0, 0, 2));
        tiles.add(new Tile(168, 76, 1, 0, 2));
        tiles.add(new Tile(168, 62, 2, 0, 2));
        tiles.add(new Tile(168, 64, 3, 0, 1));
        tiles.add(new Tile(168, 64, 4, 0, 4));
        tiles.add(new Tile(168, 62, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_169_NAME", "Cluttered Shopping"));
        puzzles.add(new Puzzle(169, 7, 28184L, 30, 0L, 0));
        tiles.add(new Tile(169, 18, 0, 5, 3));
        tiles.add(new Tile(169, 15, 1, 5, 1));
        tiles.add(new Tile(169, 78, 2, 5, 3));
        tiles.add(new Tile(169, 80, 3, 5, 1));
        tiles.add(new Tile(169, 21, 4, 5, 2));
        tiles.add(new Tile(169, 26, 5, 5, 2));
        tiles.add(new Tile(169, 26, 0, 4, 1));
        tiles.add(new Tile(169, 28, 1, 4, 3));
        tiles.add(new Tile(169, 27, 2, 4, 3));
        tiles.add(new Tile(169, 27, 3, 4, 3));
        tiles.add(new Tile(169, 28, 4, 4, 1));
        tiles.add(new Tile(169, 49, 5, 4, 2));
        tiles.add(new Tile(169, 170, 0, 3, 4));
        tiles.add(new Tile(169, 23, 1, 3, 3));
        tiles.add(new Tile(169, 51, 2, 3, 2));
        tiles.add(new Tile(169, 169, 3, 3, 1));
        tiles.add(new Tile(169, 168, 4, 3, 1));
        tiles.add(new Tile(169, 168, 5, 3, 3));
        tiles.add(new Tile(169, 136, 0, 2, 2));
        tiles.add(new Tile(169, 59, 1, 2, 2));
        tiles.add(new Tile(169, 80, 2, 2, 1));
        tiles.add(new Tile(169, 18, 3, 2, 4));
        tiles.add(new Tile(169, 80, 4, 2, 3));
        tiles.add(new Tile(169, 169, 5, 2, 2));
        tiles.add(new Tile(169, 171, 0, 1, 4));
        tiles.add(new Tile(169, 80, 1, 1, 2));
        tiles.add(new Tile(169, 26, 2, 1, 3));
        tiles.add(new Tile(169, 168, 3, 1, 3));
        tiles.add(new Tile(169, 21, 4, 1, 3));
        tiles.add(new Tile(169, 31, 5, 1, 2));
        tiles.add(new Tile(169, 137, 0, 0, 2));
        tiles.add(new Tile(169, 137, 1, 0, 4));
        tiles.add(new Tile(169, 26, 2, 0, 2));
        tiles.add(new Tile(169, 30, 3, 0, 1));
        tiles.add(new Tile(169, 30, 4, 0, 1));
        tiles.add(new Tile(169, 171, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_170_NAME", "Interwoven"));
        puzzles.add(new Puzzle(170, 7, 31178L, 42, 0L, 0));
        tiles.add(new Tile(170, 184, 0, 5, 1));
        tiles.add(new Tile(170, 35, 1, 5, 1));
        tiles.add(new Tile(170, 35, 2, 5, 4));
        tiles.add(new Tile(170, 33, 3, 5, 3));
        tiles.add(new Tile(170, 10, 4, 5, 4));
        tiles.add(new Tile(170, 42, 5, 5, 2));
        tiles.add(new Tile(170, 8, 0, 4, 3));
        tiles.add(new Tile(170, 35, 1, 4, 4));
        tiles.add(new Tile(170, 43, 2, 4, 3));
        tiles.add(new Tile(170, 8, 3, 4, 3));
        tiles.add(new Tile(170, 35, 4, 4, 4));
        tiles.add(new Tile(170, 33, 5, 4, 1));
        tiles.add(new Tile(170, 3, 0, 3, 2));
        tiles.add(new Tile(170, 1, 1, 3, 2));
        tiles.add(new Tile(170, 44, 2, 3, 1));
        tiles.add(new Tile(170, 9, 3, 3, 2));
        tiles.add(new Tile(170, 8, 4, 3, 2));
        tiles.add(new Tile(170, 184, 5, 3, 2));
        tiles.add(new Tile(170, 8, 0, 2, 2));
        tiles.add(new Tile(170, 7, 1, 2, 4));
        tiles.add(new Tile(170, 35, 2, 2, 3));
        tiles.add(new Tile(170, 33, 3, 2, 3));
        tiles.add(new Tile(170, 182, 4, 2, 4));
        tiles.add(new Tile(170, 35, 5, 2, 4));
        tiles.add(new Tile(170, 35, 0, 1, 3));
        tiles.add(new Tile(170, 3, 1, 1, 4));
        tiles.add(new Tile(170, 6, 2, 1, 3));
        tiles.add(new Tile(170, 42, 3, 1, 4));
        tiles.add(new Tile(170, 7, 4, 1, 3));
        tiles.add(new Tile(170, 3, 5, 1, 3));
        tiles.add(new Tile(170, 44, 0, 0, 1));
        tiles.add(new Tile(170, 43, 1, 0, 3));
        tiles.add(new Tile(170, 6, 2, 0, 4));
        tiles.add(new Tile(170, 45, 3, 0, 4));
        tiles.add(new Tile(170, 8, 4, 0, 1));
        tiles.add(new Tile(170, 35, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_171_NAME", "Water Traces"));
        puzzles.add(new Puzzle(171, 7, 14545L, 23, 0L, 0));
        tiles.add(new Tile(171, 60, 0, 5, 2));
        tiles.add(new Tile(171, 61, 1, 5, 2));
        tiles.add(new Tile(171, 61, 2, 5, 4));
        tiles.add(new Tile(171, 61, 3, 5, 3));
        tiles.add(new Tile(171, 61, 4, 5, 4));
        tiles.add(new Tile(171, 76, 5, 5, 4));
        tiles.add(new Tile(171, 76, 0, 4, 2));
        tiles.add(new Tile(171, 72, 1, 4, 2));
        tiles.add(new Tile(171, 71, 2, 4, 3));
        tiles.add(new Tile(171, 71, 3, 4, 3));
        tiles.add(new Tile(171, 83, 4, 4, 2));
        tiles.add(new Tile(171, 74, 5, 4, 2));
        tiles.add(new Tile(171, 71, 0, 3, 2));
        tiles.add(new Tile(171, 72, 1, 3, 4));
        tiles.add(new Tile(171, 83, 2, 3, 2));
        tiles.add(new Tile(171, 63, 3, 3, 1));
        tiles.add(new Tile(171, 84, 4, 3, 1));
        tiles.add(new Tile(171, 73, 5, 3, 1));
        tiles.add(new Tile(171, 69, 0, 2, 3));
        tiles.add(new Tile(171, 73, 1, 2, 3));
        tiles.add(new Tile(171, 76, 2, 2, 4));
        tiles.add(new Tile(171, 69, 3, 2, 4));
        tiles.add(new Tile(171, 76, 4, 2, 1));
        tiles.add(new Tile(171, 76, 5, 2, 1));
        tiles.add(new Tile(171, 72, 0, 1, 2));
        tiles.add(new Tile(171, 71, 1, 1, 4));
        tiles.add(new Tile(171, 76, 2, 1, 2));
        tiles.add(new Tile(171, 73, 3, 1, 4));
        tiles.add(new Tile(171, 69, 4, 1, 2));
        tiles.add(new Tile(171, 73, 5, 1, 3));
        tiles.add(new Tile(171, 73, 0, 0, 3));
        tiles.add(new Tile(171, 71, 1, 0, 1));
        tiles.add(new Tile(171, 76, 2, 0, 3));
        tiles.add(new Tile(171, 61, 3, 0, 1));
        tiles.add(new Tile(171, 76, 4, 0, 2));
        tiles.add(new Tile(171, 69, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_172_NAME", "Upper Path"));
        puzzles.add(new Puzzle(172, 7, 30252L, 40, 0L, 0));
        tiles.add(new Tile(172, 85, 0, 5, 4));
        tiles.add(new Tile(172, 48, 1, 5, 2));
        tiles.add(new Tile(172, 85, 2, 5, 3));
        tiles.add(new Tile(172, 58, 3, 5, 1));
        tiles.add(new Tile(172, 77, 4, 5, 2));
        tiles.add(new Tile(172, 38, 5, 5, 3));
        tiles.add(new Tile(172, 48, 0, 4, 3));
        tiles.add(new Tile(172, 48, 1, 4, 2));
        tiles.add(new Tile(172, 169, 2, 4, 4));
        tiles.add(new Tile(172, 15, 3, 4, 4));
        tiles.add(new Tile(172, 41, 4, 4, 3));
        tiles.add(new Tile(172, 41, 5, 4, 1));
        tiles.add(new Tile(172, 171, 0, 3, 1));
        tiles.add(new Tile(172, 170, 1, 3, 4));
        tiles.add(new Tile(172, 19, 2, 3, 4));
        tiles.add(new Tile(172, 56, 3, 3, 4));
        tiles.add(new Tile(172, 40, 4, 3, 1));
        tiles.add(new Tile(172, 40, 5, 3, 1));
        tiles.add(new Tile(172, 24, 0, 2, 3));
        tiles.add(new Tile(172, 13, 1, 2, 1));
        tiles.add(new Tile(172, 78, 2, 2, 1));
        tiles.add(new Tile(172, 31, 3, 2, 4));
        tiles.add(new Tile(172, 50, 4, 2, 1));
        tiles.add(new Tile(172, 50, 5, 2, 2));
        tiles.add(new Tile(172, 130, 0, 1, 4));
        tiles.add(new Tile(172, 23, 1, 1, 1));
        tiles.add(new Tile(172, 59, 2, 1, 1));
        tiles.add(new Tile(172, 18, 3, 1, 3));
        tiles.add(new Tile(172, 167, 4, 1, 2));
        tiles.add(new Tile(172, 31, 5, 1, 4));
        tiles.add(new Tile(172, 23, 0, 0, 2));
        tiles.add(new Tile(172, 130, 1, 0, 3));
        tiles.add(new Tile(172, 130, 2, 0, 3));
        tiles.add(new Tile(172, 46, 3, 0, 1));
        tiles.add(new Tile(172, 21, 4, 0, 3));
        tiles.add(new Tile(172, 136, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_173_NAME", "Bumpy Ride"));
        puzzles.add(new Puzzle(173, 7, 24500L, 33, 0L, 0));
        tiles.add(new Tile(173, 45, 0, 5, 4));
        tiles.add(new Tile(173, 8, 1, 5, 4));
        tiles.add(new Tile(173, 35, 2, 5, 1));
        tiles.add(new Tile(173, 44, 3, 5, 2));
        tiles.add(new Tile(173, 44, 4, 5, 2));
        tiles.add(new Tile(173, 3, 5, 5, 3));
        tiles.add(new Tile(173, 44, 0, 4, 1));
        tiles.add(new Tile(173, 33, 1, 4, 1));
        tiles.add(new Tile(173, 39, 2, 4, 4));
        tiles.add(new Tile(173, 11, 3, 4, 1));
        tiles.add(new Tile(173, 10, 4, 4, 4));
        tiles.add(new Tile(173, 5, 5, 4, 1));
        tiles.add(new Tile(173, 43, 0, 3, 2));
        tiles.add(new Tile(173, 79, 1, 3, 3));
        tiles.add(new Tile(173, 11, 2, 3, 2));
        tiles.add(new Tile(173, 35, 3, 3, 4));
        tiles.add(new Tile(173, 35, 4, 3, 4));
        tiles.add(new Tile(173, 11, 5, 3, 2));
        tiles.add(new Tile(173, 12, 0, 2, 2));
        tiles.add(new Tile(173, 37, 1, 2, 2));
        tiles.add(new Tile(173, 42, 2, 2, 1));
        tiles.add(new Tile(173, 11, 3, 2, 4));
        tiles.add(new Tile(173, 36, 4, 2, 4));
        tiles.add(new Tile(173, 11, 5, 2, 3));
        tiles.add(new Tile(173, 34, 0, 1, 3));
        tiles.add(new Tile(173, 36, 1, 1, 3));
        tiles.add(new Tile(173, 43, 2, 1, 3));
        tiles.add(new Tile(173, 34, 3, 1, 1));
        tiles.add(new Tile(173, 43, 4, 1, 2));
        tiles.add(new Tile(173, 11, 5, 1, 3));
        tiles.add(new Tile(173, 34, 0, 0, 1));
        tiles.add(new Tile(173, 45, 1, 0, 3));
        tiles.add(new Tile(173, 6, 2, 0, 1));
        tiles.add(new Tile(173, 6, 3, 0, 1));
        tiles.add(new Tile(173, 36, 4, 0, 1));
        tiles.add(new Tile(173, 39, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_174_NAME", "Side By Side"));
        puzzles.add(new Puzzle(174, 7, 30096L, 35, 0L, 0));
        tiles.add(new Tile(174, 95, 0, 5, 1));
        tiles.add(new Tile(174, 99, 1, 5, 3));
        tiles.add(new Tile(174, 108, 2, 5, 4));
        tiles.add(new Tile(174, 166, 3, 5, 1));
        tiles.add(new Tile(174, 99, 4, 5, 1));
        tiles.add(new Tile(174, 96, 5, 5, 1));
        tiles.add(new Tile(174, 95, 0, 4, 1));
        tiles.add(new Tile(174, 117, 1, 4, 2));
        tiles.add(new Tile(174, 108, 2, 4, 1));
        tiles.add(new Tile(174, 165, 3, 4, 3));
        tiles.add(new Tile(174, 119, 4, 4, 3));
        tiles.add(new Tile(174, 119, 5, 4, 2));
        tiles.add(new Tile(174, 94, 0, 3, 1));
        tiles.add(new Tile(174, 113, 1, 3, 4));
        tiles.add(new Tile(174, 97, 2, 3, 4));
        tiles.add(new Tile(174, 166, 3, 3, 2));
        tiles.add(new Tile(174, 117, 4, 3, 3));
        tiles.add(new Tile(174, 117, 5, 3, 1));
        tiles.add(new Tile(174, 93, 0, 2, 2));
        tiles.add(new Tile(174, 119, 1, 2, 1));
        tiles.add(new Tile(174, 121, 2, 2, 2));
        tiles.add(new Tile(174, 96, 3, 2, 4));
        tiles.add(new Tile(174, 100, 4, 2, 3));
        tiles.add(new Tile(174, 100, 5, 2, 2));
        tiles.add(new Tile(174, 93, 0, 1, 2));
        tiles.add(new Tile(174, 117, 1, 1, 2));
        tiles.add(new Tile(174, 125, 2, 1, 3));
        tiles.add(new Tile(174, 100, 3, 1, 3));
        tiles.add(new Tile(174, 128, 4, 1, 4));
        tiles.add(new Tile(174, 127, 5, 1, 4));
        tiles.add(new Tile(174, 93, 0, 0, 4));
        tiles.add(new Tile(174, 163, 1, 0, 4));
        tiles.add(new Tile(174, 96, 2, 0, 2));
        tiles.add(new Tile(174, 128, 3, 0, 3));
        tiles.add(new Tile(174, 127, 4, 0, 1));
        tiles.add(new Tile(174, 94, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_175_NAME", "Two And Two"));
        puzzles.add(new Puzzle(175, 7, 23502L, 28, 0L, 0));
        tiles.add(new Tile(175, 60, 0, 5, 1));
        tiles.add(new Tile(175, 61, 1, 5, 1));
        tiles.add(new Tile(175, 61, 2, 5, 3));
        tiles.add(new Tile(175, 61, 3, 5, 4));
        tiles.add(new Tile(175, 61, 4, 5, 1));
        tiles.add(new Tile(175, 76, 5, 5, 4));
        tiles.add(new Tile(175, 61, 0, 4, 3));
        tiles.add(new Tile(175, 75, 1, 4, 4));
        tiles.add(new Tile(175, 72, 2, 4, 3));
        tiles.add(new Tile(175, 72, 3, 4, 2));
        tiles.add(new Tile(175, 60, 4, 4, 4));
        tiles.add(new Tile(175, 76, 5, 4, 2));
        tiles.add(new Tile(175, 76, 0, 3, 3));
        tiles.add(new Tile(175, 64, 1, 3, 4));
        tiles.add(new Tile(175, 73, 2, 3, 1));
        tiles.add(new Tile(175, 76, 3, 3, 3));
        tiles.add(new Tile(175, 82, 4, 3, 4));
        tiles.add(new Tile(175, 60, 5, 3, 3));
        tiles.add(new Tile(175, 75, 0, 2, 3));
        tiles.add(new Tile(175, 67, 1, 2, 3));
        tiles.add(new Tile(175, 71, 2, 2, 2));
        tiles.add(new Tile(175, 74, 3, 2, 4));
        tiles.add(new Tile(175, 61, 4, 2, 4));
        tiles.add(new Tile(175, 61, 5, 2, 3));
        tiles.add(new Tile(175, 74, 0, 1, 1));
        tiles.add(new Tile(175, 69, 1, 1, 3));
        tiles.add(new Tile(175, 69, 2, 1, 2));
        tiles.add(new Tile(175, 83, 3, 1, 2));
        tiles.add(new Tile(175, 60, 4, 1, 3));
        tiles.add(new Tile(175, 60, 5, 1, 4));
        tiles.add(new Tile(175, 72, 0, 0, 3));
        tiles.add(new Tile(175, 74, 1, 0, 2));
        tiles.add(new Tile(175, 69, 2, 0, 3));
        tiles.add(new Tile(175, 84, 3, 0, 4));
        tiles.add(new Tile(175, 70, 4, 0, 1));
        tiles.add(new Tile(175, 75, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_176_NAME", "Toxic Tentacles"));
        puzzles.add(new Puzzle(176, 7, 14377L, 25, 0L, 0));
        tiles.add(new Tile(176, 87, 0, 5, 4));
        tiles.add(new Tile(176, 87, 1, 5, 2));
        tiles.add(new Tile(176, 174, 2, 5, 3));
        tiles.add(new Tile(176, 175, 3, 5, 4));
        tiles.add(new Tile(176, 175, 4, 5, 4));
        tiles.add(new Tile(176, 174, 5, 5, 2));
        tiles.add(new Tile(176, 181, 0, 4, 2));
        tiles.add(new Tile(176, 86, 1, 4, 1));
        tiles.add(new Tile(176, 175, 2, 4, 4));
        tiles.add(new Tile(176, 173, 3, 4, 2));
        tiles.add(new Tile(176, 86, 4, 4, 1));
        tiles.add(new Tile(176, 175, 5, 4, 1));
        tiles.add(new Tile(176, 87, 0, 3, 2));
        tiles.add(new Tile(176, 174, 1, 3, 4));
        tiles.add(new Tile(176, 177, 2, 3, 1));
        tiles.add(new Tile(176, 174, 3, 3, 2));
        tiles.add(new Tile(176, 180, 4, 3, 2));
        tiles.add(new Tile(176, 175, 5, 3, 1));
        tiles.add(new Tile(176, 179, 0, 2, 3));
        tiles.add(new Tile(176, 175, 1, 2, 1));
        tiles.add(new Tile(176, 175, 2, 2, 1));
        tiles.add(new Tile(176, 129, 3, 2, 1));
        tiles.add(new Tile(176, 87, 4, 2, 2));
        tiles.add(new Tile(176, 175, 5, 2, 2));
        tiles.add(new Tile(176, 87, 0, 1, 1));
        tiles.add(new Tile(176, 173, 1, 1, 4));
        tiles.add(new Tile(176, 175, 2, 1, 2));
        tiles.add(new Tile(176, 173, 3, 1, 4));
        tiles.add(new Tile(176, 129, 4, 1, 3));
        tiles.add(new Tile(176, 175, 5, 1, 2));
        tiles.add(new Tile(176, 173, 0, 0, 2));
        tiles.add(new Tile(176, 175, 1, 0, 4));
        tiles.add(new Tile(176, 176, 2, 0, 1));
        tiles.add(new Tile(176, 176, 3, 0, 2));
        tiles.add(new Tile(176, 175, 4, 0, 1));
        tiles.add(new Tile(176, 174, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_177_NAME", "Bridges Are Overrated"));
        puzzles.add(new Puzzle(177, 7, 24348L, 32, 0L, 0));
        tiles.add(new Tile(177, 134, 0, 5, 3));
        tiles.add(new Tile(177, 134, 1, 5, 4));
        tiles.add(new Tile(177, 45, 2, 5, 1));
        tiles.add(new Tile(177, 35, 3, 5, 4));
        tiles.add(new Tile(177, 6, 4, 5, 4));
        tiles.add(new Tile(177, 3, 5, 5, 1));
        tiles.add(new Tile(177, 79, 0, 4, 2));
        tiles.add(new Tile(177, 1, 1, 4, 4));
        tiles.add(new Tile(177, 2, 2, 4, 1));
        tiles.add(new Tile(177, 7, 3, 4, 3));
        tiles.add(new Tile(177, 2, 4, 4, 4));
        tiles.add(new Tile(177, 42, 5, 4, 1));
        tiles.add(new Tile(177, 79, 0, 3, 3));
        tiles.add(new Tile(177, 3, 1, 3, 1));
        tiles.add(new Tile(177, 35, 2, 3, 1));
        tiles.add(new Tile(177, 182, 3, 3, 1));
        tiles.add(new Tile(177, 9, 4, 3, 4));
        tiles.add(new Tile(177, 35, 5, 3, 3));
        tiles.add(new Tile(177, 1, 0, 2, 2));
        tiles.add(new Tile(177, 4, 1, 2, 1));
        tiles.add(new Tile(177, 172, 2, 2, 1));
        tiles.add(new Tile(177, 11, 3, 2, 1));
        tiles.add(new Tile(177, 37, 4, 2, 2));
        tiles.add(new Tile(177, 36, 5, 2, 3));
        tiles.add(new Tile(177, 34, 0, 1, 4));
        tiles.add(new Tile(177, 79, 1, 1, 4));
        tiles.add(new Tile(177, 12, 2, 1, 3));
        tiles.add(new Tile(177, 43, 3, 1, 2));
        tiles.add(new Tile(177, 44, 4, 1, 4));
        tiles.add(new Tile(177, 6, 5, 1, 1));
        tiles.add(new Tile(177, 34, 0, 0, 1));
        tiles.add(new Tile(177, 36, 1, 0, 2));
        tiles.add(new Tile(177, 6, 2, 0, 2));
        tiles.add(new Tile(177, 45, 3, 0, 1));
        tiles.add(new Tile(177, 6, 4, 0, 2));
        tiles.add(new Tile(177, 45, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_178_NAME", "Interchange And Remnants"));
        puzzles.add(new Puzzle(178, 7, 29354L, 37, 0L, 0));
        tiles.add(new Tile(178, 123, 0, 5, 3));
        tiles.add(new Tile(178, 121, 1, 5, 1));
        tiles.add(new Tile(178, 121, 2, 5, 2));
        tiles.add(new Tile(178, 97, 3, 5, 3));
        tiles.add(new Tile(178, 108, 4, 5, 4));
        tiles.add(new Tile(178, 108, 5, 5, 3));
        tiles.add(new Tile(178, 162, 0, 4, 1));
        tiles.add(new Tile(178, 161, 1, 4, 2));
        tiles.add(new Tile(178, 93, 2, 4, 1));
        tiles.add(new Tile(178, 164, 3, 4, 4));
        tiles.add(new Tile(178, 113, 4, 4, 2));
        tiles.add(new Tile(178, 163, 5, 4, 3));
        tiles.add(new Tile(178, 97, 0, 3, 1));
        tiles.add(new Tile(178, 121, 1, 3, 2));
        tiles.add(new Tile(178, 95, 2, 3, 4));
        tiles.add(new Tile(178, 126, 3, 3, 2));
        tiles.add(new Tile(178, 95, 4, 3, 3));
        tiles.add(new Tile(178, 108, 5, 3, 3));
        tiles.add(new Tile(178, 123, 0, 2, 4));
        tiles.add(new Tile(178, 123, 1, 2, 4));
        tiles.add(new Tile(178, 163, 2, 2, 4));
        tiles.add(new Tile(178, 116, 3, 2, 1));
        tiles.add(new Tile(178, 126, 4, 2, 2));
        tiles.add(new Tile(178, 159, 5, 2, 3));
        tiles.add(new Tile(178, 123, 0, 1, 2));
        tiles.add(new Tile(178, 93, 1, 1, 4));
        tiles.add(new Tile(178, 96, 2, 1, 4));
        tiles.add(new Tile(178, 128, 3, 1, 4));
        tiles.add(new Tile(178, 126, 4, 1, 1));
        tiles.add(new Tile(178, 163, 5, 1, 4));
        tiles.add(new Tile(178, 95, 0, 0, 4));
        tiles.add(new Tile(178, 166, 1, 0, 1));
        tiles.add(new Tile(178, 165, 2, 0, 3));
        tiles.add(new Tile(178, 165, 3, 0, 3));
        tiles.add(new Tile(178, 165, 4, 0, 2));
        tiles.add(new Tile(178, 166, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_179_NAME", "One Strand"));
        puzzles.add(new Puzzle(179, 7, 27920L, 33, 0L, 0));
        tiles.add(new Tile(179, 134, 0, 5, 1));
        tiles.add(new Tile(179, 2, 1, 5, 4));
        tiles.add(new Tile(179, 1, 2, 5, 1));
        tiles.add(new Tile(179, 12, 3, 5, 3));
        tiles.add(new Tile(179, 184, 4, 5, 2));
        tiles.add(new Tile(179, 35, 5, 5, 1));
        tiles.add(new Tile(179, 172, 0, 4, 3));
        tiles.add(new Tile(179, 3, 1, 4, 3));
        tiles.add(new Tile(179, 172, 2, 4, 4));
        tiles.add(new Tile(179, 34, 3, 4, 1));
        tiles.add(new Tile(179, 35, 4, 4, 4));
        tiles.add(new Tile(179, 3, 5, 4, 3));
        tiles.add(new Tile(179, 172, 0, 3, 3));
        tiles.add(new Tile(179, 134, 1, 3, 4));
        tiles.add(new Tile(179, 1, 2, 3, 1));
        tiles.add(new Tile(179, 44, 3, 3, 3));
        tiles.add(new Tile(179, 45, 4, 3, 3));
        tiles.add(new Tile(179, 33, 5, 3, 1));
        tiles.add(new Tile(179, 10, 0, 2, 4));
        tiles.add(new Tile(179, 44, 1, 2, 2));
        tiles.add(new Tile(179, 39, 2, 2, 1));
        tiles.add(new Tile(179, 11, 3, 2, 1));
        tiles.add(new Tile(179, 33, 4, 2, 2));
        tiles.add(new Tile(179, 184, 5, 2, 3));
        tiles.add(new Tile(179, 79, 0, 1, 1));
        tiles.add(new Tile(179, 43, 1, 1, 2));
        tiles.add(new Tile(179, 39, 2, 1, 1));
        tiles.add(new Tile(179, 11, 3, 1, 4));
        tiles.add(new Tile(179, 79, 4, 1, 4));
        tiles.add(new Tile(179, 39, 5, 1, 3));
        tiles.add(new Tile(179, 39, 0, 0, 1));
        tiles.add(new Tile(179, 79, 1, 0, 4));
        tiles.add(new Tile(179, 79, 2, 0, 4));
        tiles.add(new Tile(179, 37, 3, 0, 3));
        tiles.add(new Tile(179, 37, 4, 0, 3));
        tiles.add(new Tile(179, 39, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_180_NAME", "Connecting Rails"));
        puzzles.add(new Puzzle(180, 7, 38799L, 41, 0L, 0));
        tiles.add(new Tile(180, 93, 0, 5, 3));
        tiles.add(new Tile(180, 125, 1, 5, 3));
        tiles.add(new Tile(180, 125, 2, 5, 4));
        tiles.add(new Tile(180, 93, 3, 5, 2));
        tiles.add(new Tile(180, 166, 4, 5, 1));
        tiles.add(new Tile(180, 93, 5, 5, 2));
        tiles.add(new Tile(180, 94, 0, 4, 4));
        tiles.add(new Tile(180, 101, 1, 4, 4));
        tiles.add(new Tile(180, 118, 2, 4, 1));
        tiles.add(new Tile(180, 162, 3, 4, 1));
        tiles.add(new Tile(180, 111, 4, 4, 3));
        tiles.add(new Tile(180, 123, 5, 4, 4));
        tiles.add(new Tile(180, 161, 0, 3, 2));
        tiles.add(new Tile(180, 124, 1, 3, 2));
        tiles.add(new Tile(180, 125, 2, 3, 3));
        tiles.add(new Tile(180, 110, 3, 3, 4));
        tiles.add(new Tile(180, 107, 4, 3, 1));
        tiles.add(new Tile(180, 162, 5, 3, 2));
        tiles.add(new Tile(180, 160, 0, 2, 1));
        tiles.add(new Tile(180, 100, 1, 2, 2));
        tiles.add(new Tile(180, 100, 2, 2, 2));
        tiles.add(new Tile(180, 157, 3, 2, 1));
        tiles.add(new Tile(180, 94, 4, 2, 2));
        tiles.add(new Tile(180, 94, 5, 2, 4));
        tiles.add(new Tile(180, 161, 0, 1, 3));
        tiles.add(new Tile(180, 124, 1, 1, 3));
        tiles.add(new Tile(180, 124, 2, 1, 4));
        tiles.add(new Tile(180, 161, 3, 1, 2));
        tiles.add(new Tile(180, 103, 4, 1, 1));
        tiles.add(new Tile(180, 161, 5, 1, 1));
        tiles.add(new Tile(180, 162, 0, 0, 4));
        tiles.add(new Tile(180, 101, 1, 0, 4));
        tiles.add(new Tile(180, 124, 2, 0, 4));
        tiles.add(new Tile(180, 123, 3, 0, 3));
        tiles.add(new Tile(180, 103, 4, 0, 1));
        tiles.add(new Tile(180, 162, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_181_NAME", "Canal"));
        puzzles.add(new Puzzle(181, 7, 24256L, 31, 0L, 0));
        tiles.add(new Tile(181, 57, 0, 5, 4));
        tiles.add(new Tile(181, 38, 1, 5, 4));
        tiles.add(new Tile(181, 32, 2, 5, 4));
        tiles.add(new Tile(181, 131, 3, 5, 1));
        tiles.add(new Tile(181, 168, 4, 5, 1));
        tiles.add(new Tile(181, 38, 5, 5, 1));
        tiles.add(new Tile(181, 135, 0, 4, 1));
        tiles.add(new Tile(181, 46, 1, 4, 1));
        tiles.add(new Tile(181, 59, 2, 4, 3));
        tiles.add(new Tile(181, 15, 3, 4, 4));
        tiles.add(new Tile(181, 135, 4, 4, 2));
        tiles.add(new Tile(181, 57, 5, 4, 3));
        tiles.add(new Tile(181, 15, 0, 3, 3));
        tiles.add(new Tile(181, 133, 1, 3, 1));
        tiles.add(new Tile(181, 41, 2, 3, 1));
        tiles.add(new Tile(181, 85, 3, 3, 3));
        tiles.add(new Tile(181, 47, 4, 3, 2));
        tiles.add(new Tile(181, 85, 5, 3, 1));
        tiles.add(new Tile(181, 56, 0, 2, 1));
        tiles.add(new Tile(181, 19, 1, 2, 4));
        tiles.add(new Tile(181, 53, 2, 2, 1));
        tiles.add(new Tile(181, 40, 3, 2, 1));
        tiles.add(new Tile(181, 40, 4, 2, 4));
        tiles.add(new Tile(181, 41, 5, 2, 1));
        tiles.add(new Tile(181, 13, 0, 1, 3));
        tiles.add(new Tile(181, 41, 1, 1, 3));
        tiles.add(new Tile(181, 53, 2, 1, 4));
        tiles.add(new Tile(181, 53, 3, 1, 2));
        tiles.add(new Tile(181, 40, 4, 1, 3));
        tiles.add(new Tile(181, 50, 5, 1, 2));
        tiles.add(new Tile(181, 41, 0, 0, 3));
        tiles.add(new Tile(181, 53, 1, 0, 3));
        tiles.add(new Tile(181, 53, 2, 0, 1));
        tiles.add(new Tile(181, 53, 3, 0, 1));
        tiles.add(new Tile(181, 40, 4, 0, 3));
        tiles.add(new Tile(181, 50, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_182_NAME", "Runic Symbols"));
        puzzles.add(new Puzzle(182, 7, 20044L, 30, 0L, 0));
        tiles.add(new Tile(182, 71, 0, 5, 2));
        tiles.add(new Tile(182, 83, 1, 5, 2));
        tiles.add(new Tile(182, 60, 2, 5, 2));
        tiles.add(new Tile(182, 81, 3, 5, 2));
        tiles.add(new Tile(182, 76, 4, 5, 1));
        tiles.add(new Tile(182, 75, 5, 5, 3));
        tiles.add(new Tile(182, 71, 0, 4, 2));
        tiles.add(new Tile(182, 83, 1, 4, 1));
        tiles.add(new Tile(182, 61, 2, 4, 3));
        tiles.add(new Tile(182, 61, 3, 4, 4));
        tiles.add(new Tile(182, 74, 4, 4, 4));
        tiles.add(new Tile(182, 65, 5, 4, 4));
        tiles.add(new Tile(182, 76, 0, 3, 4));
        tiles.add(new Tile(182, 61, 1, 3, 2));
        tiles.add(new Tile(182, 60, 2, 3, 2));
        tiles.add(new Tile(182, 81, 3, 3, 1));
        tiles.add(new Tile(182, 60, 4, 3, 3));
        tiles.add(new Tile(182, 65, 5, 3, 3));
        tiles.add(new Tile(182, 71, 0, 2, 3));
        tiles.add(new Tile(182, 73, 1, 2, 3));
        tiles.add(new Tile(182, 76, 2, 2, 1));
        tiles.add(new Tile(182, 81, 3, 2, 3));
        tiles.add(new Tile(182, 60, 4, 2, 4));
        tiles.add(new Tile(182, 64, 5, 2, 3));
        tiles.add(new Tile(182, 84, 0, 1, 1));
        tiles.add(new Tile(182, 63, 1, 1, 4));
        tiles.add(new Tile(182, 70, 2, 1, 4));
        tiles.add(new Tile(182, 64, 3, 1, 2));
        tiles.add(new Tile(182, 66, 4, 1, 3));
        tiles.add(new Tile(182, 62, 5, 1, 1));
        tiles.add(new Tile(182, 83, 0, 0, 3));
        tiles.add(new Tile(182, 73, 1, 0, 4));
        tiles.add(new Tile(182, 72, 2, 0, 4));
        tiles.add(new Tile(182, 74, 3, 0, 4));
        tiles.add(new Tile(182, 67, 4, 0, 2));
        tiles.add(new Tile(182, 75, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_183_NAME", "G"));
        puzzles.add(new Puzzle(183, 7, 16931L, 36, 0L, 0));
        tiles.add(new Tile(183, 174, 0, 5, 1));
        tiles.add(new Tile(183, 175, 1, 5, 2));
        tiles.add(new Tile(183, 173, 2, 5, 4));
        tiles.add(new Tile(183, 89, 3, 5, 3));
        tiles.add(new Tile(183, 90, 4, 5, 3));
        tiles.add(new Tile(183, 88, 5, 5, 3));
        tiles.add(new Tile(183, 173, 0, 4, 4));
        tiles.add(new Tile(183, 180, 1, 4, 3));
        tiles.add(new Tile(183, 87, 2, 4, 3));
        tiles.add(new Tile(183, 90, 3, 4, 2));
        tiles.add(new Tile(183, 174, 4, 4, 3));
        tiles.add(new Tile(183, 173, 5, 4, 4));
        tiles.add(new Tile(183, 89, 0, 3, 3));
        tiles.add(new Tile(183, 90, 1, 3, 2));
        tiles.add(new Tile(183, 90, 2, 3, 2));
        tiles.add(new Tile(183, 89, 3, 3, 4));
        tiles.add(new Tile(183, 175, 4, 3, 4));
        tiles.add(new Tile(183, 181, 5, 3, 3));
        tiles.add(new Tile(183, 90, 0, 2, 4));
        tiles.add(new Tile(183, 88, 1, 2, 2));
        tiles.add(new Tile(183, 89, 2, 2, 1));
        tiles.add(new Tile(183, 180, 3, 2, 4));
        tiles.add(new Tile(183, 175, 4, 2, 3));
        tiles.add(new Tile(183, 181, 5, 2, 4));
        tiles.add(new Tile(183, 89, 0, 1, 4));
        tiles.add(new Tile(183, 90, 1, 1, 2));
        tiles.add(new Tile(183, 89, 2, 1, 4));
        tiles.add(new Tile(183, 181, 3, 1, 4));
        tiles.add(new Tile(183, 176, 4, 1, 4));
        tiles.add(new Tile(183, 173, 5, 1, 4));
        tiles.add(new Tile(183, 173, 0, 0, 4));
        tiles.add(new Tile(183, 175, 1, 0, 3));
        tiles.add(new Tile(183, 173, 2, 0, 4));
        tiles.add(new Tile(183, 178, 3, 0, 1));
        tiles.add(new Tile(183, 173, 4, 0, 3));
        tiles.add(new Tile(183, 179, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_184_NAME", "Jam Packed"));
        puzzles.add(new Puzzle(184, 7, 23529L, 23, 0L, 0));
        tiles.add(new Tile(184, 58, 0, 5, 1));
        tiles.add(new Tile(184, 135, 1, 5, 3));
        tiles.add(new Tile(184, 38, 2, 5, 2));
        tiles.add(new Tile(184, 26, 3, 5, 2));
        tiles.add(new Tile(184, 137, 4, 5, 1));
        tiles.add(new Tile(184, 21, 5, 5, 2));
        tiles.add(new Tile(184, 77, 0, 4, 2));
        tiles.add(new Tile(184, 170, 1, 4, 1));
        tiles.add(new Tile(184, 171, 2, 4, 1));
        tiles.add(new Tile(184, 49, 3, 4, 1));
        tiles.add(new Tile(184, 27, 4, 4, 4));
        tiles.add(new Tile(184, 49, 5, 4, 1));
        tiles.add(new Tile(184, 29, 0, 3, 3));
        tiles.add(new Tile(184, 18, 1, 3, 1));
        tiles.add(new Tile(184, 46, 2, 3, 3));
        tiles.add(new Tile(184, 170, 3, 3, 2));
        tiles.add(new Tile(184, 26, 4, 3, 4));
        tiles.add(new Tile(184, 49, 5, 3, 3));
        tiles.add(new Tile(184, 135, 0, 2, 4));
        tiles.add(new Tile(184, 137, 1, 2, 3));
        tiles.add(new Tile(184, 59, 2, 2, 4));
        tiles.add(new Tile(184, 48, 3, 2, 1));
        tiles.add(new Tile(184, 20, 4, 2, 1));
        tiles.add(new Tile(184, 38, 5, 2, 2));
        tiles.add(new Tile(184, 14, 0, 1, 2));
        tiles.add(new Tile(184, 131, 1, 1, 3));
        tiles.add(new Tile(184, 78, 2, 1, 2));
        tiles.add(new Tile(184, 85, 3, 1, 3));
        tiles.add(new Tile(184, 41, 4, 1, 1));
        tiles.add(new Tile(184, 41, 5, 1, 2));
        tiles.add(new Tile(184, 80, 0, 0, 2));
        tiles.add(new Tile(184, 18, 1, 0, 2));
        tiles.add(new Tile(184, 19, 2, 0, 4));
        tiles.add(new Tile(184, 13, 3, 0, 2));
        tiles.add(new Tile(184, 32, 4, 0, 4));
        tiles.add(new Tile(184, 136, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_185_NAME", "Pure Water"));
        puzzles.add(new Puzzle(185, 7, 45207L, 47, 0L, 0));
        tiles.add(new Tile(185, 60, 0, 5, 4));
        tiles.add(new Tile(185, 81, 1, 5, 4));
        tiles.add(new Tile(185, 81, 2, 5, 1));
        tiles.add(new Tile(185, 60, 3, 5, 3));
        tiles.add(new Tile(185, 76, 4, 5, 2));
        tiles.add(new Tile(185, 76, 5, 5, 4));
        tiles.add(new Tile(185, 81, 0, 4, 4));
        tiles.add(new Tile(185, 81, 1, 4, 1));
        tiles.add(new Tile(185, 82, 2, 4, 1));
        tiles.add(new Tile(185, 82, 3, 4, 1));
        tiles.add(new Tile(185, 82, 4, 4, 1));
        tiles.add(new Tile(185, 60, 5, 4, 2));
        tiles.add(new Tile(185, 61, 0, 3, 4));
        tiles.add(new Tile(185, 76, 1, 3, 3));
        tiles.add(new Tile(185, 81, 2, 3, 2));
        tiles.add(new Tile(185, 60, 3, 3, 2));
        tiles.add(new Tile(185, 61, 4, 3, 4));
        tiles.add(new Tile(185, 76, 5, 3, 2));
        tiles.add(new Tile(185, 81, 0, 2, 2));
        tiles.add(new Tile(185, 82, 1, 2, 1));
        tiles.add(new Tile(185, 60, 2, 2, 2));
        tiles.add(new Tile(185, 60, 3, 2, 3));
        tiles.add(new Tile(185, 81, 4, 2, 2));
        tiles.add(new Tile(185, 60, 5, 2, 4));
        tiles.add(new Tile(185, 81, 0, 1, 1));
        tiles.add(new Tile(185, 81, 1, 1, 1));
        tiles.add(new Tile(185, 76, 2, 1, 3));
        tiles.add(new Tile(185, 61, 3, 1, 2));
        tiles.add(new Tile(185, 71, 4, 1, 3));
        tiles.add(new Tile(185, 74, 5, 1, 4));
        tiles.add(new Tile(185, 76, 0, 0, 1));
        tiles.add(new Tile(185, 60, 1, 0, 1));
        tiles.add(new Tile(185, 81, 2, 0, 1));
        tiles.add(new Tile(185, 60, 3, 0, 2));
        tiles.add(new Tile(185, 72, 4, 0, 3));
        tiles.add(new Tile(185, 69, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_186_NAME", "Mountain Pass"));
        puzzles.add(new Puzzle(186, 7, 32321L, 38, 0L, 0));
        tiles.add(new Tile(186, 35, 0, 5, 3));
        tiles.add(new Tile(186, 35, 1, 5, 2));
        tiles.add(new Tile(186, 3, 2, 5, 2));
        tiles.add(new Tile(186, 134, 3, 5, 3));
        tiles.add(new Tile(186, 2, 4, 5, 2));
        tiles.add(new Tile(186, 3, 5, 5, 1));
        tiles.add(new Tile(186, 12, 0, 4, 2));
        tiles.add(new Tile(186, 34, 1, 4, 1));
        tiles.add(new Tile(186, 134, 2, 4, 2));
        tiles.add(new Tile(186, 134, 3, 4, 2));
        tiles.add(new Tile(186, 39, 4, 4, 2));
        tiles.add(new Tile(186, 36, 5, 4, 1));
        tiles.add(new Tile(186, 43, 0, 3, 2));
        tiles.add(new Tile(186, 45, 1, 3, 3));
        tiles.add(new Tile(186, 34, 2, 3, 4));
        tiles.add(new Tile(186, 35, 3, 3, 3));
        tiles.add(new Tile(186, 37, 4, 3, 1));
        tiles.add(new Tile(186, 36, 5, 3, 4));
        tiles.add(new Tile(186, 36, 0, 2, 2));
        tiles.add(new Tile(186, 36, 1, 2, 2));
        tiles.add(new Tile(186, 12, 2, 2, 4));
        tiles.add(new Tile(186, 35, 3, 2, 2));
        tiles.add(new Tile(186, 36, 4, 2, 2));
        tiles.add(new Tile(186, 36, 5, 2, 1));
        tiles.add(new Tile(186, 11, 0, 1, 2));
        tiles.add(new Tile(186, 39, 1, 1, 3));
        tiles.add(new Tile(186, 36, 2, 1, 3));
        tiles.add(new Tile(186, 12, 3, 1, 4));
        tiles.add(new Tile(186, 43, 4, 1, 1));
        tiles.add(new Tile(186, 45, 5, 1, 3));
        tiles.add(new Tile(186, 1, 0, 0, 1));
        tiles.add(new Tile(186, 172, 1, 0, 1));
        tiles.add(new Tile(186, 10, 2, 0, 1));
        tiles.add(new Tile(186, 10, 3, 0, 1));
        tiles.add(new Tile(186, 3, 4, 0, 1));
        tiles.add(new Tile(186, 45, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_187_NAME", "Overpass"));
        puzzles.add(new Puzzle(187, 7, 17816L, 22, 0L, 0));
        tiles.add(new Tile(187, 93, 0, 5, 2));
        tiles.add(new Tile(187, 162, 1, 5, 1));
        tiles.add(new Tile(187, 157, 2, 5, 4));
        tiles.add(new Tile(187, 102, 3, 5, 1));
        tiles.add(new Tile(187, 161, 4, 5, 3));
        tiles.add(new Tile(187, 95, 5, 5, 4));
        tiles.add(new Tile(187, 93, 0, 4, 1));
        tiles.add(new Tile(187, 125, 1, 4, 1));
        tiles.add(new Tile(187, 100, 2, 4, 3));
        tiles.add(new Tile(187, 94, 3, 4, 3));
        tiles.add(new Tile(187, 97, 4, 4, 2));
        tiles.add(new Tile(187, 94, 5, 4, 1));
        tiles.add(new Tile(187, 185, 0, 3, 3));
        tiles.add(new Tile(187, 186, 1, 3, 1));
        tiles.add(new Tile(187, 120, 2, 3, 1));
        tiles.add(new Tile(187, 186, 3, 3, 4));
        tiles.add(new Tile(187, 95, 4, 3, 3));
        tiles.add(new Tile(187, 186, 5, 3, 1));
        tiles.add(new Tile(187, 164, 0, 2, 1));
        tiles.add(new Tile(187, 114, 1, 2, 3));
        tiles.add(new Tile(187, 116, 2, 2, 3));
        tiles.add(new Tile(187, 113, 3, 2, 3));
        tiles.add(new Tile(187, 113, 4, 2, 2));
        tiles.add(new Tile(187, 163, 5, 2, 1));
        tiles.add(new Tile(187, 119, 0, 1, 4));
        tiles.add(new Tile(187, 159, 1, 1, 1));
        tiles.add(new Tile(187, 122, 2, 1, 2));
        tiles.add(new Tile(187, 120, 3, 1, 1));
        tiles.add(new Tile(187, 120, 4, 1, 3));
        tiles.add(new Tile(187, 96, 5, 1, 2));
        tiles.add(new Tile(187, 159, 0, 0, 4));
        tiles.add(new Tile(187, 103, 1, 0, 4));
        tiles.add(new Tile(187, 127, 2, 0, 4));
        tiles.add(new Tile(187, 98, 3, 0, 3));
        tiles.add(new Tile(187, 119, 4, 0, 4));
        tiles.add(new Tile(187, 163, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_188_NAME", "Trailing"));
        puzzles.add(new Puzzle(188, 7, 39882L, 41, 0L, 0));
        tiles.add(new Tile(188, 18, 0, 5, 1));
        tiles.add(new Tile(188, 167, 1, 5, 1));
        tiles.add(new Tile(188, 32, 2, 5, 1));
        tiles.add(new Tile(188, 56, 3, 5, 4));
        tiles.add(new Tile(188, 15, 4, 5, 2));
        tiles.add(new Tile(188, 80, 5, 5, 3));
        tiles.add(new Tile(188, 58, 0, 4, 2));
        tiles.add(new Tile(188, 58, 1, 4, 2));
        tiles.add(new Tile(188, 46, 2, 4, 1));
        tiles.add(new Tile(188, 46, 3, 4, 4));
        tiles.add(new Tile(188, 137, 4, 4, 3));
        tiles.add(new Tile(188, 168, 5, 4, 3));
        tiles.add(new Tile(188, 171, 0, 3, 4));
        tiles.add(new Tile(188, 14, 1, 3, 2));
        tiles.add(new Tile(188, 80, 2, 3, 1));
        tiles.add(new Tile(188, 136, 3, 3, 4));
        tiles.add(new Tile(188, 23, 4, 3, 2));
        tiles.add(new Tile(188, 51, 5, 3, 4));
        tiles.add(new Tile(188, 31, 0, 2, 1));
        tiles.add(new Tile(188, 19, 1, 2, 2));
        tiles.add(new Tile(188, 20, 2, 2, 3));
        tiles.add(new Tile(188, 85, 3, 2, 4));
        tiles.add(new Tile(188, 130, 4, 2, 4));
        tiles.add(new Tile(188, 25, 5, 2, 4));
        tiles.add(new Tile(188, 38, 0, 1, 3));
        tiles.add(new Tile(188, 32, 1, 1, 1));
        tiles.add(new Tile(188, 46, 2, 1, 2));
        tiles.add(new Tile(188, 51, 3, 1, 2));
        tiles.add(new Tile(188, 46, 4, 1, 2));
        tiles.add(new Tile(188, 58, 5, 1, 4));
        tiles.add(new Tile(188, 57, 0, 0, 4));
        tiles.add(new Tile(188, 15, 1, 0, 3));
        tiles.add(new Tile(188, 57, 2, 0, 2));
        tiles.add(new Tile(188, 80, 3, 0, 1));
        tiles.add(new Tile(188, 30, 4, 0, 2));
        tiles.add(new Tile(188, 131, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_189_NAME", "ti"));
        puzzles.add(new Puzzle(189, 7, 18270L, 23, 0L, 0));
        tiles.add(new Tile(189, 1, 0, 5, 3));
        tiles.add(new Tile(189, 172, 1, 5, 4));
        tiles.add(new Tile(189, 11, 2, 5, 4));
        tiles.add(new Tile(189, 37, 3, 5, 4));
        tiles.add(new Tile(189, 36, 4, 5, 2));
        tiles.add(new Tile(189, 34, 5, 5, 2));
        tiles.add(new Tile(189, 10, 0, 4, 1));
        tiles.add(new Tile(189, 34, 1, 4, 4));
        tiles.add(new Tile(189, 35, 2, 4, 1));
        tiles.add(new Tile(189, 45, 3, 4, 2));
        tiles.add(new Tile(189, 35, 4, 4, 2));
        tiles.add(new Tile(189, 45, 5, 4, 1));
        tiles.add(new Tile(189, 10, 0, 3, 3));
        tiles.add(new Tile(189, 45, 1, 3, 1));
        tiles.add(new Tile(189, 182, 2, 3, 3));
        tiles.add(new Tile(189, 35, 3, 3, 2));
        tiles.add(new Tile(189, 9, 4, 3, 4));
        tiles.add(new Tile(189, 6, 5, 3, 1));
        tiles.add(new Tile(189, 172, 0, 2, 4));
        tiles.add(new Tile(189, 12, 1, 2, 1));
        tiles.add(new Tile(189, 9, 2, 2, 4));
        tiles.add(new Tile(189, 3, 3, 2, 4));
        tiles.add(new Tile(189, 7, 4, 2, 1));
        tiles.add(new Tile(189, 3, 5, 2, 1));
        tiles.add(new Tile(189, 2, 0, 1, 4));
        tiles.add(new Tile(189, 35, 1, 1, 1));
        tiles.add(new Tile(189, 182, 2, 1, 4));
        tiles.add(new Tile(189, 9, 3, 1, 3));
        tiles.add(new Tile(189, 8, 4, 1, 4));
        tiles.add(new Tile(189, 45, 5, 1, 1));
        tiles.add(new Tile(189, 42, 0, 0, 1));
        tiles.add(new Tile(189, 10, 1, 0, 4));
        tiles.add(new Tile(189, 2, 2, 0, 1));
        tiles.add(new Tile(189, 3, 3, 0, 4));
        tiles.add(new Tile(189, 43, 4, 0, 4));
        tiles.add(new Tile(189, 44, 5, 0, 3));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_190_NAME", "Interchangeable"));
        puzzles.add(new Puzzle(190, 7, 42650L, 51, 0L, 0));
        tiles.add(new Tile(190, 164, 0, 5, 2));
        tiles.add(new Tile(190, 117, 1, 5, 1));
        tiles.add(new Tile(190, 119, 2, 5, 1));
        tiles.add(new Tile(190, 126, 3, 5, 3));
        tiles.add(new Tile(190, 120, 4, 5, 3));
        tiles.add(new Tile(190, 160, 5, 5, 4));
        tiles.add(new Tile(190, 113, 0, 4, 1));
        tiles.add(new Tile(190, 159, 1, 4, 2));
        tiles.add(new Tile(190, 128, 2, 4, 3));
        tiles.add(new Tile(190, 96, 3, 4, 2));
        tiles.add(new Tile(190, 108, 4, 4, 3));
        tiles.add(new Tile(190, 102, 5, 4, 3));
        tiles.add(new Tile(190, 115, 0, 3, 3));
        tiles.add(new Tile(190, 110, 1, 3, 1));
        tiles.add(new Tile(190, 157, 2, 3, 1));
        tiles.add(new Tile(190, 102, 3, 3, 1));
        tiles.add(new Tile(190, 105, 4, 3, 3));
        tiles.add(new Tile(190, 107, 5, 3, 4));
        tiles.add(new Tile(190, 126, 0, 2, 4));
        tiles.add(new Tile(190, 157, 1, 2, 2));
        tiles.add(new Tile(190, 96, 2, 2, 2));
        tiles.add(new Tile(190, 95, 3, 2, 1));
        tiles.add(new Tile(190, 157, 4, 2, 2));
        tiles.add(new Tile(190, 157, 5, 2, 3));
        tiles.add(new Tile(190, 159, 0, 1, 2));
        tiles.add(new Tile(190, 104, 1, 1, 2));
        tiles.add(new Tile(190, 108, 2, 1, 4));
        tiles.add(new Tile(190, 94, 3, 1, 3));
        tiles.add(new Tile(190, 107, 4, 1, 1));
        tiles.add(new Tile(190, 103, 5, 1, 1));
        tiles.add(new Tile(190, 96, 0, 0, 1));
        tiles.add(new Tile(190, 159, 1, 0, 3));
        tiles.add(new Tile(190, 163, 2, 0, 2));
        tiles.add(new Tile(190, 117, 3, 0, 3));
        tiles.add(new Tile(190, 158, 4, 0, 1));
        tiles.add(new Tile(190, 96, 5, 0, 4));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_191_NAME", "Districts"));
        puzzles.add(new Puzzle(191, 7, 30761L, 36, 0L, 0));
        tiles.add(new Tile(191, 51, 0, 5, 2));
        tiles.add(new Tile(191, 25, 1, 5, 1));
        tiles.add(new Tile(191, 19, 2, 5, 1));
        tiles.add(new Tile(191, 31, 3, 5, 2));
        tiles.add(new Tile(191, 51, 4, 5, 4));
        tiles.add(new Tile(191, 46, 5, 5, 4));
        tiles.add(new Tile(191, 132, 0, 4, 1));
        tiles.add(new Tile(191, 25, 1, 4, 2));
        tiles.add(new Tile(191, 17, 2, 4, 4));
        tiles.add(new Tile(191, 38, 3, 4, 2));
        tiles.add(new Tile(191, 132, 4, 4, 4));
        tiles.add(new Tile(191, 132, 5, 4, 1));
        tiles.add(new Tile(191, 22, 0, 3, 1));
        tiles.add(new Tile(191, 170, 1, 3, 3));
        tiles.add(new Tile(191, 30, 2, 3, 3));
        tiles.add(new Tile(191, 169, 3, 3, 2));
        tiles.add(new Tile(191, 46, 4, 3, 4));
        tiles.add(new Tile(191, 51, 5, 3, 1));
        tiles.add(new Tile(191, 132, 0, 2, 1));
        tiles.add(new Tile(191, 46, 1, 2, 1));
        tiles.add(new Tile(191, 56, 2, 2, 3));
        tiles.add(new Tile(191, 57, 3, 2, 1));
        tiles.add(new Tile(191, 21, 4, 2, 1));
        tiles.add(new Tile(191, 168, 5, 2, 3));
        tiles.add(new Tile(191, 22, 0, 1, 3));
        tiles.add(new Tile(191, 24, 1, 1, 2));
        tiles.add(new Tile(191, 56, 2, 1, 1));
        tiles.add(new Tile(191, 58, 3, 1, 4));
        tiles.add(new Tile(191, 23, 4, 1, 4));
        tiles.add(new Tile(191, 23, 5, 1, 4));
        tiles.add(new Tile(191, 24, 0, 0, 3));
        tiles.add(new Tile(191, 32, 1, 0, 2));
        tiles.add(new Tile(191, 167, 2, 0, 4));
        tiles.add(new Tile(191, 80, 3, 0, 3));
        tiles.add(new Tile(191, 25, 4, 0, 4));
        tiles.add(new Tile(191, 51, 5, 0, 2));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_192_NAME", "Dirt Track"));
        puzzles.add(new Puzzle(192, 7, 29561L, 35, 0L, 0));
        tiles.add(new Tile(192, 72, 0, 5, 4));
        tiles.add(new Tile(192, 74, 1, 5, 2));
        tiles.add(new Tile(192, 67, 2, 5, 3));
        tiles.add(new Tile(192, 67, 3, 5, 2));
        tiles.add(new Tile(192, 67, 4, 5, 1));
        tiles.add(new Tile(192, 62, 5, 5, 3));
        tiles.add(new Tile(192, 67, 0, 4, 4));
        tiles.add(new Tile(192, 65, 1, 4, 3));
        tiles.add(new Tile(192, 66, 2, 4, 3));
        tiles.add(new Tile(192, 66, 3, 4, 1));
        tiles.add(new Tile(192, 68, 4, 4, 4));
        tiles.add(new Tile(192, 62, 5, 4, 4));
        tiles.add(new Tile(192, 65, 0, 3, 2));
        tiles.add(new Tile(192, 69, 1, 3, 2));
        tiles.add(new Tile(192, 69, 2, 3, 4));
        tiles.add(new Tile(192, 71, 3, 3, 2));
        tiles.add(new Tile(192, 66, 4, 3, 2));
        tiles.add(new Tile(192, 75, 5, 3, 2));
        tiles.add(new Tile(192, 66, 0, 2, 4));
        tiles.add(new Tile(192, 62, 1, 2, 2));
        tiles.add(new Tile(192, 74, 2, 2, 3));
        tiles.add(new Tile(192, 73, 3, 2, 4));
        tiles.add(new Tile(192, 66, 4, 2, 2));
        tiles.add(new Tile(192, 62, 5, 2, 3));
        tiles.add(new Tile(192, 65, 0, 1, 2));
        tiles.add(new Tile(192, 66, 1, 1, 1));
        tiles.add(new Tile(192, 62, 2, 1, 4));
        tiles.add(new Tile(192, 71, 3, 1, 3));
        tiles.add(new Tile(192, 62, 4, 1, 4));
        tiles.add(new Tile(192, 67, 5, 1, 2));
        tiles.add(new Tile(192, 62, 0, 0, 4));
        tiles.add(new Tile(192, 67, 1, 0, 1));
        tiles.add(new Tile(192, 75, 2, 0, 2));
        tiles.add(new Tile(192, 71, 3, 0, 1));
        tiles.add(new Tile(192, 69, 4, 0, 4));
        tiles.add(new Tile(192, 69, 5, 0, 1));

        texts.add(new Text(Constants.LANGUAGE_EN, "PUZZLE_193_NAME", "Idyllic"));
        puzzles.add(new Puzzle(193, 7, 31758L, 35, 0L, 0));
        tiles.add(new Tile(193, 35, 0, 5, 3));
        tiles.add(new Tile(193, 6, 1, 5, 3));
        tiles.add(new Tile(193, 36, 2, 5, 2));
        tiles.add(new Tile(193, 8, 3, 5, 4));
        tiles.add(new Tile(193, 35, 4, 5, 3));
        tiles.add(new Tile(193, 36, 5, 5, 4));
        tiles.add(new Tile(193, 9, 0, 4, 3));
        tiles.add(new Tile(193, 36, 1, 4, 4));
        tiles.add(new Tile(193, 39, 2, 4, 2));
        tiles.add(new Tile(193, 182, 3, 4, 4));
        tiles.add(new Tile(193, 184, 4, 4, 4));
        tiles.add(new Tile(193, 79, 5, 4, 4));
        tiles.add(new Tile(193, 33, 0, 3, 2));
        tiles.add(new Tile(193, 43, 1, 3, 4));
        tiles.add(new Tile(193, 3, 2, 3, 4));
        tiles.add(new Tile(193, 7, 3, 3, 2));
        tiles.add(new Tile(193, 7, 4, 3, 2));
        tiles.add(new Tile(193, 134, 5, 3, 2));
        tiles.add(new Tile(193, 2, 0, 2, 2));
        tiles.add(new Tile(193, 34, 1, 2, 4));
        tiles.add(new Tile(193, 35, 2, 2, 4));
        tiles.add(new Tile(193, 8, 3, 2, 3));
        tiles.add(new Tile(193, 182, 4, 2, 1));
        tiles.add(new Tile(193, 35, 5, 2, 4));
        tiles.add(new Tile(193, 79, 0, 1, 4));
        tiles.add(new Tile(193, 44, 1, 1, 2));
        tiles.add(new Tile(193, 45, 2, 1, 4));
        tiles.add(new Tile(193, 3, 3, 1, 1));
        tiles.add(new Tile(193, 9, 4, 1, 3));
        tiles.add(new Tile(193, 34, 5, 1, 4));
        tiles.add(new Tile(193, 36, 0, 0, 2));
        tiles.add(new Tile(193, 34, 1, 0, 2));
        tiles.add(new Tile(193, 44, 2, 0, 1));
        tiles.add(new Tile(193, 3, 3, 0, 4));
        tiles.add(new Tile(193, 35, 4, 0, 4));
        tiles.add(new Tile(193, 43, 5, 0, 3));

        Puzzle.saveInTx(puzzles);
        Text.saveInTx(texts);
        Tile.saveInTx(tiles);
    }

    private void createSetting() {
        List<Setting> settings = new ArrayList<>();
        settings.add(new Setting(Constants.SETTING_MUSIC, true));
        settings.add(new Setting(Constants.SETTING_SOUNDS, true));
        settings.add(new Setting(Constants.SETTING_MIN_ZOOM, 0.50f, 0.1f, 1.0f));
        settings.add(new Setting(Constants.SETTING_MAX_ZOOM, 1.75f, 1.0f, 3.0f));
        settings.add(new Setting(Constants.SETTING_ZEN_MODE, false));
        settings.add(new Setting(Constants.SETTING_HIDE_UNSTOCKED_BOOSTS, false));
        settings.add(new Setting(Constants.SETTING_PLAYER_NAME, "New Player"));
        settings.add(new Setting(Constants.SETTING_SIGN_IN, true));
        settings.add(new Setting(Constants.SETTING_MAX_CARS, 5, 0, 75));
        settings.add(new Setting(Constants.SETTING_BACKGROUND, "FFFFFF"));
        settings.add(new Setting(Constants.SETTING_AUTOSAVE_FREQUENCY, 10, 0, 60));
        settings.add(new Setting(Constants.SETTING_LANGUAGE, Text.getDefaultLanguage(), Constants.LANGUAGE_MIN, Constants.LANGUAGE_MAX));
        settings.add(new Setting(Constants.SETTING_VIBRATION, false));
        settings.add(new Setting(Constants.SETTING_SOUND_PURCHASING, 0, 0, SoundHelper.purchasingSounds.length));
        settings.add(new Setting(Constants.SETTING_SOUND_ROTATING, 0, 0, SoundHelper.rotatingSounds.length));
        settings.add(new Setting(Constants.SETTING_SOUND_SETTINGS, 0, 0, SoundHelper.settingSounds.length));
        settings.add(new Setting(Constants.SETTING_SONG_MAIN, 0, 0, SoundHelper.mainSongs.length));
        settings.add(new Setting(Constants.SETTING_SONG_PUZZLE, 0, 0, SoundHelper.puzzleSongs.length));
        Setting.saveInTx(settings);

        if (Setting.getSafeBoolean(Constants.SETTING_MUSIC)) {
            SoundHelper.getInstance(callingActivity).playSound(SoundHelper.AUDIO.main);
        }
    }

    private void createStatistic() {
        List<Statistic> statistics = new ArrayList<>();
        statistics.add(new Statistic(Constants.STATISTIC_PUZZLES_COMPLETED, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_TILES_ROTATED, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_QUESTS_COMPLETED, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_PUZZLES_COMPLETED_FULLY, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_BOOSTS_USED, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_CURRENCY, 100000));
        statistics.add(new Statistic(Constants.STATISTIC_TAPJOY_COINS, 0));
        statistics.add(new Statistic(Constants.STATISTIC_LAST_AUTOSAVE, 0L));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_1, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_2, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_3, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_4, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_5, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_6, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_7, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_8, 0, 0));
        statistics.add(new Statistic(Constants.STATISTIC_COMPLETE_PACK_9, 0, 0));
        Statistic.saveInTx(statistics);
    }

    private void createStoreItem() {
        List<ShopItem> shopItems = new ArrayList<>();
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_UNDO, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_UNDO, 1, 4, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_UNDO_10, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_UNDO, 10, 36, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_UNDO_100, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_UNDO, 100, 320, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_TIME, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_TIME, 1, 6, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_TIME_10, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_TIME, 10, 54, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_TIME_100, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_TIME, 100, 480, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_MOVES, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_MOVE, 1, 6, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_MOVES_10, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_MOVE, 10, 54, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_MOVES_100, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_MOVE, 100, 480, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_SHUFFLE, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_SHUFFLE, 1, 8, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_SHUFFLE_10, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_SHUFFLE, 10, 72, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_SHUFFLE_100, Constants.STORE_CATEGORY_BOOSTS, Constants.BOOST_SHUFFLE, 100, 640, 0, false));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_TIME_UPGRADE, Constants.STORE_CATEGORY_UPGRADES, Constants.BOOST_UNDO, 0, 150, 5, true));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_MOVES_UPGRADE, Constants.STORE_CATEGORY_UPGRADES, Constants.BOOST_MOVE, 0, 150, 5, true));
        shopItems.add(new ShopItem(Constants.ITEM_BOOST_SHUFFLE_UPGRADE, Constants.STORE_CATEGORY_UPGRADES, Constants.BOOST_SHUFFLE, 0, 100, 1, true));
        shopItems.add(new ShopItem(Constants.ITEM_TILE_1, Constants.STORE_CATEGORY_TILES, 500, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_TILE_2, Constants.STORE_CATEGORY_TILES, 500, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_TILE_3, Constants.STORE_CATEGORY_TILES, 500, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_2, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 2, 1000, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_3, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 3, 1000, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_4, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 4, 1300, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_5, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 5, 1300, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_6, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 6, 1300, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_7, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 7, 1800, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_PACK_8, Constants.STORE_CATEGORY_MISC, Constants.STORE_SUBCATEGORY_PACK, 8, 1800, 1, false));
        shopItems.add(new ShopItem(Constants.ITEM_MAX_CARS, Constants.STORE_CATEGORY_MISC, 400, 1, false));
        ShopItem.saveInTx(shopItems);
    }

    private void createStoreCategory() {
        List<ShopCategory> categories = new ArrayList<>();
        categories.add(new ShopCategory(Constants.STORE_CATEGORY_BOOSTS));
        categories.add(new ShopCategory(Constants.STORE_CATEGORY_UPGRADES));
        categories.add(new ShopCategory(Constants.STORE_CATEGORY_TILES));
        categories.add(new ShopCategory(Constants.STORE_CATEGORY_MISC));
        ShopCategory.saveInTx(categories);
    }

    private void createTileType() {
        List<TileType> tileTypes = new ArrayList<>();
        tileTypes.add(new TileType(0, Constants.ENVIRONMENT_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 0));
        tileTypes.add(new TileType(1, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 1));
        tileTypes.add(new TileType(2, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 2));
        tileTypes.add(new TileType(3, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(4, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.HEIGHT_NORMAL, 4));
        tileTypes.add(new TileType(5, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 5));
        tileTypes.add(new TileType(6, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 6));
        tileTypes.add(new TileType(7, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_WATER, Constants.FLOW_ROAD, Constants.FLOW_WATER, Constants.HEIGHT_NORMAL, 7));
        tileTypes.add(new TileType(8, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 8));
        tileTypes.add(new TileType(9, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 9));
        tileTypes.add(new TileType(10, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 10));
        tileTypes.add(new TileType(11, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 11));
        tileTypes.add(new TileType(12, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 12));
        tileTypes.add(new TileType(13, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 13));
        tileTypes.add(new TileType(14, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 14));
        tileTypes.add(new TileType(15, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 15));
        tileTypes.add(new TileType(16, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.HEIGHT_NORMAL, 16));
        tileTypes.add(new TileType(17, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 17));
        tileTypes.add(new TileType(18, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 18));
        tileTypes.add(new TileType(19, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 19));
        tileTypes.add(new TileType(20, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 20));
        tileTypes.add(new TileType(21, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 21));
        tileTypes.add(new TileType(22, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 22));
        tileTypes.add(new TileType(23, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 23));
        tileTypes.add(new TileType(24, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 24));
        tileTypes.add(new TileType(25, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_PATH, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 25));
        tileTypes.add(new TileType(26, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 26));
        tileTypes.add(new TileType(27, Constants.ENVIRONMENT_CITY, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 27));
        tileTypes.add(new TileType(28, Constants.ENVIRONMENT_CITY, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 28));
        tileTypes.add(new TileType(29, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 29));
        tileTypes.add(new TileType(30, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 30));
        tileTypes.add(new TileType(31, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 31));
        tileTypes.add(new TileType(32, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 32));
        tileTypes.add(new TileType(33, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(34, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(35, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(36, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(37, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(38, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(39, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(40, Constants.ENVIRONMENT_CITY, Constants.FLOW_CANAL, Constants.FLOW_NONE, Constants.FLOW_CANAL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(41, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_CANAL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(42, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(43, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(44, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(45, Constants.ENVIRONMENT_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(46, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(47, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(48, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(49, Constants.ENVIRONMENT_CITY, Constants.FLOW_GRASS, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(50, Constants.ENVIRONMENT_CITY, Constants.FLOW_CANAL, Constants.FLOW_CANAL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(51, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(52, Constants.ENVIRONMENT_CITY, Constants.FLOW_CANAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(53, Constants.ENVIRONMENT_CITY, Constants.FLOW_CANAL, Constants.FLOW_CANAL, Constants.FLOW_CANAL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(54, Constants.ENVIRONMENT_CITY, Constants.FLOW_GRASS, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(55, Constants.ENVIRONMENT_CITY, Constants.FLOW_GRASS, Constants.FLOW_GRASS, Constants.FLOW_GRASS, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(56, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(57, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(58, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(59, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(60, Constants.ENVIRONMENT_FOREST, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(61, Constants.ENVIRONMENT_FOREST, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(62, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(63, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(64, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(65, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(66, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_DIRT, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(67, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(68, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(69, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(70, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(71, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(72, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(73, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(74, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(75, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(76, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(77, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(78, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(79, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(80, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(81, Constants.ENVIRONMENT_FOREST, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(82, Constants.ENVIRONMENT_FOREST, Constants.FLOW_RIVER, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(83, Constants.ENVIRONMENT_FOREST, Constants.FLOW_NONE, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(84, Constants.ENVIRONMENT_FOREST, Constants.FLOW_DIRT, Constants.FLOW_DIRT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(85, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(86, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(87, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(88, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(89, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(90, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(91, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_RIVER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(92, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_RIVER, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(93, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(94, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(95, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(96, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(97, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(98, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(99, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(100, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_PATH, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(101, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(102, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(103, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(104, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(105, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(106, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(107, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(108, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(109, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(110, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(111, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(112, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_RAIL, Constants.FLOW_ROAD, Constants.FLOW_RAIL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(113, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(114, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(115, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(116, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(117, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(118, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(119, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(120, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(121, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(122, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(123, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(124, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(125, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(126, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(127, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(128, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(129, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(130, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(131, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 3));
        tileTypes.add(new TileType(132, Constants.ENVIRONMENT_CITY, Constants.FLOW_PATH, Constants.FLOW_ROAD, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(133, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(134, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(135, Constants.ENVIRONMENT_CITY, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 3));
        tileTypes.add(new TileType(136, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 136));
        tileTypes.add(new TileType(137, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, Constants.HEIGHT_NORMAL, 137));
        tileTypes.add(new TileType(138, Constants.ENVIRONMENT_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 138));
        tileTypes.add(new TileType(139, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 139));
        tileTypes.add(new TileType(140, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 140));
        tileTypes.add(new TileType(141, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 141));
        tileTypes.add(new TileType(142, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 142));
        tileTypes.add(new TileType(143, Constants.ENVIRONMENT_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 143));
        tileTypes.add(new TileType(144, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.HEIGHT_NORMAL, 144));
        tileTypes.add(new TileType(145, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 145));
        tileTypes.add(new TileType(146, Constants.ENVIRONMENT_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 146));
        tileTypes.add(new TileType(147, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 147));
        tileTypes.add(new TileType(148, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 148));
        tileTypes.add(new TileType(149, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 149));
        tileTypes.add(new TileType(150, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 150));
        tileTypes.add(new TileType(151, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 151));
        tileTypes.add(new TileType(152, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 152));
        tileTypes.add(new TileType(153, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 153));
        tileTypes.add(new TileType(154, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 154));
        tileTypes.add(new TileType(155, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 155));
        tileTypes.add(new TileType(156, Constants.ENVIRONMENT_GOLF, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.FLOW_GOLF, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 156));
        tileTypes.add(new TileType(157, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_ROAD, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 157));
        tileTypes.add(new TileType(158, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_RAIL, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 158));
        tileTypes.add(new TileType(159, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 159));
        tileTypes.add(new TileType(160, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 160));
        tileTypes.add(new TileType(161, Constants.ENVIRONMENT_DESERT, Constants.FLOW_PATH, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 161));
        tileTypes.add(new TileType(162, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_PATH, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 162));
        tileTypes.add(new TileType(163, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 163));
        tileTypes.add(new TileType(164, Constants.ENVIRONMENT_DESERT, Constants.FLOW_ROAD, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 164));
        tileTypes.add(new TileType(165, Constants.ENVIRONMENT_DESERT, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 165));
        tileTypes.add(new TileType(166, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.FLOW_RAIL, Constants.FLOW_NONE, Constants.HEIGHT_HIGH, 166));
        tileTypes.add(new TileType(167, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 167));
        tileTypes.add(new TileType(168, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 168));
        tileTypes.add(new TileType(169, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 169));
        tileTypes.add(new TileType(170, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 170));
        tileTypes.add(new TileType(171, Constants.ENVIRONMENT_CITY, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 171));
        tileTypes.add(new TileType(172, Constants.ENVIRONMENT_GRASS, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.FLOW_ROAD, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 172));
        tileTypes.add(new TileType(173, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.FLOW_TOXIC, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 173));
        tileTypes.add(new TileType(174, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_TOXIC, Constants.FLOW_TOXIC, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 174));
        tileTypes.add(new TileType(175, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_TOXIC, Constants.FLOW_NONE, Constants.FLOW_TOXIC, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 175));
        tileTypes.add(new TileType(176, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_TOXIC, Constants.FLOW_TOXIC, Constants.FLOW_TOXIC, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 176));
        tileTypes.add(new TileType(177, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_TOXIC, Constants.HEIGHT_NORMAL, 177));
        tileTypes.add(new TileType(178, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 178));
        tileTypes.add(new TileType(179, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 179));
        tileTypes.add(new TileType(180, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 180));
        tileTypes.add(new TileType(181, Constants.ENVIRONMENT_MOUNTAIN, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 181));
        tileTypes.add(new TileType(182, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.FLOW_WATER, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 182));
        tileTypes.add(new TileType(183, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.HEIGHT_NORMAL, 183));
        tileTypes.add(new TileType(184, Constants.ENVIRONMENT_GRASS, Constants.FLOW_WATER, Constants.FLOW_WATER, Constants.FLOW_NONE, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 184));
        tileTypes.add(new TileType(185, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 185));
        tileTypes.add(new TileType(186, Constants.ENVIRONMENT_DESERT, Constants.FLOW_NONE, Constants.HEIGHT_NORMAL, 186));
        TileType.saveInTx(tileTypes);
    }
}
